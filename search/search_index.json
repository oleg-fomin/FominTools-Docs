{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"\ud83d\ude80 Professional Development Tools for Clarion Applications <p>Fomin Tools brings you cutting-edge development libraries and utilities that enhance your Clarion applications with powerful features your users will love. From advanced reporting solutions to intuitive filtering systems, we provide the tools that transform ordinary applications into professional, user-friendly software.</p> \ud83d\udee0\ufe0f Fomin Tools products Fomin Report Builder <p>Runtime report designer for end users - no source code changes needed.</p> \ud83d\uded2 Buy Now Taboga Barcode Library <p>Professional barcode generation component supporting Code 39, Code 128, UPC, EAN and more.</p> \ud83d\uded2 Buy Now Taboga Interactive Filter <p>Right-click filtering for browse procedures with advanced criteria and filter persistence.</p> \ud83d\uded2 Buy Now Taboga Native Excel <p>Direct Excel file creation and manipulation without requiring Excel installation.</p> \ud83d\uded2 Buy Now Taboga Report's Data Exporter <p>Export report and browse data to Excel, CSV and other popular formats.</p> \ud83d\uded2 Buy Now \ud83c\udfe2 Company Heritage Fomin Tools <p>Modern enhancement and continued development of professional Clarion development tools, ensuring compatibility with current Clarion versions while maintaining the quality and reliability developers have come to expect.</p> Taboga Software Legacy <p>Taboga Software, founded by Edgard L. Riba, created innovative Clarion development tools that became industry standards. Fomin Tools proudly continues this tradition, maintaining and enhancing these essential libraries for the modern Clarion community.</p> \ud83c\udfaf Why Choose Our Tools? \ud83d\ude80 Production Ready <p>All our tools are battle-tested in real-world applications, trusted by developers worldwide for mission-critical business software.</p> \ud83d\udd27 Easy Integration <p>Simple template-based integration means you can add powerful features to your applications in minutes, not hours.</p> \ud83d\udcc8 User Empowerment <p>Transform your applications from developer-dependent to user-autonomous, reducing support calls and increasing customer satisfaction.</p> \ud83d\udc8e Professional Quality <p>Clean, intuitive interfaces that match modern software expectations while maintaining Clarion's development efficiency.</p> \ud83c\udf10 Global Support <p>Multi-language capabilities and international formatting ensure your applications work anywhere in the world.</p> \u26a1 Performance Focused <p>Optimized for speed and efficiency, our tools enhance functionality without sacrificing application performance.</p> \ud83d\udcde Contact &amp; Support \ud83c\udf10 Official Website <p>FominTools.com - Downloads, purchases, and latest updates</p> \ud83d\udcac Community Support <ul> <li>Documentation and tutorials (you're here!)</li> <li>Code examples and implementation guides</li> <li>Best practices and troubleshooting</li> </ul> \ud83d\udce7 Direct Support <p>For technical support, licensing questions, or custom development inquiries, visit our official website for contact information.</p> <p>Continuing the tradition of excellence in Clarion development tools.</p> <p>Fomin Tools | Taboga Software Legacy</p>"},{"location":"KnowledgeBase/","title":"\ud83e\uddea MkDocs Formatting Showcase","text":"<p>Explore advanced formatting features supported by MkDocs Material and <code>pymdown-extensions</code>.</p>"},{"location":"KnowledgeBase/#admonitions","title":"\ud83d\udd14 Admonitions","text":"<p>Friendly Reminder</p> <p>You can use note, warning, danger, success, and other callout types.</p> <p>Did You Know?</p> <p>Admonitions can also be collapsible!</p> <pre><code>!!! tip \"Expandable Section\"\n    More details go here...\n</code></pre>"},{"location":"KnowledgeBase/#anchored-headings","title":"\ud83d\udd17 Anchored Headings","text":"<p>Every heading includes a permalink \ud83d\udd17 when <code>toc.permalink</code> is enabled in <code>mkdocs.yml</code>. Great for sharing deep links.</p>"},{"location":"KnowledgeBase/#emojis","title":"\ud83d\ude04 Emojis","text":"<p>Use shortcodes like <code>:rocket:</code>, <code>:tada:</code>, or <code>:mag:</code> to add emojis:</p> <p> Rapid launch  Configuration  Celebration</p>"},{"location":"KnowledgeBase/#superfences-syntax-highlighting","title":"\ud83e\uddf7 SuperFences &amp; Syntax Highlighting","text":"<pre><code>def greet(name):\n    print(f\"Hello, {name}!\")\n</code></pre> <pre><code>mkdocs build --clean\nmkdocs serve\n</code></pre>"},{"location":"KnowledgeBase/#tabbed-content","title":"\ud83c\udf31 Tabbed Content","text":"WindowsLinux/macOSPowerShell <p>Run <code>dir</code> to list files.</p> <p>Use <code>ls -la</code> for a detailed file listing.</p> <p>Try <code>Get-ChildItem</code></p>"},{"location":"KnowledgeBase/#mermaid-diagrams","title":"\ud83d\udcc8 Mermaid Diagrams","text":"<pre><code>graph TD;\n  Start --&gt; Setup;\n  Setup --&gt;|Success| Build;\n  Setup --&gt;|Fail| Fix;\n  Build --&gt; Deploy;</code></pre>"},{"location":"KnowledgeBase/#custom-badges","title":"\ud83c\udfa8 Custom Badges","text":"<p>Use HTML or inline styling for badges:</p> <p>Beta Deprecated</p>"},{"location":"KnowledgeBase/#task-lists","title":"\ud83e\udded Task Lists","text":"<ul> <li>[x] Install <code>mkdocs-material</code></li> <li>[x] Enable extensions</li> <li>[ ] Create showcase page</li> <li>[ ] Deploy to production</li> </ul>"},{"location":"KnowledgeBase/#details-block-toggle-disclosure","title":"\ud83d\udce6 Details Block (Toggle Disclosure)","text":"Expand to view usage tips <ul> <li>Use <code>mkdocs serve</code> for live preview  </li> <li>Enable <code>toc.permalink</code> for anchor links  </li> <li>Add <code>extra_javascript</code> to render Mermaid charts  </li> </ul>"},{"location":"KnowledgeBase/#references","title":"\ud83d\udcda References","text":"<ul> <li>MkDocs Material Docs</li> <li>Pymdown Extensions</li> <li>Mermaid.js</li> </ul>"},{"location":"products/fomin/frb/","title":"Overview","text":"<p>Flexible report building for Clarion applications\u2014by developers, for users.</p> <p>Fomin Report Builder (FRB) is a powerful runtime reporting engine designed for Clarion for Windows. With deep integration into Clarion 2.0 through Clarion 5 (ABC and Legacy), and compatibility well into modern versions, FRB gives your applications a second wind\u2014letting users create and customize their own reports without touching source code.</p> <p>Whether you're an independent developer maintaining legacy systems or a corporate team extending Clarion-based solutions, FRB bridges the gap between developer efficiency and end-user autonomy.</p>"},{"location":"products/fomin/frb/#why-frb","title":"\u2728 Why FRB?","text":"<ul> <li>Empower users: Let non-technical users design, format, and filter their own reports at runtime.</li> <li>No royalties: Distribute the FRB DLL freely with your compiled applications.</li> <li>Multi-language support: Built-in English and Russian UI, with full localization via <code>FRB_NLS.INI</code>.</li> <li>ABC and Legacy friendly: Complete support for both Clarion template chains.</li> <li>Modern design ethos: Familiar Word-like layout controls make users feel right at home.</li> </ul>"},{"location":"products/fomin/frb/#documentation","title":"\ud83d\udce6 Documentation","text":"<p>This documentation is a modernized and expanded guide to everything FRB can do, including:</p> <ul> <li>\u2728 Feature Highlights: Explore the full list of user-facing features, layout controls, data handling tools, and extensibility options built into FRB.</li> <li>\ud83d\udee0 Installation and Setup: How to register templates, deploy DLLs, and add FRB to your project.</li> <li>\ud83e\uddd1\u200d\ud83d\udcbb Developer Guide: Learn how to integrate FRB with your application's data and templates.</li> <li>\u270d\ufe0f Using FRB: Empowering end-users to build and manage reports, with helpful tips and screenshots.</li> <li>\ud83e\udde9 Components: Dive deep into RBC-library, the FRBC template set, ReportManager, and more.</li> <li>\ud83d\udcda Glossary: Definitions and examples of FRB terminology and report elements.</li> <li>\ud83d\ude4b Support: Community resources, FAQs, and direct contact with the original developer.</li> </ul>"},{"location":"products/fomin/frb/#what-makes-frb-different","title":"\ud83d\udd0d What Makes FRB Different?","text":"<p>Unlike static report procedures that bloat application binaries and rely on developers to make every change, FRB stores report forms as <code>.rpt</code> files\u2014compact, independent, and user-editable. Reports can be designed, exported, imported, printed, and sorted without recompiling anything.</p> <p>Whether you're managing hundreds of reports or granting on-site teams independence, FRB reduces turnaround time and increases application longevity.</p>"},{"location":"products/fomin/frb/#license-availability","title":"\ud83d\udcdc License &amp; Availability","text":"<p>FRB 1.5a for Clarion 2.0 is Freeware. Commercial versions for Clarion 4 and 5 (ABC and Legacy) are available for purchase directly from the official site.</p>"},{"location":"products/fomin/frb/#ready-to-build-reports","title":"\ud83d\udeeb Ready to Build Reports?","text":"<p>Jump to Installation &amp; Setup to get started\u2014or explore what sets FRB apart in the Feature Overview.</p> <p>\u201cA report designer that feels like Word, works like Clarion, and delivers like clockwork.\u201d</p>"},{"location":"products/fomin/frb/components/","title":"Components","text":"<p>Fomin Report Builder is structured around a flexible, modular architecture that blends Clarion templates, object-oriented class libraries, and external DLLs. This lets developers easily integrate powerful reporting capabilities into their applications while giving users full control at runtime.</p>"},{"location":"products/fomin/frb/components/#core-components-overview","title":"\ud83e\uddf1 Core Components Overview","text":"Component Purpose RBC-library Object-oriented core in a DLL (Report Builder Classes) FRB/FRBC Template Sets Template sets for Legacy (FRB) and ABC (FRBC) chains ReportManager Tree-style report organizer interface RunTimeReport Main runtime procedure for building/editing reports Dictionary Interface Field and formula expression helper Code &amp; Extension Templates Templates for buttons, previewers, and code hooks"},{"location":"products/fomin/frb/components/#rbc-library","title":"\ud83d\udd27 RBC-library","text":"<p>The RBC (Report Builder Classes) library is the compiled core of FRB.</p> <ul> <li>Delivered as a DLL or LIB (e.g. standalone <code>ClaFRB.DLL</code> or local <code>ClaFRBL.LIB</code>)</li> <li>Contains report formatter, processor, and runtime engine</li> <li>Uses object-oriented Clarion to manage <code>.rpt</code> files</li> <li>Works in MDI/SDI applications</li> </ul> <p>Every FRB-enabled application loads this DLL at runtime, enabling report layout, data binding, filtering, evaluation, and printing.</p> <p>\ud83d\udcc1 Distribute the DLL(s) with your <code>.EXE</code> without any runtime royalties.</p>"},{"location":"products/fomin/frb/components/#template-sets-frb-frbc","title":"\ud83e\udde9 Template Sets: FRB &amp; FRBC","text":""},{"location":"products/fomin/frb/components/#frbtpl","title":"\u2705 <code>FRB.TPL</code>","text":"<ul> <li>For Legacy template chain  </li> <li>Works in Clarion for Windows 2.0, Clarion 4, Clarion 5</li> </ul>"},{"location":"products/fomin/frb/components/#frbctpl","title":"\u2705 <code>FRBC.TPL</code>","text":"<ul> <li>For ABC template chain</li> <li>Also works with Clarion 4 and Clarion 5</li> <li>Supports the <code>FRBClass</code> object model</li> </ul> <p>\ud83c\udfaf Both sets include identical functional components via Clarion templates and control templates.</p>"},{"location":"products/fomin/frb/components/#procedures","title":"\ud83d\uddc2\ufe0f Procedures","text":""},{"location":"products/fomin/frb/components/#runtimereport","title":"<code>RunTimeReport</code>","text":"<ul> <li>The main runtime report editor</li> <li>One procedure = one report type (VIEW structure)</li> <li>Let users create, edit, filter, sort, and print <code>.rpt</code> reports</li> <li>Exposes settings like preview mode, print dialog, field binding, other data, and user functions</li> </ul>"},{"location":"products/fomin/frb/components/#reportmanager","title":"<code>ReportManager</code>","text":"<ul> <li>Tree-style report file browser</li> <li>Displays <code>.rpt</code> files grouped by type and directory</li> <li>Lets users Insert, Change, Delete, and Print</li> <li>Customizable root-level titles and search paths</li> <li>Built using the <code>ReportManagerTree</code> control template</li> </ul> <p>\ud83d\udd04 Multiple <code>RunTimeReport</code> procedures can be registered with a single <code>ReportManager</code>.</p>"},{"location":"products/fomin/frb/components/#control-templates","title":"\ud83e\uddf0 Control Templates","text":"<p>These extend your Clarion UI with buttons and LIST controls that wire into FRB's runtime:</p> Template Name Function <code>ReportManagerTree</code> Tree-like view of <code>.rpt</code> files <code>ReportManagerUpdateButtons</code> Insert, Change, Delete buttons <code>ReportManagerSelectButton</code> Print selected report <code>ReportManagerExpandContractButtons</code> Expand/Collapse tree branches <code>InvokeDictionary</code> Lookup for runtime formula variables <p>Use these templates to enrich the <code>ReportManager</code> and enable deep runtime interaction.</p>"},{"location":"products/fomin/frb/components/#extension-code-templates","title":"\ud83e\udde0 Extension &amp; Code Templates","text":"Template Name Use Case <code>CorrectReportClosing</code> Ensures proper MDI shutdown of formatter windows <code>IdentifyFields</code> Exposes calculated fields to other app procedures <code>PreviewCPCS</code> Enables CPCS-style preview integration <code>PreviewRPM</code> Enables Report &amp; Presentation Manager (RPM) preview <code>LaunchRunTimeReport</code> Embeds FRB report launching logic in any procedure via code injection"},{"location":"products/fomin/frb/components/#application-dictionary-integration","title":"\ud83e\uddd1\u200d\ud83d\udd27 Application Dictionary Integration","text":"<p>When building <code>RunTimeReport</code>, you configure:</p> <ul> <li>Table Fields: Available for use in filters and frames</li> <li>Other Data: Module/global/local variables exposed to users</li> <li>User Functions: Custom procedures users can reference in formulas (e.g. SQL queries)</li> </ul> <p>You also define: - Field name bindings - Dictionary help through the [Dictionary] interface - Optional variable prefixes by table</p> <p>\ud83e\udde9 The more you expose cleanly, the more your users can leverage FRB\u2019s flexibility.</p>"},{"location":"products/fomin/frb/components/#expression-formula-engine","title":"\ud83e\uddee Expression &amp; Formula Engine","text":"<p>FRB uses Clarion\u2019s <code>EVALUATE()</code> function to process:</p> <ul> <li>Arithmetic and string logic</li> <li>Date/time operations</li> <li>Trigonometric functions</li> <li>User-defined procedures</li> <li>Frame contents, section conditions, filters</li> </ul> <p>Expressions are stored directly inside <code>.rpt</code> files and evaluated dynamically\u2014no compilation needed.</p>"},{"location":"products/fomin/frb/components/#file-format","title":"\ud83d\udce6 File Format","text":"<p>Each report is saved as a <code>.RPT</code> file:</p> <ul> <li>Self-contained: includes layout, data bindings, filters, and expressions</li> <li>Stored in a TopSpeed database container</li> <li>Portable, editable, and easy to distribute</li> </ul> <p>Reports can be previewed, duplicated, and sent via email\u2014no app update required.</p>"},{"location":"products/fomin/frb/components/#resource-files-summary","title":"\ud83d\udcce Resource Files Summary","text":"<p>You\u2019ll use or deploy:</p> File Purpose <code>C5FRB.DLL</code>, <code>C4FRB.DLL</code> Runtime engines <code>frb.tpl</code>, <code>frbc.tpl</code> Template sets for Clarion <code>frbclass.clw</code>, <code>frbclass.inc</code> RBC class source (for reference) <code>frb_nls.ini</code> National Language Support file <code>.rpt</code> files User-created report definitions"},{"location":"products/fomin/frb/components/#see-also","title":"\ud83d\udd17 See Also","text":"<ul> <li>Installation &amp; Setup</li> <li>Developer Guide</li> <li>Using Fomin Report Builder</li> </ul>"},{"location":"products/fomin/frb/developer-guide/","title":"Developer Guide","text":"<p>This section covers how to integrate Fomin Report Builder into your Clarion application as a developer. It includes template usage, embedding logic, managing multiple <code>RunTimeReport</code> procedures, and empowering your users with calculated fields and expressions.</p> <p>Whether you\u2019re building a fresh reporting module or retrofitting an established legacy app, FRB gives you flexible options and runtime extensibility.</p>"},{"location":"products/fomin/frb/developer-guide/#adding-frb-to-your-clarion-app","title":"\ud83c\udfd7\ufe0f Adding FRB to Your Clarion App","text":"<p>To add FRB support:</p> <ol> <li>Register Templates (<code>frb.tpl</code>, <code>frbc.tpl</code>) in Template Registry</li> <li>In your <code>.APP</code>:</li> <li>Add <code>CorrectReportClosing</code> to your Frame procedure</li> <li>(Optional) Add <code>RussianLocale</code> or handle <code>CLACASE</code> in environment</li> <li>Create one or more <code>RunTimeReport</code> procedures (each defines a VIEW structure)</li> <li>Add a <code>ReportManager</code> to organize report files</li> <li>Expose variables and procedures as \u201cOther Data\u201d and \u201cUser Functions\u201d</li> </ol>"},{"location":"products/fomin/frb/developer-guide/#designing-runtimereport-procedures","title":"\ud83d\udd01 Designing <code>RunTimeReport</code> Procedures","text":"<p>Each <code>RunTimeReport</code> procedure defines:</p> Setting Purpose Available File Fields Defines table structure (VIEW) for reporting Field Name Binding Chooses dictionary field for runtime names (e.g. <code>External Name</code>) Other Data Variables Exposes app-level variables to report expressions User Functions Enables custom logic in formula engine Print Preview Option Determines behavior (Ask, Always, Never) Pre-print Hooks Embed code into report lifecycle (Before Print Detail, etc.) <p>\ud83d\udccc You can create multiple <code>RunTimeReport</code> procedures, each bound to a unique file group or report type.</p>"},{"location":"products/fomin/frb/developer-guide/#managing-reports-with-reportmanager","title":"\ud83c\udf32 Managing Reports with <code>ReportManager</code>","text":"<ul> <li>Add one or more <code>ReportManager</code> procedures</li> <li>Use <code>ReportManagerTree</code> to list <code>.rpt</code> files by type</li> <li>Define root names, search paths, and associated <code>RunTimeReport</code> procedures</li> <li>Customize interface with:</li> <li><code>ReportManagerUpdateButtons</code></li> <li><code>ReportManagerSelectButton</code></li> <li><code>ReportManagerExpandContractButtons</code></li> </ul> <p>Use variables or <code>.INI</code> files to allow user-defined search paths at runtime.</p>"},{"location":"products/fomin/frb/developer-guide/#bindable-data-fields","title":"\ud83e\udde0 Bindable Data Fields","text":"<p>FRB accesses table and variable names using Clarion\u2019s <code>BIND()</code> mechanism.</p> <p>Bindable fields can come from:</p> <ul> <li>Dictionary: Tables, keys, and fields in the VIEW structure</li> <li>Global/Module/Local Variables: Added under \u201cOther Data\u201d</li> <li>Derived Results: Totals defined in report layout</li> <li>Formulas: Expressions within frame contents using <code>=</code></li> </ul> <p>\ud83e\uddd1\u200d\ud83d\udd27 Don\u2019t leave dictionary descriptions blank\u2014FRB uses them for the field selector UI.</p>"},{"location":"products/fomin/frb/developer-guide/#exposing-user-defined-functions","title":"\ud83e\uddee Exposing User-Defined Functions","text":"<p>You can expose custom procedures to the <code>EVALUATE()</code> runtime engine.</p>"},{"location":"products/fomin/frb/developer-guide/#example","title":"Example:","text":"Property Value Procedure Label <code>CalculateTax</code> BIND Label <code>CalcTax</code> Parameters <code>GROSS, RATE</code> Description <code>Computes tax from gross and rate</code> <p>Use in report frame:</p> <pre><code>=CalcTax(AmountDue, 0.15)\n</code></pre> <p>You can also expose SQL logic for advanced users:</p> <pre><code>=SQL('SELECT COUNT(*) FROM Orders')\n</code></pre> <p>\u26a0\ufe0f Be mindful of execution context\u2014some expressions run inside virtual methods.</p>"},{"location":"products/fomin/frb/developer-guide/#variables-across-report-lifecycle","title":"\ud83d\udce6 Variables Across Report Lifecycle","text":"<p>Variable scoping matters depending on when and where you want values to persist.</p> Scope Use Case Global Visible everywhere, stable across calls Module Ideal for shared intermediate state Local Do not use in <code>Before Print Detail</code> (CW2.0 only) <p>Use Formula Class embed points to assign or recalculate values during runtime. Supported classes include:</p> <ul> <li>Procedure Setup</li> <li>Before Print Detail</li> <li>Before Leaving Procedure</li> </ul>"},{"location":"products/fomin/frb/developer-guide/#launching-frb-from-code","title":"\u2699\ufe0f Launching FRB from Code","text":"<p>Instead of using <code>ReportManager</code>, you can launch reports programmatically:</p> <pre><code>RTReportFileName    = 'sales_summary.rpt'\nRTReportSearchPath  = 'C:\\Reports\\'\nRTReportEditAction  = 1  ! 1 = edit mode; 0 = print\nSTART(RunTimeReportProc)\n</code></pre> <p>Use the <code>LaunchRunTimeReport</code> code template to simplify setup and avoid manual stack/thread logic.</p>"},{"location":"products/fomin/frb/developer-guide/#extend-with-identifyfields","title":"\ud83e\udde9 Extend with <code>IdentifyFields</code>","text":"<p>To support inline expressions in your own procedures:</p> <ol> <li>Add the <code>IdentifyFields</code> extension template</li> <li>Add <code>InvokeDictionary</code> control template beside your formula entry field</li> <li>Let users write expressions referencing app-level variables and field bindings</li> </ol> <p>Ideal for filters, calculations, and search conditions outside of FRB reports.</p>"},{"location":"products/fomin/frb/developer-guide/#debugging-tips","title":"\ud83d\udd0d Debugging Tips","text":"<ul> <li>Enable \u201cPreview Mode: Always\u201d when testing report logic</li> <li>Use diagnostic <code>FRAME</code> contents to display formula output</li> <li>Validate field bindings using <code>BIND()</code> errors in the generated code</li> </ul> <p>\ud83d\udd04 Use \u201cOther Data\u201d and <code>EMBED</code> code to test logic before running actual reports.</p>"},{"location":"products/fomin/frb/developer-guide/#next-step","title":"\u2705 Next Step","text":"<p>See how the FRB architecture works in more detail in components.md, or explore installation.md if you haven\u2019t set up yet. To explore runtime behavior from the user\u2019s perspective, read usage.md.</p> <p>\u201cYou write the VIEWs and hook in the logic\u2014your users take care of the layout.\u201d</p>"},{"location":"products/fomin/frb/features/","title":"Feature Highlights","text":"<p>Fomin Report Builder (FRB) offers a rich set of features that empower both developers and end-users to create, manage, and print professional-quality reports\u2014without writing code. This page highlights the key capabilities across user interface, data handling, formatting, and extensibility.</p>"},{"location":"products/fomin/frb/features/#user-interface","title":"\ud83d\udda5\ufe0f User Interface","text":"<ul> <li>Word processor\u2013style layout editor with familiar toolbar buttons</li> <li>Supports English, Russian, and any custom language via <code>FRB_NLS.INI</code></li> <li>Coordinate system: Inches or Metric</li> <li>Export report pages as WMF to Microsoft Word (for preview, editing, printing)</li> <li>Customize default Frame properties (font, alignment, borders, etc.)</li> <li>Per-printer scaling (X/Y % stored in <code>WIN.INI</code>) for precise hardcopy output</li> </ul>"},{"location":"products/fomin/frb/features/#report-management","title":"\ud83d\uddc2\ufe0f Report Management","text":"<ul> <li>Tree-style <code>ReportManager</code> interface with unlimited folders and report types</li> <li>Create unlimited <code>.rpt</code> files</li> <li>Use long filenames (Windows 95+ style)</li> <li>Clone reports easily via Open \u2192 Save As...</li> </ul>"},{"location":"products/fomin/frb/features/#data-handling-expressions","title":"\ud83e\uddee Data Handling &amp; Expressions","text":"<ul> <li>Uses Clarion <code>VIEW</code> structures for multi-table access (ISAM &amp; SQL)</li> <li>High-speed filters using fields, expressions, and Clarion functions</li> <li>Sort by any field or expression</li> <li>Dictionary-driven expression builder with tree-style hierarchy</li> <li>End-user\u2013defined totals:</li> <li>Sum, Count, Average, Min, Max, Evaluate</li> <li>Reset on group, page, or report end</li> <li>Calculated fields (Evaluate-only, never reset)</li> <li>Runtime prompts for user-entered values or browse selections</li> <li>Array support (up to 4 dimensions)</li> <li>Built-in date/time variables (<code>TODAY()</code>, <code>CLOCK()</code>)</li> <li>Page number and record count per page</li> <li>Picture formatting for strings, dates, numbers (e.g. SSN \u2192 <code>123-45-6789</code>)</li> <li>Wizard-style Picture builder</li> <li>Developer-defined computed fields indistinguishable from dictionary fields</li> </ul>"},{"location":"products/fomin/frb/features/#layout-formatting","title":"\ud83d\udd8b\ufe0f Layout &amp; Formatting","text":"<ul> <li>Supported sections: Page Header, Report Header, Group Break, Group Header, Detail, Group Footer, Report Footer, Page Footer</li> <li>Unlimited Frames per section</li> <li>Frame contents:</li> <li>Static text</li> <li>Dynamic expressions (e.g. <code>=CustomerName</code>)</li> <li>Borders and fills for Frames (color, thickness)</li> <li>Grid-style layout using adjacent bordered Frames</li> <li>Font selection per report, section, or Frame</li> <li>Vertical and horizontal alignment</li> <li>Multi-select Frames for group operations</li> <li>Developer-exposed runtime functions usable in expressions</li> <li>Embed graphics (e.g. logos, letterheads)</li> <li>Trailing Text: prints long MEMO fields with page overflow control</li> <li>Mail Merge: combine raw text with data fields</li> <li>Barcode Frames: vertical/horizontal barcodes (requires Taboga Barcode Library)</li> </ul>"},{"location":"products/fomin/frb/features/#extensibility","title":"\ud83e\udde9 Extensibility","text":"<ul> <li>Developer-defined runtime functions (e.g. <code>SQL()</code>, <code>CalcTax()</code>)</li> <li>Runtime prompts for user input (e.g. date range, selection)</li> <li>Computed fields and filters based on user input</li> <li>Support for third-party previewers:<ul> <li>CPCS</li> <li>RPM (Lodestar)</li> <li>IceTips</li> <li>TinTools</li> </ul> </li> <li>Compatible with:<ul> <li>J-Spell</li> <li>SoftVelocity IP Driver</li> <li>ClarioNET</li> <li>Query Wizard</li> <li>xSearch, xQuickFilter</li> <li>Many others</li> </ul> </li> </ul>"},{"location":"products/fomin/frb/features/#advanced-features","title":"\ud83e\udde0 Advanced Features","text":"<ul> <li>Runtime scaling per printer (adjust X/Y % in <code>WIN.INI</code>)</li> <li>Export to Word via DDE (each page as WMF image)</li> <li>Developer-defined \u201cinvisible\u201d computed fields</li> <li>Conditional section printing (e.g. <code>Page_Counter &gt; 1</code>)</li> <li>Page-level counters and totals</li> <li>Dynamic Picture formatting at runtime</li> </ul>"},{"location":"products/fomin/frb/features/#related-pages","title":"\ud83d\udd17 Related Pages","text":"<ul> <li>Using Fomin Report Builder</li> <li>Developer Guide</li> <li>Glossary</li> </ul>"},{"location":"products/fomin/frb/glossary/","title":"Glossary","text":"<p>This glossary provides definitions and examples for the core concepts used in Fomin Report Builder (FRB). It's a handy reference for understanding the sections, controls, and expressions you'll encounter while creating or editing reports.</p>"},{"location":"products/fomin/frb/glossary/#report-sections","title":"\ud83e\udde9 Report Sections","text":"<p>FRB reports are composed of stacked sections, each with a specific purpose:</p> Section Description Page Header Appears at the top of each page Report Header Printed once at the start of the report (first page only) Group Break Logical anchor for sorting/grouping (not printed) Group Header Printed above each new group based on the Group Break Detail Prints once per record; the main data section Group Footer Totals or summaries printed after each group Report Footer Printed once at the end of the report Page Footer Appears at the bottom of each page"},{"location":"products/fomin/frb/glossary/#frame","title":"\ud83d\udce6 Frame","text":"<p>A Frame is the primary visual element in FRB\u2019s layout editor:</p> <ul> <li>Think of it as a text box or dynamic label</li> <li>Holds static text or evaluated expressions</li> <li>Supports formatting: alignment, font, color, borders, fill</li> <li>May include conditional logic or formulas</li> </ul> <p>If a Frame starts with <code>=</code>, the content is treated as an expression to evaluate (e.g. <code>=CustomerName</code> or <code>=SUM(Total)</code>).</p>"},{"location":"products/fomin/frb/glossary/#picture","title":"\ud83d\udd8b\ufe0f Picture","text":"<p>A Picture is a formatting pattern applied to data inside a Frame:</p> <ul> <li>Controls display of numbers, dates, text</li> <li>Example: <code>@D17</code> formats a date as <code>YYYY-MM-DD</code></li> <li>Used like: <code>=FORMAT(TODAY(), @D17)</code></li> </ul>"},{"location":"products/fomin/frb/glossary/#rpt-file","title":"\ud83d\udcc4 <code>.rpt</code> File","text":"<p>A report file that:</p> <ul> <li>Stores layout, filter, sorting, and frame info</li> <li>Is independent of your app\u2019s executable</li> <li>Can be copied, edited, emailed, or printed without recompilation</li> </ul> <p>Stored internally as a TopSpeed database for portability.</p>"},{"location":"products/fomin/frb/glossary/#dictionary","title":"\ud83e\udde0 Dictionary","text":"<p>The built-in selector for inserting fields and functions into:</p> <ul> <li>Filters</li> <li>Sorting expressions</li> <li>Frame content</li> <li>Conditions for section printing</li> </ul> <p>Includes:</p> <ul> <li>Table fields from the current VIEW</li> <li>System functions (e.g. <code>FORMAT()</code>, <code>TODAY()</code>)</li> <li>User-defined variables and functions</li> </ul>"},{"location":"products/fomin/frb/glossary/#expression","title":"\ud83c\udf9b\ufe0f Expression","text":"<p>FRB expressions are runtime formulas evaluated using Clarion's <code>EVALUATE()</code> function.</p> <p>Examples:</p> <ul> <li><code>=Amount * 1.15</code></li> <li><code>=FORMAT(TODAY(), @D17)</code></li> <li><code>=IF(Total &gt; 10000, 'High', 'Normal')</code></li> </ul> <p>Used in:</p> <ul> <li>Frame contents</li> <li>Section printing conditions</li> <li>Totals</li> <li>Filters and sort orders</li> </ul>"},{"location":"products/fomin/frb/glossary/#totals","title":"\ud83e\uddee Totals","text":"<p>FRB can calculate and insert summary values:</p> Type Description Sum Adds a field\u2019s values Average Mean of a field across records Count Tallies number of records Min/Max Tracks minimum or maximum values Evaluate Executes a custom expression <p>Each result is stored in a variable that can be shown in a Frame or used in another formula.</p>"},{"location":"products/fomin/frb/glossary/#sort-expression","title":"\u2b07\ufe0f Sort Expression","text":"<p>Attached to a Group Break, it determines:</p> <ul> <li>The field or formula to sort by</li> <li>The hierarchy of grouping in reports</li> </ul> <p>Example: <code>=City</code> or <code>=SUBSTRING(ZipCode, 1, 3)</code></p>"},{"location":"products/fomin/frb/glossary/#record-filter","title":"\ud83d\udd0e Record Filter","text":"<p>A logical expression that limits which records are included in a report.</p> <p>Examples:</p> <ul> <li><code>Balance &gt; 1000</code></li> <li><code>InvoiceDate &gt;= DEFORMAT('2025/01/01', @D5)</code></li> <li><code>State = 'CA' OR State = 'NY'</code></li> </ul>"},{"location":"products/fomin/frb/glossary/#bind-label","title":"\ud83d\udd23 BIND Label","text":"<p>A name assigned to a variable or field so it can be referenced in report expressions.</p> <p>You define BINDs for:</p> <ul> <li>Table fields (based on Dictionary)</li> <li>App-level variables (\"Other Data\")</li> <li>Totals and result variables</li> <li>Custom user-defined procedures</li> </ul>"},{"location":"products/fomin/frb/glossary/#control-templates","title":"\ud83e\udde9 Control Templates","text":"<p>Reusable UI elements that tie Clarion controls to FRB runtime:</p> Template Purpose <code>ReportManagerTree</code> Shows <code>.rpt</code> files in a hierarchical list <code>InvokeDictionary</code> Button to open the Dictionary window <code>ReportManagerUpdateButtons</code> Adds Insert, Change, Delete buttons <code>ReportManagerSelectButton</code> Adds a Print button <code>ReportManagerExpandContractButtons</code> Add Expand/Collapse buttons"},{"location":"products/fomin/frb/glossary/#print-preview","title":"\ud83d\udcd1 Print Preview","text":"<p>A user option controlled in the <code>RunTimeReport</code> procedure:</p> <ul> <li>Always: Preview before printing</li> <li>Never: Skip preview</li> <li>Ask: Prompt user at runtime</li> </ul> <p>Supports integration with:</p> <ul> <li>Creative Reporting Tools (CPCS)</li> <li>Report &amp; Presentation Manager (RPM)</li> </ul>"},{"location":"products/fomin/frb/glossary/#layout-tools","title":"\ud83d\udcd0 Layout Tools","text":"<ul> <li>Property Box: Floating window for setting Frame options</li> <li>Section Properties: Configure size and logic of each section</li> <li>Frame Toolbar: Quick access to font, alignment, color, and layout controls</li> <li>Right-click Context Menu: Add sections, frames, and manipulate layout</li> </ul>"},{"location":"products/fomin/frb/glossary/#runtime-variables","title":"\u2699\ufe0f Runtime Variables","text":"<p>Special variables built into FRB:</p> Variable Purpose <code>Page_Counter</code> Tracks current page number <code>Report_Title</code> Custom title string (if set) <code>TODAY()</code> Returns current date <code>CLOCK()</code> Returns current time <p>Use these in frames and expressions for dynamic info.</p>"},{"location":"products/fomin/frb/glossary/#related-pages","title":"\ud83d\udd17 Related Pages","text":"<ul> <li>Using Fomin Report Builder</li> <li>Developer Guide</li> <li>Components</li> </ul>"},{"location":"products/fomin/frb/installation/","title":"Installation &amp; Setup","text":"<p>Ready to extend your Clarion application with runtime reporting? This guide walks you through how to install Fomin Report Builder (FRB), register its templates, and integrate it into your project.</p>"},{"location":"products/fomin/frb/installation/#system-requirements","title":"\ud83e\udde9 System Requirements","text":"<ul> <li>Clarion Versions: Clarion for Windows 2.0, Clarion 4, or Clarion 5</li> <li>Template Chains Supported: Legacy and ABC</li> <li>Target Architecture: 16-bit or 32-bit (FRB supports both)</li> <li>Operating System: Windows 95 and later (including modern OS support via compatibility layers)</li> </ul>"},{"location":"products/fomin/frb/installation/#file-structure-overview","title":"\ud83d\udcc1 File Structure Overview","text":"<p>FRB consists of:</p> Folder Purpose <code>BIN/</code> Runtime DLLs and Help files <code>TEMPLATE/</code> FRB and FRBC template sets <code>LIB/</code> and <code>LIBSRC/</code> Library files and Report Builder Classes <code>IMAGES/</code> Icons for ReportManager Tree <code>EXAMPLE.FRB/</code> Sample app (<code>.APP</code>, <code>.DCT</code>, <code>.TPS</code>, etc) <code>WINDOWS/</code> <code>frb_nls.ini</code> (for NLS support) <p>Place these files according to your installed Clarion version: C5/  \u251c\u2500\u2500 BIN/  \u2502   \u2502  \u2502   \u251c\u2500\u2500 C5FRB.DLL  \u2502   \u2502  \u2502   \u251c\u2500\u2500 C5FRBx.DLL  \u2502   \u2502  \u2502   \u2514\u2500\u2500 .HLP  \u251c\u2500\u2500 LIB/  \u2502   \u2502  \u2502   \u2514\u2500\u2500 .LIB  \u2514\u2500\u2500 TEMPLATE/      \u2502      \u251c\u2500\u2500 frb.tpl      \u2502      \u251c\u2500\u2500 frbc.tpl      \u2502      \u2514\u2500\u2500 frblocal.tpw</p> <p>\u2139\ufe0f DLLs must be included in your <code>PATH</code> or co-located with your executable.</p>"},{"location":"products/fomin/frb/installation/#step-by-step-installation","title":"\ud83e\uddf0 Step-by-Step Installation","text":""},{"location":"products/fomin/frb/installation/#1-template-registration","title":"1. Template Registration","text":"<p>In the Clarion IDE:</p> <ul> <li>Navigate to <code>Setup</code> \u2192 <code>Template Registry</code></li> <li>Click <code>Register</code></li> <li>Add the following templates:</li> <li><code>frb.tpl</code> (Legacy)</li> <li><code>frbc.tpl</code> (ABC)</li> </ul> <p>\ud83d\udd01 Do this for each Clarion version you plan to use (e.g. C4, C5).</p>"},{"location":"products/fomin/frb/installation/#2-global-extensions","title":"2. Global Extensions","text":"<p>In your <code>.APP</code>:</p> <ul> <li>Add <code>RussianLocale</code> extension (optional for non-English languages)</li> <li>Add <code>CorrectReportClosing</code> to your Frame procedure (ensures proper MDI child shutdown)</li> </ul>"},{"location":"products/fomin/frb/installation/#3-runtime-integration","title":"3. Runtime Integration","text":"<p>Create the following procedures using the FRB template set:</p> Procedure Type Description <code>RunTimeReport</code> Core runtime editor/engine for <code>.RPT</code> files <code>ReportManager</code> Tree-based interface for managing reports <p>You can use one <code>RunTimeReport</code> procedure per table group (VIEW structure), then reference them from one or more <code>ReportManager</code> procedures.</p> <p>\ud83d\udca1 Want to launch FRB from any point in your app? Use the <code>LaunchRunTimeReport</code> code template or invoke it manually using: ```clarion RTReportFileName     = 'filename.rpt' RTReportSearchPath   = 'path' RTReportEditAction   = 1  ! 0=Print, 1=Edit</p>"},{"location":"products/fomin/frb/installation/#national-language-support-nls","title":"\ud83c\udf10 National Language Support (NLS)","text":"<p>FRB supports multilingual UI out-of-the-box:</p> Language Method English Built-in Russian Built-in Other Via <code>FRB_NLS.INI</code> file"},{"location":"products/fomin/frb/installation/#setup-steps","title":"\ud83d\udcdd Setup Steps","text":"<ol> <li>Copy <code>frb_nls.ini</code> to your Windows directory (e.g. <code>C:\\Windows</code>)</li> <li>Translate messages inside <code>frb_nls.ini</code> to your target language</li> <li>Set the <code>CLACASE</code> environment variable for correct runtime casing of non-English variables</li> </ol> <p>\u2139\ufe0f If <code>frb_nls.ini</code> is missing, it will be generated automatically with English defaults when the app runs.</p>"},{"location":"products/fomin/frb/installation/#sample-application","title":"\ud83d\udcbe Sample Application","text":"<p>Explore the included inventory example at <code>EXAMPLE.FRB\\</code>, which contains:</p> <ul> <li><code>inventry.app</code>, <code>inventry.dct</code>, <code>inventry.tps</code>: Application source and data</li> <li>Sample <code>.rpt</code> files to explore reporting capabilities</li> <li>Usage of <code>IdentifyFields</code>, <code>InvokeDictionary</code>, and formula-driven reports</li> </ul> <p>This is a great starting point for testing, prototyping, or adapting into real-world systems.</p>"},{"location":"products/fomin/frb/installation/#whats-next","title":"\u2705 What\u2019s Next?","text":"<p>Time to empower your users! Learn how they can build and manage rich report forms\u2014without writing a line of code.</p> <p>\u201cJust install once\u2014your users handle the rest.\u201d</p>"},{"location":"products/fomin/frb/support/","title":"Support &amp; Resources","text":"<p>Need help, have questions, or want to share feedback? Fomin Report Builder (FRB) has multiple support channels\u2014from direct contact with the developer to a public forum and legacy documentation.</p>"},{"location":"products/fomin/frb/support/#direct-support","title":"\ud83e\uddd1\u200d\ud83d\udcbb Direct Support","text":"<p>The author of Fomin Report Builder, Oleg Fomin, provides direct support for registered users.</p>"},{"location":"products/fomin/frb/support/#contact-methods","title":"\ud83d\udce7 Contact Methods","text":"Contact Type Address Primary Email oleg@fomin.info Support Email support@fomintools.com <p>\ud83d\udca1 For the fastest response, include your serial number (if applicable), the Clarion version you're using, and a brief description of your setup or issue.</p>"},{"location":"products/fomin/frb/support/#community-forum","title":"\ud83d\udde3\ufe0f Community Forum","text":"<p>Join the public FRB forum to:</p> <ul> <li>Ask questions</li> <li>Share tips or feedback</li> <li>Browse common issues and solutions</li> </ul> <p>\ud83e\uddf5 Visit the Forum \u2192</p>"},{"location":"products/fomin/frb/support/#support-policy","title":"\ud83d\udccb Support Policy","text":"<p>Technical support includes:</p> <ul> <li>Author-supplied consulting via email</li> <li>Free updates within the same product version</li> <li>Help diagnosing integration or runtime issues</li> </ul> <p>\ud83d\udcac Support is only guaranteed for registered users. If you obtained FRB through a distributor, be sure to register your copy.</p>"},{"location":"products/fomin/frb/support/#registration-info","title":"\ud83d\udcdd Registration Info","text":"<p>To register:</p> <ol> <li>Email oleg@fomin.info</li> <li>Include the following details:</li> <li>Serial number (from distributor, if purchased)</li> <li>First and last name</li> <li>Company name</li> <li>Phone number</li> <li>Postal address</li> <li>Email address</li> </ol> <p>Registered users will be added to the FRB mailing list for news and updates.</p>"},{"location":"products/fomin/frb/support/#additional-resources","title":"\ud83d\udcda Additional Resources","text":"<ul> <li>Official Website</li> <li>Product Overview</li> <li>Features List</li> <li>Testimonials</li> <li>FAQ</li> <li>Download Example App</li> </ul>"},{"location":"products/fomin/frb/support/#troubleshooting-tips","title":"\ud83e\uddea Troubleshooting Tips","text":"<ul> <li>Use the preview mode to diagnose layout issues quickly</li> <li>Use <code>.rpt</code> filenames that match report types to avoid misbinding</li> <li>Double-check environment variable <code>CLACASE</code> if using non-English variables</li> <li>Use embedded formula classes (<code>Before Print Detail</code>, etc.) for runtime logic</li> </ul>"},{"location":"products/fomin/frb/support/#need-developer-help","title":"\ud83e\uddf0 Need Developer Help?","text":"<p>Check out:</p> <ul> <li>Developer Guide</li> <li>Components</li> <li>Installation</li> </ul> <p>If you\u2019re looking to modernize a legacy Clarion app or add AI/documentation to your toolchain, you know who to call. \ud83d\ude09</p> <p>\u201cGood tools deserve good support\u2014and FRB was built with both in mind.\u201d</p>"},{"location":"products/fomin/frb/usage/","title":"Using Fomin Report Builder","text":"<p>With Fomin Report Builder (FRB), your users can create, customize, preview, and print reports\u2014right from your application\u2014without needing any development skills.</p> <p>This guide walks through everyday tasks like inserting new reports, applying filters, building layouts, and navigating the ReportManager interface.</p>"},{"location":"products/fomin/frb/usage/#navigating-reportmanager","title":"\ud83e\udded Navigating ReportManager","text":"<p>The <code>ReportManager</code> procedure is the user\u2019s central hub for managing reports. Its tree-style interface displays available <code>.rpt</code> files grouped by type or folder.</p>"},{"location":"products/fomin/frb/usage/#reportmanager-actions","title":"ReportManager actions:","text":"Action Description Insert Create a new report file Change Edit an existing report Delete Remove a report from the list Print Send the selected report to the printer Expand/Contract Collapse or expand report groups <p>\ud83d\udca1 The layout and available actions depend on your use of <code>ReportManagerTree</code> and supporting control templates (e.g. <code>ReportManagerUpdateButtons</code>).</p>"},{"location":"products/fomin/frb/usage/#creating-a-new-report","title":"\ud83d\udcc4 Creating a New Report","text":"<ol> <li>Launch your Clarion app and open the <code>ReportManager</code></li> <li>Click Insert to start a new report</li> <li>The Report Formatter opens\u2014a canvas for laying out content using \"frames\"</li> <li>Use the toolbar or right-click to:</li> <li>Add report sections (headers, details, footers, groups)</li> <li>Insert frames for data, formulas, or static text</li> <li>Save the file with a <code>.rpt</code> extension (e.g. <code>CustomerList.rpt</code>)</li> </ol> <p>\u270f\ufe0f Pro Tip: You can also clone an existing report using Change \u2192 Save As..., then tweak the layout.</p>"},{"location":"products/fomin/frb/usage/#report-sections-at-a-glance","title":"\ud83e\uddf1 Report Sections at a Glance","text":"<p>FRB lets users build multi-section reports. Each section controls how and when content prints:</p> Section Purpose Page Header Appears at the top of each page Report Header Printed once at the top of the first page Group Break Defines sort order (not printed directly) Group Header Printed before each group of records Detail Core data section (one per record) Group Footer Totals or summaries after a group Report Footer Final totals and remarks (last page only) Page Footer Appears at the bottom of each page <p>Add, remove, or reorder sections using the section menu or right-click context options.</p>"},{"location":"products/fomin/frb/usage/#adding-data-frames","title":"\ud83e\uddee Adding Data Frames","text":"<p>Frames are visual containers that show text, variables, or expressions.</p>"},{"location":"products/fomin/frb/usage/#to-add-a-frame","title":"To add a frame:","text":"<ol> <li>Select a report section</li> <li>Click New Frame or right-click \u2192 Insert Frame</li> <li>Resize and position using your mouse or arrow keys</li> <li>Set contents:</li> <li>Text (e.g. <code>Customer Report</code>)</li> <li>Expression (e.g. <code>=CustomerName</code>)</li> <li>Formula (e.g. <code>=FORMAT(TODAY(),@D17)</code>)</li> </ol>"},{"location":"products/fomin/frb/usage/#formatting-options","title":"Formatting options:","text":"<ul> <li>Horizontal &amp; vertical alignment</li> <li>Fonts, colors, and borders</li> <li>Dynamic filling</li> <li><code>Picture</code> formatting (e.g. date, time, currency)</li> </ul> <p>\ud83e\udde0 Expressions starting with <code>=</code> are evaluated using Clarion's <code>EVALUATE()</code> function.</p>"},{"location":"products/fomin/frb/usage/#sorting-filters-totals","title":"\ud83d\udd0d Sorting, Filters &amp; Totals","text":""},{"location":"products/fomin/frb/usage/#filtering-records","title":"\ud83c\udfaf Filtering Records","text":"<p>In Report Properties:</p> <ul> <li>Use logical expressions to limit records (e.g. <code>Balance &gt; 1000</code>)</li> <li>Combine with <code>AND</code>, <code>OR</code>, <code>&gt;=</code>, etc.</li> </ul> <p>Use the [Dictionary] button to insert fields.</p>"},{"location":"products/fomin/frb/usage/#sorting-group-breaks","title":"\ud83d\udd22 Sorting (Group Breaks)","text":"<p>To sort records:</p> <ol> <li>Insert a Group Break</li> <li>Set a Sort Expression (e.g. <code>LastName</code>)</li> <li>Add Group Header/Footer to display grouped values or totals</li> </ol> <p>Group order determines sorting hierarchy.</p>"},{"location":"products/fomin/frb/usage/#calculating-totals","title":"\u03a3 Calculating Totals","text":"<p>You can define result variables for:</p> <ul> <li>Sum</li> <li>Average</li> <li>Count</li> <li>Min / Max</li> <li>Custom <code>Evaluate()</code> expressions</li> </ul> <p>Configure Tally On and Reset rules to control when calculations run (per record, group, or page).</p>"},{"location":"products/fomin/frb/usage/#printing-previewing","title":"\ud83d\udda8\ufe0f Printing &amp; Previewing","text":"<p>Before printing, you can:</p> <ul> <li>Set page layout (margins, size, orientation)</li> <li>Define preview mode (always, never, ask at runtime)</li> <li>Choose print destination (printer or file)</li> </ul> <p>Preview options include support for third-party tools like:</p> <ul> <li>CPCS (Creative Reporting Tools)</li> <li>RPM (Report and Presentation Manager)</li> </ul>"},{"location":"products/fomin/frb/usage/#using-the-dictionary-formulas","title":"\ud83c\udf0d Using the Dictionary &amp; Formulas","text":"<p>Press F2 or click the [Dictionary] button when entering:</p> <ul> <li>Filters</li> <li>Sort expressions</li> <li>Frame formulas</li> </ul> <p>You\u2019ll see a tree-style reference for:</p> <ul> <li>Available table fields</li> <li>Clarion operators and functions</li> <li>User-defined variables and totals</li> </ul> <p>This makes building powerful expressions easy\u2014even for non-programmers.</p>"},{"location":"products/fomin/frb/usage/#power-features","title":"\u26cf\ufe0f Power Features","text":"<ul> <li>Save As...: Duplicate reports quickly for reuse</li> <li>Frame Copy/Paste: Speed up layout building</li> <li>Suppress Printing: Use conditional logic to hide sections (e.g. <code>Page_Counter = 1</code>)</li> <li>InvokeDictionary Button: Lookup available formula variables at runtime</li> </ul>"},{"location":"products/fomin/frb/usage/#example-date-time-in-a-frame","title":"\ud83e\uddd1\u200d\ud83c\udfeb Example: Date &amp; Time in a Frame","text":"<p>Add this expression to a frame in the header:</p> <pre><code>=FORMAT(TODAY(), @D17) &amp; ' ' &amp; FORMAT(CLOCK(), @T1)\n</code></pre> <p>Outputs something like: <code>2025-07-09 18:45:00</code></p>"},{"location":"products/fomin/frb/usage/#keyboard-tips","title":"\ud83e\udde0 Keyboard Tips","text":"<ul> <li><code>Ctrl + Tab</code> \u2192 Cycle through sections</li> <li><code>Ctrl + Arrow</code> \u2192 Move selected frame</li> <li><code>Tab</code> / <code>Shift + Tab</code> \u2192 Select next/previous frame</li> <li><code>Ctrl + Click</code> \u2192 Multi-select frames</li> </ul>"},{"location":"products/fomin/frb/usage/#next-step","title":"\u2705 Next Step","text":"<p>Dive into the developer guide to see how to plug FRB\u2019s capabilities into your Clarion project\u2014including multiple <code>RunTimeReport</code> procedures, user functions, and embedding FRB actions in your code.</p> <p>\u201cLet your users own their reports. You just build the tools.\u201d</p>"},{"location":"products/taboga/tbl/","title":"Overview","text":"<p>Taboga Barcode Library is a professional 2D barcode generation component for Clarion version 6 and above. It consists of a pure Clarion code CLASS library that will draw and print barcodes in your programs.</p> <p>Also included is a template that allows you to implement the library with ease in both ABC and Legacy template chains.</p>"},{"location":"products/taboga/tbl/#features","title":"\u2728 Features","text":"<ul> <li>Wide Barcode Support: Includes popular symbologies such as Code 39, Code 128, UPC-A, UPC-E, EAN-8, EAN-13, Interleaved 2 of 5, and more.</li> <li>Easy Integration: Add barcode generation to Clarion applications with minimal code.</li> <li>Flexible Output: Render barcodes on both WINDOW and REPORT target.</li> <li>Customizable: Control barcode size, resolution, rotation, and human-readable text.</li> <li>Royalty-Free: No runtime fees for distributing applications using the library.</li> </ul>"},{"location":"products/taboga/tbl/#documentation","title":"\ud83d\udcda Documentation","text":"<p>This documentation covers:</p> <ul> <li>\ud83d\udce5 Installation: File locations and setup instructions</li> <li>\ud83d\udcca Barcode Types: Supported symbologies and specifications</li> <li>\ud83d\udcbb Handcode Implementation: Manual integration guide</li> <li>\ud83e\udde9 Template Implementation: Using the provided templates</li> <li>\ud83d\udcda Class Reference: API documentation and usage</li> <li>\u2753 Troubleshooting: Common issues and solutions</li> </ul>"},{"location":"products/taboga/tbl/#pricing","title":"\ud83d\udcb0 Pricing","text":"<p>The Taboga Barcode Library is available for a fixed price of $119.00. This includes: - Complete source code - Templates for ABC and Legacy chains - Free technical support</p>"},{"location":"products/taboga/tbl/#support","title":"\ud83d\udcde Support","text":"<p>For support and additional information:</p> <ul> <li>Email: support@fomintools.com</li> <li>Fomin Tools: https://fomintools.com</li> <li>Original Author: Edgard L. Riba (Taboga Software)</li> </ul>"},{"location":"products/taboga/tbl/barcode-types/","title":"Barcode Symbologies","text":"<p>The barcode library supports the following symbologies:</p>"},{"location":"products/taboga/tbl/barcode-types/#standard-symbologies","title":"\ud83c\udfaf Standard Symbologies","text":""},{"location":"products/taboga/tbl/barcode-types/#code-39","title":"\ud83d\udd33 Code 39","text":"<p>By far the most common barcode scheme outside retail area and is read by most scanners, although it is not as compact as Code 93 or Code 128. The normal Code 39 scheme encode both numbers and upper case letters, and was the first alphanumeric symbology.</p>"},{"location":"products/taboga/tbl/barcode-types/#code-39-extended","title":"\ud83d\udd32 Code 39 Extended","text":"<p>Similar to Code39 except that this allows the full ASCII 128 character set.</p>"},{"location":"products/taboga/tbl/barcode-types/#code-128","title":"\ud83d\udd32 Code 128","text":"<p>Very high density coding scheme. It has three coding schemes and permits the inclusion of special characters not present on the keyboard. The Taboga Barcode library automatically determines the optimum coding scheme to use.</p>"},{"location":"products/taboga/tbl/barcode-types/#function-codes","title":"\u2699\ufe0f Function Codes","text":"<p>For special applications like UCC128 barcodes, use these special characters:</p> Function Code Character to Use Function 1 <code>&lt;201&gt;</code> Function 2 <code>&lt;202&gt;</code> Function 3 <code>&lt;203&gt;</code> Function 4 <code>&lt;204&gt;</code>"},{"location":"products/taboga/tbl/barcode-types/#code-128-variants","title":"\ud83d\udd33 Code 128 Variants","text":"<ul> <li>Code 128A: Only using character table \"A\"</li> <li>Code 128B: Only using character table \"B\"</li> <li>Code 128C: Only using character table \"C\"</li> <li>UCC128: CODE128 variant with FNC1 added:   <pre><code>&lt;STARTC&gt;&lt;FNC1&gt;&lt;Barcode Data&gt;&lt;103 Mod CheckDigit&gt;&lt;StopChar&gt;\n</code></pre></li> </ul>"},{"location":"products/taboga/tbl/barcode-types/#upcean","title":"\ud83d\udecd\ufe0f UPC/EAN","text":"<ul> <li>UPC A: Universal Product Code version A. Encodes 11 digits.</li> <li>UPC E: Universal Product Code version E. Compressed version of UPC A.</li> <li>EAN 13: Main scheme used throughout Europe for retail article numbering. Numeric only, encodes 12 digits + check digit.</li> <li>EAN 8: Encodes 7 digits + check digit.</li> </ul>"},{"location":"products/taboga/tbl/barcode-types/#industrial-codes","title":"\ud83c\udfed Industrial Codes","text":"<ul> <li>Interleaved 2 of 5: High density, continuous numeric symbology coding digit pairs. Adds leading 0 for odd digit count.</li> <li>Code 2 of 5: Similar to Interleaved 2 of 5, but with lower density. Also known as Industrial 2 of 5.</li> <li>Codabar: Encodes 16 different characters: digits 0-9, and '-', '$', '/', '+'. Optional check digit.</li> </ul>"},{"location":"products/taboga/tbl/barcode-types/#derived-symbologies","title":"\ud83d\udd04 Derived Symbologies","text":"<p>These symbologies are built using base symbologies:</p> <ul> <li>EAN128: Used mostly in shipping containers (Code 128 based)</li> <li>JAN: Japanese version of EAN13 (prefix 49)</li> <li>ISBN: Book numbering (EAN13 with prefix 978)</li> <li>ISSN: Periodical numbering (EAN13 with prefix 977)</li> <li>Ansi 3 of 9: Alternate name for CODE39</li> <li>Ansi Extended 3 of 9: Alternate name for Extended CODE39</li> <li>Industrial 2 of 5: Alternate name for Code 2 of 5</li> </ul>"},{"location":"products/taboga/tbl/handcode/","title":"Handcode Implementation","text":""},{"location":"products/taboga/tbl/handcode/#application-setup","title":"\ud83d\udd27 Application Setup","text":"<p>Add to Global Embeds (After Global INCLUDEs): <pre><code>_TBARDllMode_    EQUATE(0)\n_TBARLinkMode_   EQUATE(1)\nINCLUDE('BARCODE.INC')\n</code></pre></p>"},{"location":"products/taboga/tbl/handcode/#window-implementation","title":"\ud83e\ude9f Window Implementation","text":""},{"location":"products/taboga/tbl/handcode/#1-declare-barcodeclass","title":"1. Declare BarcodeClass","text":"<pre><code>! In Data Section\nBC   BarcodeClass\n</code></pre>"},{"location":"products/taboga/tbl/handcode/#2-window-code-example","title":"2. Window Code Example","text":"<pre><code>! In ThisWindow.Init\nBC.Init(window, ?Barcode)\n\n! Drawing barcode\nBC.Draw(BAR:Barcode, BAR:BarcodeType)\n\n! Changing properties\nBC.SetProperty(BC:HEIGHT, 50)\nBC.Reset                     ! Required after property changes\nBC.Draw(BAR:Barcode, BAR:BarcodeType)\n\n! In ThisWindow.Kill\nBC.Kill\n</code></pre>"},{"location":"products/taboga/tbl/handcode/#report-implementation","title":"\ud83d\udcc4 Report Implementation","text":"<pre><code>! In ThisReport.OpenReport (after parent call)\nBC.Init(report, ?Barcode, ?detail)\n\n! In ThisReport.TakeRecord (before parent call)\nBC.Draw(BAR:Barcode, BAR:BarcodeType)\n\n! In ThisReport.Kill (before parent call)\nBC.Kill\n</code></pre> <p>Important: Always call BC.Reset before BC.Draw when changing properties.</p>"},{"location":"products/taboga/tbl/installation/","title":"Installation","text":""},{"location":"products/taboga/tbl/installation/#file-locations","title":"\ud83d\udcc1 File Locations","text":""},{"location":"products/taboga/tbl/installation/#clarion-6","title":"\ud83d\udce6 Clarion 6","text":"Description Files Location Library Sources barcode.incbarcode.clwbctypes.incbctypes.clw \\Clarion\\LIBSRC Template Barcode.tpl \\Clarion6\\3rdParty\\TEMPLATE Documentation Barcode.rtf \\Clarion6\\3rdParty\\Docs\\Taboga\\Barcode Example Files bctest6.appBarcode.dctBarcodes.TPS \\Clarion6\\3rdParty\\Examples\\Taboga\\Barcode"},{"location":"products/taboga/tbl/installation/#clarion-7-and-above","title":"\ud83d\udce6 Clarion 7 and above","text":"Description Files Location Library Sources barcode.incbarcode.clwbctypes.incbctypes.clw \\Clarion\\accessory\\libsrc\\win Template Barcode.tpl \\Clarion\\accessory\\template\\win Documentation Barcode.rtf \\Clarion\\accessory\\Documents\\Taboga\\Barcode Example Files bctest6.appBarcode.dctBarcodes.TPS \\Clarion\\accessory\\Examples\\Taboga\\Barcode"},{"location":"products/taboga/tbl/reference/","title":"Class Reference","text":""},{"location":"products/taboga/tbl/reference/#properties","title":"\ud83d\udd27 Properties","text":""},{"location":"products/taboga/tbl/reference/#display-properties","title":"\ud83c\udfa8 Display Properties","text":"<ul> <li>BarColor: Color of barcode bars (inherits from string field text color)</li> <li>BackColor: Background color (inherits from string field)</li> <li>DrawText: Show human-readable text beneath barcode</li> <li>myFont: Text font (inherits from string field)</li> <li>myFontSize: Text size (inherits from string field)</li> <li>Wide2NarrowRatio: For CODE39/INT2OF5 (default: 2)</li> <li>XWidth: Narrow bar width (1/1000 inch or pixels)</li> <li>ForcePixels: Use pixels for XWidth (windows only)</li> </ul>"},{"location":"products/taboga/tbl/reference/#clear-areas-in-narrow-bars","title":"\ud83d\udccf Clear Areas (in narrow bars)","text":"<ul> <li>ClearAreaLeft: Left margin</li> <li>ClearAreaRight: Right margin</li> <li>ClearAreaTop: Top margin (not implemented)</li> <li>ClearAreaBottom: Bottom margin (not implemented)</li> <li>ClearAreaMiddle: Middle spacing (not implemented)</li> </ul>"},{"location":"products/taboga/tbl/reference/#data-properties","title":"\ud83d\udcca Data Properties","text":"<ul> <li>PrintStartStop: Show start/stop for CODE39</li> <li>AddCheckDigit: Auto-calculate check digits</li> </ul>"},{"location":"products/taboga/tbl/reference/#methods","title":"\ud83d\udce1 Methods","text":""},{"location":"products/taboga/tbl/reference/#init","title":"\ud83d\ude80 Init","text":"<pre><code>Init(WINDOW theWindow, UNSIGNED theControl, UNSIGNED theBand=0, BYTE barType=BARCODE:UPC_A)\n</code></pre>"},{"location":"products/taboga/tbl/reference/#reset-and-kill","title":"\ud83d\udd04 Reset and Kill","text":"<pre><code>Reset        ! After changing properties\nKill         ! Cleanup\n</code></pre>"},{"location":"products/taboga/tbl/reference/#draw","title":"\ud83c\udfaf Draw","text":"<p>Draw barcode with: - bc_string: Data to encode - bc_type: Barcode type (optional)</p> <pre><code>Draw(STRING bc_string, &lt;BYTE bc_type&gt;)\n</code></pre>"},{"location":"products/taboga/tbl/reference/#error-codes","title":"\u26a0\ufe0f Error Codes","text":"<pre><code>BCError:NoError                 EQUATE(0)   ! Success\nBCError:WindowNotInitialized    EQUATE(1)   ! Invalid window/report reference\nBCError:BarcodeTypeNotSet       EQUATE(2)   ! Missing barcode type\nBCError:BadCheckDigit           EQUATE(3)   ! Invalid check digit provided\nBCError:InvalidValue            EQUATE(4)   ! Invalid data for barcode type\nBCError:OtherErrors             EQUATE(5)   ! Other errors (e.g., invalid UPC-E system)\n</code></pre>"},{"location":"products/taboga/tbl/templates/","title":"Template Implementation","text":""},{"location":"products/taboga/tbl/templates/#basic-usage","title":"\ud83d\ude80 Basic Usage","text":"<p>Add barcode control templates to any window or report detail band.</p>"},{"location":"products/taboga/tbl/templates/#template-properties","title":"\u2699\ufe0f Template Properties","text":""},{"location":"products/taboga/tbl/templates/#barcode-configuration","title":"\ud83c\udfaf Barcode Configuration","text":"<ul> <li>Barcode Symbology: Choose specific type or \"Use Field\" for dynamic selection from a field</li> <li>Field that Holds Symbology: When \"Use Field\" selected, specify which field contains the barcode type</li> <li>Barcode Value: </li> <li>Direct value: Enter the exact barcode data</li> <li>Field reference: Prefix with '!' (e.g., !BAR:Barcode)</li> <li>Draw Value Under Barcode: Show human-readable text (uses DrawText property)</li> <li>Wide to Narrow Ratio: Ratio for specific symbologies (2-3 recommended):</li> <li>CODE39 and Extended</li> <li>Interleaved 2 of 5</li> <li>Code 2 of 5</li> </ul>"},{"location":"products/taboga/tbl/templates/#size-and-position","title":"\ud83d\udcd0 Size and Position","text":"<ul> <li>Fixed Bar Width: </li> <li>By default: Auto-adjusts to control width</li> <li>When enabled: Uses specified width</li> <li>Units: Mils (1/1000 inch) or pixels</li> <li>Force Pixels: </li> <li>Windows only: Convert width to pixels</li> <li>Reports: Always uses mils</li> <li>Clear Areas: </li> <li>Left/Right: Quiet zones in narrow bars</li> <li>Top/Bottom/Middle: Reserved for future use</li> </ul>"},{"location":"products/taboga/tbl/templates/#data-options","title":"\ud83d\udd04 Data Options","text":"<ul> <li>Draw Start/Stop Character: </li> <li>For CODE39/Extended only</li> <li>Requires DrawText=TRUE</li> <li>Shows start/stop characters in text</li> <li>Calculate Check Digits: </li> <li>For optional check digit types:<ul> <li>CODE39 (Standard/Extended)</li> <li>Interleaved 2 of 5</li> <li>Code 2 of 5</li> <li>CODABAR</li> </ul> </li> <li>Omit check digit in data for auto-calculation</li> </ul>"},{"location":"products/taboga/tbl/templates/#window-options","title":"\ud83e\ude9f Window Options","text":"<ul> <li>Draw Upon Entry: </li> <li>Automatically draw in ThisWindow.Init</li> <li>Caution with FONTDIALOG usage</li> </ul>"},{"location":"products/taboga/tbl/templates/#implementation-notes","title":"\ud83d\udca1 Implementation Notes","text":"<ol> <li>Field References</li> <li>Always use '!' prefix for field names</li> <li> <p>Example: !BAR:Barcode not BAR:Barcode</p> </li> <li> <p>Property Dependencies</p> </li> <li>Start/Stop requires DrawText=TRUE</li> <li>Fixed width overrides automatic sizing</li> <li> <p>Force Pixels only works with Fixed Bar Width</p> </li> <li> <p>Check Digit Handling</p> </li> <li>Optional: Let library calculate</li> <li>Manual: Include in barcode data</li> <li>UPC/EAN: Always required</li> </ol> <p>Note: Always prefix field names with '!' in the Barcode Value property.</p>"},{"location":"products/taboga/tbl/troubleshooting/","title":"Troubleshooting Guide","text":""},{"location":"products/taboga/tbl/troubleshooting/#common-issues","title":"\u26a0\ufe0f Common Issues","text":""},{"location":"products/taboga/tbl/troubleshooting/#drawing-issues","title":"\ud83c\udfa8 Drawing Issues","text":"<ul> <li>ThisWindow.Reset: Drawing barcode in ThisWindow.Reset may crash when using FONTDIALOG</li> <li> <p>Solution: Draw barcode only when needed instead of Reset</p> </li> <li> <p>Incorrect Text Display: Barcode value printed under barcode is wrong</p> </li> <li> <p>Solution: For template implementation, prefix field names with '!' (e.g., !BAR:Barcode)</p> </li> <li> <p>Property Changes Not Working: </p> </li> <li>Don't set properties before calling Init (Init resets to defaults)</li> <li>Always call Reset after changing properties, before Draw</li> <li> <p>Example sequence:     <pre><code>BC.Init(...)\nBC.SetProperty(...)\nBC.Reset\nBC.Draw(...)\n</code></pre></p> </li> <li> <p>XWidth Dimension Issues:</p> </li> <li>Windows: Uses pixel rounding (1-19 mils = 1 pixel)</li> <li>Reports: Always uses thousands of an inch</li> <li>Higher resolution devices show more precise width changes</li> </ul>"},{"location":"products/taboga/tbl/troubleshooting/#error-codes","title":"\ud83d\udd0d Error Codes","text":"Error Code Value Description Solution BCError:NoError 0 Operation completed successfully - BCError:WindowNotInitialized 1 Invalid window/report reference Check Init parametersVerify window/report exists BCError:BarcodeTypeNotSet 2 Missing or invalid barcode type Check Draw parametersVerify barcode type constant BCError:BadCheckDigit 3 Invalid check digit provided Either provide complete value with check digitOr omit check digit for auto-calculation BCError:InvalidValue 4 Data doesn't match barcode requirements Check data length (e.g., UPC-A needs 11 digits)Verify character set matches barcode type BCError:OtherErrors 5 Special case errors Example: UPC-E system number must be 0 or 1"},{"location":"products/taboga/tbl/troubleshooting/#best-practices","title":"\ud83d\udca1 Best Practices","text":"<ol> <li>Always call Kill before procedure ends</li> <li>Call Reset after any property changes</li> <li>Verify data matches barcode type requirements</li> <li>Test on target printer resolution</li> <li>Handle error returns from Init/Reset or omit check digit for auto-calculation</li> </ol>"},{"location":"products/taboga/tif/","title":"Overview","text":"<p>Taboga Interactive Filter provides powerful, intuitive filtering capabilities for Clarion browse procedures. Originally created by Edgard L. Riba (Taboga Software) in 2008-2009 and enhanced by Fomin Tools, this library transforms standard browse windows into sophisticated data filtering interfaces.</p>"},{"location":"products/taboga/tif/#key-features","title":"\u2728 Key Features","text":""},{"location":"products/taboga/tif/#right-click-filtering","title":"\ud83c\udfaf Right-Click Filtering","text":"<ul> <li>Filter by selection with a simple right-click</li> <li>Filter excluding selection for inverse filtering</li> <li>Context-sensitive menu options based on data type</li> </ul>"},{"location":"products/taboga/tif/#advanced-filter-dialog","title":"\ud83d\udd27 Advanced Filter Dialog","text":"<ul> <li>Multiple operator support (equals, contains, between, etc.)</li> <li>Data type-aware filtering (string, numeric, date, time)</li> <li>Complex criteria with AND/OR logic</li> <li>Visual operator selection interface</li> </ul>"},{"location":"products/taboga/tif/#filter-persistence","title":"\ud83d\udcbe Filter Persistence","text":"<ul> <li>Save frequently used filters with custom names</li> <li>Load saved filters across application sessions</li> <li>Collection-based organization by browse context</li> <li>Import/export filter configurations</li> </ul>"},{"location":"products/taboga/tif/#performance-optimized","title":"\u26a1 Performance Optimized","text":"<ul> <li>Instant filter application</li> <li>Efficient query generation</li> <li>SQL and ISAM driver support</li> <li>Smart case sensitivity handling</li> </ul>"},{"location":"products/taboga/tif/#visual-feedback","title":"\ud83c\udfa8 Visual Feedback","text":"<ul> <li>Toggle button shows active filter state</li> <li>Optional filter display control</li> <li>Context-sensitive popup menus</li> <li>Professional icon set included</li> </ul>"},{"location":"products/taboga/tif/#architecture","title":"\ud83c\udfd7\ufe0f Architecture","text":"<p>The library is built around the <code>TInteractiveFilterClass</code> which integrates seamlessly with ABC browse classes:</p> <pre><code>TIF2                 CLASS(TInteractiveFilterClass)\nBrowseResetSort        PROCEDURE(BYTE Force),DERIVED\nBrowseSetFilter        PROCEDURE(STRING Filter,STRING Id),DERIVED\nInitComponents         PROCEDURE(),BYTE,PROC,DERIVED\n                     END\n</code></pre>"},{"location":"products/taboga/tif/#use-cases","title":"\ud83c\udfaf Use Cases","text":""},{"location":"products/taboga/tif/#data-analysis","title":"\ud83d\udcca Data Analysis","text":"<ul> <li>Quick filtering for data exploration</li> <li>Complex criteria for detailed analysis</li> <li>Saved filters for recurring reports</li> </ul>"},{"location":"products/taboga/tif/#user-interface-enhancement","title":"\ud83d\udd0d User Interface Enhancement","text":"<ul> <li>Intuitive right-click operations</li> <li>No training required for end users</li> <li>Professional appearance and behavior</li> </ul>"},{"location":"products/taboga/tif/#enterprise-applications","title":"\ud83c\udfe2 Enterprise Applications","text":"<ul> <li>Multi-user filter sharing</li> <li>Standardized filtering across modules</li> <li>Consistent user experience</li> </ul>"},{"location":"products/taboga/tif/#requirements","title":"\ud83d\udccb Requirements","text":"<ul> <li>Clarion: Version 6.3 or later</li> <li>ABC Templates: Required for ABC version</li> <li>Template Family: ABC or Legacy Clarion support</li> <li>File Drivers: TopSpeed, SQL, or other Clarion-supported drivers</li> </ul>"},{"location":"products/taboga/tif/#quick-start","title":"\ud83d\ude80 Quick Start","text":"<ol> <li> <p>Enable the Extension <pre><code>Add TEnableInteractiveFilter extension to your application\n</code></pre></p> </li> <li> <p>Add to Browse <pre><code>Apply TInteractiveFilter control template to your browse window\n</code></pre></p> </li> <li> <p>Configure Fields <pre><code>Auto-populate from browse or manually select fields\n</code></pre></p> </li> <li> <p>Compile and Run <pre><code>Ready to use - no additional code required!\n</code></pre></p> </li> </ol>"},{"location":"products/taboga/tif/#documentation-structure","title":"\ud83d\udcd6 Documentation Structure","text":"<ul> <li>Getting Started - Installation and basic setup</li> <li>Tutorial - Step-by-step implementation guide</li> <li>Template Guide - Template configuration options</li> <li>API Reference - Complete class and method reference</li> <li>Examples - Real-world implementation examples</li> <li>Troubleshooting - Common issues and solutions</li> </ul>"},{"location":"products/taboga/tif/#video-demonstration","title":"\ud83c\udfac Video Demonstration","text":"<p>[Video walkthrough will be added here showing the interactive filtering capabilities]</p>"},{"location":"products/taboga/tif/#support","title":"\ud83d\udcde Support","text":"<p>For support and additional information:</p> <ul> <li>Email: support@fomintools.com</li> <li>Fomin Tools: https://fomintools.com</li> <li>Original Author: Edgard L. Riba (Taboga Software)</li> </ul> <p>Transform your Clarion browse windows with professional, intuitive filtering capabilities that your users will love!</p>"},{"location":"products/taboga/tif/api-reference/","title":"API Reference","text":"<p>Complete reference for the TInteractiveFilterClass and related components based on the actual implementation.</p>"},{"location":"products/taboga/tif/api-reference/#tinteractivefilterclass","title":"\ud83d\udd27 TInteractiveFilterClass","text":"<p>The main class implementing interactive filtering functionality.</p>"},{"location":"products/taboga/tif/api-reference/#core-methods","title":"\ud83d\ude80 Core Methods","text":""},{"location":"products/taboga/tif/api-reference/#lifecycle-methods","title":"\ud83c\udfd7\ufe0f Lifecycle Methods","text":"<pre><code>CONSTRUCT()                                    ! Constructor\nDESTRUCT()                                     ! Destructor\nKill()                                         ! Cleanup method\nInitComponents()                               ! Initialize components (virtual)\nInitPopup()                                    ! Initialize popup menus\n</code></pre> <p>InitComponents Implementation: <pre><code>TIF2.InitComponents PROCEDURE\nReturnValue          BYTE,AUTO\n  CODE\n  ReturnValue = PARENT.InitComponents()\n\n  SELF.myWindow           &amp;= QuickWindow         ! Window reference\n  SELF.CollectionName = 'BrowseName'            ! Filter collection identifier\n  SELF.BrowseControl    = ?Browse:1              ! Browse control reference\n  SELF.BrowseView      &amp;= BrowseView             ! View reference\n  SELF.BrowseQueueRef  &amp;= BrowseQueue            ! Queue reference\n\n  RETURN ReturnValue\n</code></pre></p>"},{"location":"products/taboga/tif/api-reference/#field-management","title":"\ud83d\udcca Field Management","text":"<pre><code>UpdateQuery(BYTE CaseSensitivity)              ! Auto-populate from browse\nAddItem(STRING pFieldName, STRING pTitle, &lt;STRING pPicture&gt;, BYTE pCaseSensitivity)\nAddItemOverride(STRING pFieldName, STRING pTitleOverride, BYTE pSkipAlways=0)\n</code></pre> <p>Usage Examples: <pre><code>! Auto-populate all browse fields\nTIF2.UpdateQuery(0)  ! 0=insensitive, 1=sensitive, 2=auto\n\n! Add individual fields\nTIF2.AddItem('CUS:Company','Company Name','@s20',e_tint_CaseInsensitive)\nTIF2.AddItem('CUS:State','State','@s2',e_tint_CaseSensitive)\n\n! Override or skip fields (call before UpdateQuery)\nTIF2.AddItemOverride('CUS:CustNumber','',TRUE)           ! Skip field\nTIF2.AddItemOverride('CUS:Company','Company Name',FALSE) ! Override title\n</code></pre></p>"},{"location":"products/taboga/tif/api-reference/#filter-operations","title":"\ud83c\udfaf Filter Operations","text":""},{"location":"products/taboga/tif/api-reference/#quick-filtering","title":"\u26a1 Quick Filtering","text":"<pre><code>FilterBySelection()                            ! Filter equals current value\nFilterExcludingSelection()                     ! Filter not equals current value\nFilterOnOperator(LONG pOperator)              ! Filter with specific operator\nFilterFor()                                    ! Show advanced filter dialog\n</code></pre> <p>Operator Constants: <pre><code>! String operators\ne_tint_Equals           EQUATE(1)    ! Exact match\ne_tint_NotEquals        EQUATE(2)    ! Not equal\ne_tint_BeginsWith       EQUATE(11)   ! Starts with\ne_tint_EndsWith         EQUATE(13)   ! Ends with  \ne_tint_Contains         EQUATE(15)   ! Contains text\ne_tint_NotContains      EQUATE(16)   ! Does not contain\ne_tint_Soundex          EQUATE(19)   ! Soundex match\n\n! Numeric operators\ne_tint_LessOrEqualThan     EQUATE(3) ! Less than or equal\ne_tint_LessThan            EQUATE(4) ! Less than\ne_tint_LargerThan          EQUATE(5) ! Greater than\ne_tint_LargerOrEqualThan   EQUATE(6) ! Greater than or equal\ne_tint_Between             EQUATE(7) ! Between values\ne_tint_NotBetween          EQUATE(8) ! Not between values\n\n! Date operators\ne_tint_CurrentMonth        EQUATE(31) ! Current month (any year)\ne_tint_CurrentDay          EQUATE(32) ! Current day (any year)\ne_tint_CurrentYear         EQUATE(33) ! Current year\ne_tint_CurrentWeek         EQUATE(34) ! Current week (any year)\ne_tint_CurrentWeekDay      EQUATE(35) ! Current weekday (any year)\ne_tint_CurrentQuarter      EQUATE(36) ! Current quarter (any year)\n\n! Time operators\ne_tint_CurrentHour         EQUATE(91) ! Current hour\ne_tint_CurrentMinute       EQUATE(92) ! Current minute\ne_tint_AM                  EQUATE(93) ! Morning (12:00 AM - 12:00 PM)\ne_tint_PM                  EQUATE(94) ! Afternoon (12:01 PM - 11:59 PM)\n</code></pre></p>"},{"location":"products/taboga/tif/api-reference/#filter-management","title":"\ud83d\udd27 Filter Management","text":"<pre><code>FilterRemove()                                 ! Remove all filters\nFilterRemoveLast()                             ! Remove last filter component\nGetFilter()                                    ! Get complete filter string\nApplyFilter()                                  ! Apply current filter\nDisableFilter()                                ! Temporarily disable filter\nisFilterAvailable()                            ! Check if filters exist\n</code></pre>"},{"location":"products/taboga/tif/api-reference/#advanced-filter-management","title":"\ud83d\udccb Advanced Filter Management","text":"<pre><code>AppendFilterEntry(*CSTRING pQueryEntry, *CSTRING pFieldName, LONG pOperator,\n                  *CSTRING pConditionLow, &lt;*CSTRING pConditionHigh&gt;,\n                  *CSTRING pPicture, BYTE pCaseSensitivity, STRING pJoinOp,\n                  BYTE pNewGroup, STRING pNewGroupJoinOp)\n\nClearFilter()                                  ! Clear all filter entries\nClearLastFilterEntry()                        ! Clear last filter entry\nSetCurrentInfo(STRING pField, LONG pQueueFieldNo) ! Set current field context\n</code></pre>"},{"location":"products/taboga/tif/api-reference/#browse-integration","title":"\ud83d\udd04 Browse Integration","text":"<pre><code>BrowseSetFilter(STRING Filter, STRING Id)     ! Set browse filter (virtual)\nBrowseResetSort(BYTE Force)                   ! Reset browse sort (virtual)\nTakeNewSelection()                             ! Handle selection change (virtual)\n</code></pre>"},{"location":"products/taboga/tif/api-reference/#ui-utilities","title":"\ud83c\udfa8 UI Utilities","text":"<pre><code>ReplaceMacro(*CSTRING pMacro, &lt;*CSTRING pBlankMacro&gt;) ! Replace text macros\nFreeFormQuery()                                ! Free-form query dialog\n</code></pre>"},{"location":"products/taboga/tif/api-reference/#properties","title":"\u2699\ufe0f Properties","text":""},{"location":"products/taboga/tif/api-reference/#core-configuration","title":"\ud83c\udfa8 Core Configuration","text":"<pre><code>myWindow                &amp;WINDOW                ! Window reference\nCollectionName          STRING                 ! Filter collection name\nBrowseControl           UNSIGNED               ! Browse control FEQ\nBrowseView              &amp;VIEW                  ! Browse view reference\nBrowseQueueRef          &amp;QUEUE                 ! Browse queue reference\n</code></pre>"},{"location":"products/taboga/tif/api-reference/#behavior-settings","title":"\ud83d\udd27 Behavior Settings","text":"<pre><code>AllowFreeFormQuery      BYTE                   ! Enable free-form queries\nAllowQueryPersistance   BYTE                   ! Enable save/load filters\nCaseSensitivity         BYTE                   ! Case handling mode\nOperatorInterface       BYTE                   ! 0=buttons, 1=list interface\n</code></pre>"},{"location":"products/taboga/tif/api-reference/#state-properties","title":"\ud83d\udcca State Properties","text":"<pre><code>isInteractiveFilterOn   BYTE                   ! Filter active status\nCurrentSortOrder        BYTE                   ! Current sort order\nCurrentType             BYTE                   ! Current field type\nisCurrentDataBlank      BYTE                   ! Current data is blank\nFromButton              BYTE                   ! Event from button\nExtraPopupItemsAdded    BYTE                   ! Dynamic items state\n</code></pre>"},{"location":"products/taboga/tif/api-reference/#control-references","title":"\ud83c\udf9b\ufe0f Control References","text":"<pre><code>InteractiveFilterToggleControl UNSIGNED       ! Toggle control FEQ\nInteractiveFilterResultFEQ     UNSIGNED       ! Result display control\n</code></pre>"},{"location":"products/taboga/tif/api-reference/#event-configuration","title":"\ud83d\udccb Event Configuration","text":"<pre><code>LoadFilterEvent         LONG                   ! Load filter event number\nSaveFilterEvent         LONG                   ! Save filter event number\n</code></pre>"},{"location":"products/taboga/tif/api-reference/#text-properties","title":"\ud83d\udcdd Text Properties","text":"<pre><code>FilterBySelectionText        STRING            ! Menu text\nFilterExcludingSelectionText STRING            ! Menu text\nFilterByContainsText         STRING            ! Menu text\nFilterByNotContainsText      STRING            ! Menu text\nFilterForText                STRING            ! Menu text\nFilterRemoveText             STRING            ! Menu text\n</code></pre>"},{"location":"products/taboga/tif/api-reference/#macro-properties","title":"\ud83d\udd17 Macro Properties","text":"<pre><code>EqualsMacro             STRING                 ! Equals text macro\nEqualsBlank             STRING                 ! Blank equals text\nNotEqualsMacro          STRING                 ! Not equals macro\nNotEqualsBlank          STRING                 ! Blank not equals text\nContainsMacro           STRING                 ! Contains macro\nNotContainsMacro        STRING                 ! Not contains macro\nLessOrEqualMacro        STRING                 ! Less/equal macro\nMoreOrEqualMacro        STRING                 ! More/equal macro\nOnOrBeforeMacro         STRING                 ! Date before macro\nOnOrAfterMacro          STRING                 ! Date after macro\n</code></pre>"},{"location":"products/taboga/tif/api-reference/#queue-structures","title":"\ud83d\udcca Queue Structures","text":""},{"location":"products/taboga/tif/api-reference/#tfilterqueue-filterrows","title":"TFilterQueue (FilterRows)","text":"<pre><code>ID                      LONG                   ! Filter entry ID\nFilter                  STRING                 ! Generated filter expression\nIsManual                BYTE                   ! Manual/free-form flag\nFieldName               STRING                 ! Field name\nOperator                LONG                   ! Filter operator\nConditionLow            STRING                 ! Low condition value\nConditionHigh           STRING                 ! High condition value\nPicture                 STRING                 ! Field picture\nCaseSensitivity         BYTE                   ! Case sensitivity\nJoinOp                  STRING                 ! Join operator (AND/OR)\nNewGroup                BYTE                   ! New group flag\nNewGroupJoinOp          STRING                 ! New group join operator\n</code></pre>"},{"location":"products/taboga/tif/api-reference/#tfieldqueue-fieldq","title":"TFieldQueue (FieldQ)","text":"<pre><code>Name                    STRING                 ! Field name\nTitle                   STRING                 ! Display title\nPicture                 STRING                 ! Field picture\nLow                     STRING                 ! Low value\nMiddle                  STRING                 ! Middle value\nHigh                    STRING                 ! High value\nCaseSensitivity         BYTE                   ! Case sensitivity\nJustification           BYTE                   ! Text justification\n</code></pre>"},{"location":"products/taboga/tif/api-reference/#fieldoverridequeue","title":"FieldOverrideQueue","text":"<pre><code>FieldName               STRING                 ! Field to override\nTitleOverride           STRING                 ! Override title\nSkipAlways              BYTE                   ! Skip field flag\n</code></pre>"},{"location":"products/taboga/tif/api-reference/#case-sensitivity-constants","title":"\ud83d\udd27 Case Sensitivity Constants","text":"<pre><code>e_tint_CaseInsensitive  EQUATE(0)              ! Case insensitive\ne_tint_CaseSensitive    EQUATE(1)              ! Case sensitive\ne_tint_Configurable     EQUATE(2)              ! User configurable\n</code></pre>"},{"location":"products/taboga/tif/api-reference/#template-events","title":"\ud83d\udccb Template Events","text":""},{"location":"products/taboga/tif/api-reference/#default-event-numbers","title":"Default Event Numbers","text":"<pre><code>! Filter events (from template)\n4064                                           ! Filter by selection\n4065                                           ! Filter excluding selection\n4066                                           ! Filter for dialog\n4067                                           ! Remove filter\n4068                                           ! Contains/Less than or equal\n4069                                           ! Not contains/Greater than or equal\n4070                                           ! Load saved filter\n4071                                           ! Save current filter\n</code></pre>"},{"location":"products/taboga/tif/api-reference/#template-symbols","title":"Template Symbols","text":"<pre><code>! Hex values used in template\n0FE0h                                          ! Selection event (4064)\n0FE1h                                          ! Excluding selection (4065)\n0FE2h                                          ! Filter for event (4066)\n0FE3h                                          ! Remove query (4067)\n0FE4h                                          ! Contains query (4068)\n0FE5h                                          ! Not contains query (4069)\n0FE6h                                          ! Load query (4070)\n0FE7h                                          ! Save query (4071)\n</code></pre>"},{"location":"products/taboga/tif/api-reference/#popup-class-integration","title":"\ud83c\udfa8 Popup Class Integration","text":"<p>The library integrates with ABC PopupClass:</p> <pre><code>Popup                   &amp;PopupClass            ! Main popup reference\nPopupFBS                &amp;PopupClass            ! Filter by selection popup\nPopupQBF                &amp;PopupClass            ! Query by form popup\n</code></pre>"},{"location":"products/taboga/tif/api-reference/#popup-methods-used","title":"Popup Methods Used","text":"<pre><code>! Popup management\nSELF.Popup.AddItem(TEXT, ID)\nSELF.Popup.AddItemEvent(ID, EVENT, CONTROL)\nSELF.Popup.SetIcon(ID, ICONFILE)\nSELF.Popup.SetText(ID, TEXT)\nSELF.Popup.SetItemEnable(ID, ENABLED)\nSELF.Popup.DeleteItem(ID)\nSELF.Popup.AddItemMimic(ID, CONTROL, TEXT)\n</code></pre>"},{"location":"products/taboga/tif/api-reference/#legacy-clarion-support","title":"\ud83d\udd04 Legacy Clarion Support","text":"<p>For Legacy Clarion applications:</p> <pre><code>BrowseQueuePrefix       STRING                 ! Queue prefix for legacy\nForceRefresh            BYTE                   ! Force refresh flag\n</code></pre>"},{"location":"products/taboga/tif/api-reference/#legacy-popup-handling","title":"Legacy Popup Handling","text":"<pre><code>! Legacy popup variables (template generated)\nItemName                CSTRING(101)           ! Current item name\nIconName                CSTRING(255)           ! Current icon name\nItemText                CSTRING(101)           ! Current item text\nTPopupText              CSTRING(1000)          ! Complete popup text\n</code></pre>"},{"location":"products/taboga/tif/api-reference/#file-integration","title":"\ud83d\udcc1 File Integration","text":"<p>For filter persistence:</p> <pre><code>! Persistence files (created by save/load procedures)\n_TFilters               FILE                   ! Filter definitions\n_TFilterRows            FILE                   ! Filter components\n</code></pre> <p>This API reference provides complete coverage of the TInteractiveFilterClass and its integration with Clarion browse procedures.</p>"},{"location":"products/taboga/tif/examples/","title":"Examples","text":"<p>Real-world implementation examples of the Taboga Interactive Filter Library.</p>"},{"location":"products/taboga/tif/examples/#basic-customer-browse","title":"\ud83c\udfaf Basic Customer Browse","text":""},{"location":"products/taboga/tif/examples/#simple-implementation","title":"\ud83d\udcca Simple Implementation","text":"<pre><code>! Basic customer browse with filtering\nCustomers PROCEDURE \n\nBRW1::View:Browse    VIEW(Customers)\n                       PROJECT(CUS:Company)\n                       PROJECT(CUS:FirstName)\n                       PROJECT(CUS:LastName)\n                       PROJECT(CUS:City)\n                       PROJECT(CUS:State)\n                       PROJECT(CUS:ZipCode)\n                     END\n\nQueue:Browse:1       QUEUE\nCUS:Company            LIKE(CUS:Company)\nCUS:FirstName          LIKE(CUS:FirstName)\nCUS:LastName           LIKE(CUS:LastName)\nCUS:City               LIKE(CUS:City)\nCUS:State              LIKE(CUS:State)\nCUS:ZipCode            LIKE(CUS:ZipCode)\nCUS:CustNumber         LIKE(CUS:CustNumber)\nMark                   BYTE\nViewPosition           STRING(1024)\n                     END\n\n! Interactive Filter class\nTIF2                 CLASS(TInteractiveFilterClass)\nBrowseResetSort        PROCEDURE(BYTE Force),DERIVED\nBrowseSetFilter        PROCEDURE(STRING Filter,STRING Id),DERIVED\nInitComponents         PROCEDURE(),BYTE,PROC,DERIVED\n                     END\n\nQuickWindow          WINDOW('Browse Customers'),AT(,,447,197),RESIZE,CENTER\n  LIST,AT(8,30,434,124),USE(?Browse:1),FROM(Queue:Browse:1)\n  BUTTON,AT(5,158,14,14),USE(?TFilterFor),ICON('tint_FilterFor.ico'),FLAT\n  CHECK,AT(19,158,14,14),USE(?TFilterToggle),ICON('tint_FilterToggle.ico'),FLAT\n  BUTTON('Close'),AT(399,180,49,14),USE(?Close)\nEND\n\n  CODE\n  GlobalResponse = ThisWindow.Run()\n\nThisWindow.Init PROCEDURE\nReturnValue          BYTE,AUTO\n  CODE\n  ReturnValue = PARENT.Init()\n  IF ReturnValue THEN RETURN ReturnValue.\n\n  ! Initialize Interactive Filter\n  TIF2.InitComponents\n  ?TFilterToggle{PROP:Use} = TIF2.isInteractiveFilterOn\n  TIF2.InteractiveFilterToggleControl = ?TFilterToggle\n  DISABLE(?TFilterToggle)\n\n  TIF2.UpdateQuery(0)        ! Auto-populate from browse\n  TIF2.InitPopup            ! Setup context menus\n  TIF2.CaseSensitivity = 0  ! Case insensitive\n\n  RETURN ReturnValue\n\nTIF2.InitComponents PROCEDURE\nReturnValue          BYTE,AUTO\n  CODE\n  ReturnValue = PARENT.InitComponents()\n\n  SELF.myWindow           &amp;= QuickWindow\n  SELF.CollectionName = 'Customers'\n  SELF.AllowFreeFormQuery = FALSE\n  SELF.BrowseControl    = ?Browse:1\n  SELF.BrowseView      &amp;= BRW1::View:Browse\n  SELF.BrowseQueueRef  &amp;= Queue:Browse:1\n  SELF.AllowQueryPersistance = TRUE\n  SELF.LoadFilterEvent   = 4070\n  SELF.SaveFilterEvent   = 4071\n  SELF.OperatorInterface = 0\n\n  RETURN ReturnValue\n</code></pre>"},{"location":"products/taboga/tif/examples/#advanced-product-browse","title":"\ud83c\udfa8 Advanced Product Browse","text":""},{"location":"products/taboga/tif/examples/#list-interface-with-filter-display","title":"\ud83d\udccb List Interface with Filter Display","text":"<pre><code>Products PROCEDURE \n\n! Enhanced configuration with visual feedback\nTIF11                CLASS(TInteractiveFilterClass)\nBrowseResetSort        PROCEDURE(BYTE Force),DERIVED\nBrowseSetFilter        PROCEDURE(STRING Filter,STRING Id),DERIVED\nInitComponents         PROCEDURE(),BYTE,PROC,DERIVED\n                     END\n\nQuickWindow          WINDOW('Browse Products'),AT(,,493,262),CENTER\n  PROMPT('Current filter will be displayed below:'),AT(6,2,478,10)\n  LIST,AT(8,65,475,115),USE(?Browse:1),FROM(Queue:Browse:1)\n\n  ! Filter controls\n  BUTTON,AT(4,204,14,14),USE(?TFilterFor),ICON('tint_FilterFor.ico'),FLAT\n  CHECK,AT(18,204,14,14),USE(?TFilterToggle),ICON('tint_FilterToggle.ico'),FLAT\n\n  ! Filter display\n  PROMPT('Filter'),AT(5,223,349,36),USE(?TFilter)\n\n  BUTTON('Close'),AT(441,206,49,14),USE(?Close)\nEND\n\nTIF11.InitComponents PROCEDURE\nReturnValue          BYTE,AUTO\n  CODE\n  ReturnValue = PARENT.InitComponents()\n\n  SELF.myWindow           &amp;= QuickWindow\n  SELF.CollectionName = 'Products'\n  SELF.AllowFreeFormQuery = FALSE\n  SELF.BrowseControl    = ?Browse:1\n  SELF.BrowseView      &amp;= BRW1::View:Browse\n  SELF.BrowseQueueRef  &amp;= Queue:Browse:1\n\n  ! Use list interface for operators\n  SELF.OperatorInterface = 1\n\n  ! Display current filter\n  SELF.InteractiveFilterResultFEQ = ?TFilter\n\n  SELF.AllowQueryPersistance = TRUE\n  SELF.LoadFilterEvent   = 4070\n  SELF.SaveFilterEvent   = 4071\n\n  RETURN ReturnValue\n</code></pre>"},{"location":"products/taboga/tif/examples/#datenumeric-filtering","title":"\ud83d\udcc5 Date/Numeric Filtering","text":""},{"location":"products/taboga/tif/examples/#inventory-history-browse","title":"\ud83d\udd50 Inventory History Browse","text":"<pre><code>InvHist PROCEDURE \n\n! Specialized for date and numeric data\nTIF7                 CLASS(TInteractiveFilterClass)\nBrowseResetSort        PROCEDURE(BYTE Force),DERIVED\nBrowseSetFilter        PROCEDURE(STRING Filter,STRING Id),DERIVED\nInitComponents         PROCEDURE(),BYTE,PROC,DERIVED\n                     END\n\nBRW1::View:Browse    VIEW(InvHist)\n                       PROJECT(INV:Date)\n                       PROJECT(INV:TransType)\n                       PROJECT(INV:ProductNumber)\n                       PROJECT(INV:Quantity)\n                       PROJECT(INV:VendorNumber)\n                       PROJECT(INV:Cost)\n                       PROJECT(INV:Notes)\n                       JOIN(VEN:KeyVendorNumber,INV:VendorNumber)\n                         PROJECT(VEN:VendorName)\n                       END\n                       JOIN(PRO:KeyProductNumber,INV:ProductNumber)\n                         PROJECT(PRO:Description)\n                       END\n                     END\n\nTIF7.InitComponents PROCEDURE\nReturnValue          BYTE,AUTO\n  CODE\n  ReturnValue = PARENT.InitComponents()\n\n  SELF.myWindow           &amp;= QuickWindow\n  SELF.CollectionName = 'InvHist'\n  SELF.AllowFreeFormQuery = FALSE\n  SELF.BrowseControl    = ?Browse:1\n  SELF.BrowseView      &amp;= BRW1::View:Browse\n  SELF.BrowseQueueRef  &amp;= Queue:Browse:1\n  SELF.AllowQueryPersistance = TRUE\n  SELF.LoadFilterEvent   = 4070\n  SELF.SaveFilterEvent   = 4071\n  SELF.OperatorInterface = 0\n\n  RETURN ReturnValue\n\n! Event handling for date/numeric context\nThisWindow.TakeFieldEvent PROCEDURE\nReturnValue          BYTE,AUTO\n  CODE\n  ReturnValue = PARENT.TakeFieldEvent()\n\n  CASE FIELD()\n  OF ?Browse:1\n    CASE EVENT()\n    ELSE\n       ! Enhanced context-sensitive filtering\n       CASE EVENT()\n       OF 4068  ! Contains/Less than or equal\n          CASE(TIF7.CurrentType)\n          OF 1     ! String\n             TIF7.FilterOnOperator(e_tint_Contains)\n          OF 2     ! Numeric  \n             TIF7.FilterOnOperator(e_tint_LessOrEqualThan)\n          OF 3     ! Date\n             TIF7.FilterOnOperator(e_tint_LessOrEqualThan)\n          OF 4     ! Time\n             TIF7.FilterOnOperator(e_tint_LessOrEqualThan)\n          END\n\n       OF 4069  ! Not contains/Greater than or equal\n          CASE(TIF7.CurrentType)\n          OF 1     ! String\n             TIF7.FilterOnOperator(e_tint_NotContains)\n          OF 2     ! Numeric\n             TIF7.FilterOnOperator(e_tint_LargerOrEqualThan)\n          OF 3     ! Date\n             TIF7.FilterOnOperator(e_tint_LargerOrEqualThan)\n          OF 4     ! Time\n             TIF7.FilterOnOperator(e_tint_LargerOrEqualThan)\n          END\n       END\n    END\n  END\n\n  RETURN ReturnValue\n</code></pre>"},{"location":"products/taboga/tif/examples/#custom-saveload-implementation","title":"\ud83d\udcbe Custom Save/Load Implementation","text":""},{"location":"products/taboga/tif/examples/#enhanced-filter-persistence","title":"\ud83d\udd27 Enhanced Filter Persistence","text":"<pre><code>! Custom save procedure with additional validation\nMyCustomSaveFilter PROCEDURE(* TInteractiveFilterClass pIFObj, &lt;STRING pFilterName&gt;)\nxSavedFilterName     LIKE(_TF:SavedFilterName)\nxFilterCount         LONG\nWindow WINDOW('Save Filter'),AT(,,300,80),GRAY,CENTER,MODAL\n  PROMPT('Filter Name:'),AT(10,10)\n  ENTRY(@s80),AT(10,25,200,12),USE(xSavedFilterName)\n  STRING(@n3),AT(220,25),USE(xFilterCount)\n  BUTTON('&amp;Save'),AT(155,50,45,14),USE(?Save),DEFAULT\n  BUTTON('&amp;Cancel'),AT(205,50,45,14),USE(?Cancel)\nEND\n\n  CODE\n  ! Get current filter count\n  xFilterCount = RECORDS(pIFObj.FilterRows)\n\n  ! Validate filter exists\n  IF NOT xFilterCount\n     MESSAGE('No filter criteria to save!','Save Filter',ICON:Exclamation)\n     RETURN TRUE\n  END\n\n  ! Get filter name from user\n  IF NOT OMITTED(2)\n     xSavedFilterName = CLIP(pFilterName)\n  ELSE\n     OPEN(Window)\n     ACCEPT\n        CASE FIELD()\n        OF ?Save\n           IF NOT xSavedFilterName\n              MESSAGE('Please enter a filter name!','Save Filter',ICON:Exclamation)\n              SELECT(?xSavedFilterName)\n              CYCLE\n           END\n           POST(EVENT:CloseWindow)\n        OF ?Cancel\n           xSavedFilterName = ''\n           POST(EVENT:CloseWindow)\n        END\n     END\n     CLOSE(Window)\n  END\n\n  IF NOT xSavedFilterName\n     RETURN TRUE  ! User cancelled\n  END\n\n  ! Save with timestamp\n  CLEAR(_TFilters)\n  _TF:FilterCollectionName = pIFObj.CollectionName\n  _TF:SavedFilterName = xSavedFilterName &amp; ' [' &amp; FORMAT(TODAY(),@d6) &amp; ']'\n\n  ! Continue with standard save logic...\n  ! (Implementation details as in tutorial)\n\n  MESSAGE('Filter \"' &amp; xSavedFilterName &amp; '\" saved successfully!','Save Filter',ICON:Asterisk)\n  RETURN FALSE\n\n! Custom load with preview\nMyCustomLoadFilter PROCEDURE(* TInteractiveFilterClass pIFObj)\nxPreviewFilter       STRING(1000)\nxAppendMode          STRING(10)\n\n! Enhanced load dialog with preview\nLoadWindow WINDOW('Load Saved Filter'),AT(,,400,250),GRAY,CENTER,MODAL\n  LIST,AT(10,20,200,150),USE(?FilterList),FROM(FilterQueue)\n  PROMPT('Preview:'),AT(220,20)\n  TEXT,AT(220,35,170,100),USE(xPreviewFilter),READONLY\n  OPTION('Load Mode'),AT(220,140,170,40),USE(xAppendMode),BOXED\n    RADIO('Replace Current'),VALUE('REPLACE')\n    RADIO('Add with AND'),VALUE('AND')\n    RADIO('Add with OR'),VALUE('OR')\n  END\n  BUTTON('&amp;Load'),AT(270,200,50,14),USE(?Load)\n  BUTTON('&amp;Cancel'),AT(330,200,50,14),USE(?Cancel)\nEND\n\n  CODE\n  ! Build filter list with preview\n  ! Show enhanced load dialog\n  ! Apply selected filter with chosen mode\n\n  RETURN\n</code></pre>"},{"location":"products/taboga/tif/examples/#field-override-examples","title":"\ud83c\udfaf Field Override Examples","text":""},{"location":"products/taboga/tif/examples/#selective-field-configuration","title":"\ud83d\udcdd Selective Field Configuration","text":"<pre><code>! Manual field configuration with overrides\nTIF2.InitComponents PROCEDURE\nReturnValue          BYTE,AUTO\n  CODE\n  ReturnValue = PARENT.InitComponents()\n\n  ! Standard configuration\n  SELF.myWindow           &amp;= QuickWindow\n  SELF.CollectionName = 'CustomersAdvanced'\n  SELF.BrowseControl    = ?Browse:1\n  SELF.BrowseView      &amp;= BRW1::View:Browse\n  SELF.BrowseQueueRef  &amp;= Queue:Browse:1\n\n  ! Field overrides (applied before UpdateQuery)\n  SELF.AddItemOverride('CUS:CustNumber','',TRUE)           ! Skip internal ID\n  SELF.AddItemOverride('CUS:Company','Company Name',FALSE) ! Override title\n  SELF.AddItemOverride('CUS:State','State/Province',FALSE) ! Localized title\n\n  ! Auto-populate with overrides applied\n  SELF.UpdateQuery(0)\n\n  ! Manual additions for special fields\n  SELF.AddItem('CUS:LastModified','Last Updated','@d6',e_tint_CaseSensitive)\n  SELF.AddItem('CUS:CreditLimit','Credit Limit','@n$10.2',e_tint_CaseSensitive)\n\n  RETURN ReturnValue\n</code></pre>"},{"location":"products/taboga/tif/examples/#legacy-clarion-implementation","title":"\ud83d\udd27 Legacy Clarion Implementation","text":""},{"location":"products/taboga/tif/examples/#non-abc-application","title":"\ud83c\udfdb\ufe0f Non-ABC Application","text":"<pre><code>! Legacy Clarion implementation\nCustomers PROCEDURE \n\n! Legacy popup handling variables\nItemName             CSTRING(101)\nIconName             CSTRING(255)\nItemText             CSTRING(101)\nTPopupText           CSTRING(1000)\nPopupText            CSTRING(1000)\n\nTIF2                 CLASS(TInteractiveFilterClass)\nBrowseResetSort        PROCEDURE(BYTE Force),DERIVED\nBrowseSetFilter        PROCEDURE(STRING Filter,STRING Id),DERIVED\nInitComponents         PROCEDURE(),BYTE,PROC,DERIVED\nTakeNewSelection       PROCEDURE(),DERIVED\n                     END\n\nWindow WINDOW('Browse Customers'),AT(,,400,200)\n  LIST,AT(10,30,380,130),USE(?Browse:1),FROM(BrowseQueue)\n  BUTTON,AT(10,170,14,14),USE(?TFilterFor),ICON('tint_FilterFor.ico'),FLAT\n  CHECK,AT(30,170,14,14),USE(?TFilterToggle),ICON('tint_FilterToggle.ico'),FLAT\n  BUTTON('Close'),AT(350,170,40,14),USE(?Close)\nEND\n\n  CODE\n  OPEN(Window)\n\n  ! Initialize filter\n  TIF2.InitComponents\n  ?TFilterToggle{PROP:Use} = TIF2.isInteractiveFilterOn\n  TIF2.InteractiveFilterToggleControl = ?TFilterToggle\n  DISABLE(?TFilterToggle)\n\n  TIF2.UpdateQuery(0)\n  TIF2.InitPopup\n  TIF2.CaseSensitivity = 0\n\n  ! Legacy accept loop\n  ACCEPT\n    CASE FIELD()\n    OF ?Browse:1\n      CASE EVENT()\n      OF EVENT:NewSelection\n        DO TakeNewSelection\n      ELSE\n        ! Filter event handling\n        CASE EVENT()\n        OF 4064\n          TIF2.FilterOnOperator(e_tint_equals)\n        OF 4065\n          TIF2.FilterOnOperator(e_tint_NotEquals)\n        OF 4067\n          TIF2.FilterRemove\n        END\n      END\n\n    OF ?TFilterFor\n      IF EVENT() = EVENT:Accepted\n         x# = TIF2.FilterFor()\n      END\n\n    OF ?TFilterToggle\n      IF EVENT() = EVENT:Accepted\n         IF TIF2.isInteractiveFilterOn AND TIF2.GetFilter()\n            TIF2.ApplyFilter()\n         ELSE\n            TIF2.DisableFilter()\n         END\n      END\n\n    OF ?Close\n      IF EVENT() = EVENT:Accepted\n         POST(EVENT:CloseWindow)\n      END\n    END\n  END\n\n  CLOSE(Window)\n\nTIF2.InitComponents PROCEDURE\nReturnValue          BYTE,AUTO\n  CODE\n  ReturnValue = PARENT.InitComponents()\n\n  SELF.myWindow           &amp;= Window\n  SELF.CollectionName = 'CustomersLegacy'\n  SELF.BrowseControl    = ?Browse:1\n  SELF.BrowseQueuePrefix = 'BRW1:'\n  SELF.AllowQueryPersistance = FALSE  ! Simplified for legacy\n  SELF.OperatorInterface = 0\n\n  RETURN ReturnValue\n\nTakeNewSelection ROUTINE\n  ! Legacy popup menu building\n  TIF2.TakeNewSelection\n  PopupText = TPopupText\n  ! Handle popup selection...\n</code></pre>"},{"location":"products/taboga/tif/examples/#multi-dll-configuration","title":"\ud83c\udfa8 Multi-DLL Configuration","text":""},{"location":"products/taboga/tif/examples/#dll-with-exported-classes","title":"\ud83d\udd27 DLL with Exported Classes","text":"<pre><code>! In main DLL application\nAPPLICATION('FilterLibrary'),DLL\n\n! Extension configuration\n[T] Enables \"InteractiveFilter\" functionality\n  \u2611 Export TInteractiveFilterClass\n  \u2611 Export ABC PopupClass\n\n! Compilation symbols generated:\n! _TIntFilterLinkMode_=&gt;1;_TIntFilterDllMode_=&gt;0\n\n! In client application\nAPPLICATION('ClientApp'),EXE\n\n! Extension configuration  \n[T] Enables \"InteractiveFilter\" functionality\n  \u2611 Generate TInteractiveFilterClass as EXTERNAL\n    External Source: Dynamic Link Library (DLL)\n\n! Compilation symbols generated:\n! _TIntFilterLinkMode_=&gt;0;_TIntFilterDllMode_=&gt;1\n</code></pre>"},{"location":"products/taboga/tif/examples/#performance-optimization","title":"\ud83d\udcca Performance Optimization","text":""},{"location":"products/taboga/tif/examples/#high-performance-configuration","title":"\u26a1 High-Performance Configuration","text":"<pre><code>! Optimized for large datasets\nTIF2.InitComponents PROCEDURE\nReturnValue          BYTE,AUTO\n  CODE\n  ReturnValue = PARENT.InitComponents()\n\n  ! Standard configuration\n  SELF.myWindow           &amp;= QuickWindow\n  SELF.CollectionName = 'LargeDataset'\n  SELF.BrowseControl    = ?Browse:1\n  SELF.BrowseView      &amp;= BRW1::View:Browse\n  SELF.BrowseQueueRef  &amp;= Queue:Browse:1\n\n  ! Performance optimizations\n  SELF.CaseSensitivity = 1                     ! Case sensitive for SQL\n  SELF.AllowFreeFormQuery = FALSE              ! Disable complex queries\n  SELF.OperatorInterface = 0                   ! Faster button interface\n\n  ! Only add indexed fields\n  SELF.AddItem('CUS:State','State','@s2',e_tint_CaseSensitive)      ! Indexed\n  SELF.AddItem('CUS:ZipCode','Zip','@s10',e_tint_CaseSensitive)     ! Indexed\n  SELF.AddItem('CUS:Company','Company','@s20',e_tint_CaseSensitive) ! Indexed\n\n  ! Skip non-indexed fields to prevent slow queries\n\n  RETURN ReturnValue\n</code></pre>"},{"location":"products/taboga/tif/examples/#integration-examples","title":"\ud83c\udfaf Integration Examples","text":""},{"location":"products/taboga/tif/examples/#with-query-by-example","title":"\ud83d\udd17 With Query-by-Example","text":"<pre><code>! Combining with existing QBE functionality\nBRW1.SetAlerts PROCEDURE\n  CODE\n  ! Add QBE integration\n  IF QBEActive\n     SELF.Popup.AddItem('Switch to QBE','SwitchQBE')\n  END\n\n  ! Standard filter popup items\n  SELF.Popup.AddItem(TIF2.FilterBySelectionText,'TFilterSelection')\n  SELF.Popup.AddItemEvent('TFilterSelection',4064,?Browse:1)\n  SELF.Popup.SetIcon('TFilterSelection','tint_FilterBySelection.ico')\n\n  PARENT.SetAlerts\n</code></pre>"},{"location":"products/taboga/tif/examples/#custom-event-handling","title":"\ud83c\udfa8 Custom Event Handling","text":"<pre><code>! Custom event numbers to avoid conflicts\nTIF2.InitComponents PROCEDURE\nReturnValue          BYTE,AUTO\n  CODE\n  ReturnValue = PARENT.InitComponents()\n\n  ! Custom event numbers\n  SELF.LoadFilterEvent   = 5000  ! Instead of 4070\n  SELF.SaveFilterEvent   = 5001  ! Instead of 4071\n\n  ! Rest of configuration...\n  RETURN ReturnValue\n\n! Corresponding event handling\nThisWindow.TakeFieldEvent PROCEDURE\n  CODE\n  ! Handle custom events\n  CASE EVENT()\n  OF 5000  ! Custom load event\n     MyCustomLoadFilter(TIF2)\n  OF 5001  ! Custom save event\n     MyCustomSaveFilter(TIF2)\n  END\n\n  RETURN PARENT.TakeFieldEvent()\n</code></pre> <p>These examples demonstrate the flexibility and power of the Taboga Interactive Filter Library across different scenarios and configurations.</p>"},{"location":"products/taboga/tif/getting-started/","title":"Getting Started","text":""},{"location":"products/taboga/tif/getting-started/#installation","title":"\ud83d\udce6 Installation","text":""},{"location":"products/taboga/tif/getting-started/#library-files","title":"\ud83d\udd27 Library Files","text":"<p>Ensure the following files are in your Clarion installation:</p>"},{"location":"products/taboga/tif/getting-started/#libsrc-directory","title":"\ud83d\udcc1 LibSrc Directory","text":"<pre><code>libsrc\\\n\u251c\u2500\u2500 TInteractiveFilter.INC    # Class definitions and includes\n\u251c\u2500\u2500 TInteractiveFilter.CLW    # Class implementation\n\u2514\u2500\u2500 TInteractiveFilter.TRN    # Translation strings\n</code></pre>"},{"location":"products/taboga/tif/getting-started/#template-directory","title":"\ud83d\udcc1 Template Directory","text":"<pre><code>template\\\n\u2514\u2500\u2500 TInteractiveFilter.TPL   # Template definitions\n</code></pre>"},{"location":"products/taboga/tif/getting-started/#icon-files","title":"\ud83c\udfa8 Icon Files","text":"<pre><code>images\\\n\u251c\u2500\u2500 tint_FilterFor.ico\n\u251c\u2500\u2500 tint_FilterToggle.ico\n\u251c\u2500\u2500 tint_FilterBySelection.ico\n\u251c\u2500\u2500 tint_FilterExcludingSelection.ico\n\u251c\u2500\u2500 tint_FilterRemove.ico\n\u251c\u2500\u2500 tint_Empty.ico\n\u251c\u2500\u2500 tint_FreeFormQuery.ico\n\u251c\u2500\u2500 tint_LoadQuery.ico\n\u2514\u2500\u2500 tint_SaveQuery.ico\n</code></pre>"},{"location":"products/taboga/tif/getting-started/#template-registration","title":"\u2699\ufe0f Template Registration","text":"<ol> <li>Open Clarion IDE</li> <li>Template Registry \u2192 Register Template</li> <li>Browse to <code>TInteractiveFilter.TPL</code></li> <li>Confirm registration</li> </ol>"},{"location":"products/taboga/tif/getting-started/#basic-setup","title":"\ud83d\ude80 Basic Setup","text":""},{"location":"products/taboga/tif/getting-started/#1-enable-extension","title":"1\ufe0f\u20e3 Enable Extension","text":"<p>First, enable the Interactive Filter extension in your application:</p> <ol> <li>Application Properties \u2192 Extensions</li> <li>Add Extension \u2192 [TABOGA] Enables \"InteractiveFilter\" functionality</li> <li>Configure multi-DLL settings if applicable</li> </ol> <pre><code>! Extension automatically adds global includes:\nINCLUDE('TInteractiveFilter.INC'),ONCE\n</code></pre>"},{"location":"products/taboga/tif/getting-started/#2-add-to-browse-window","title":"2\ufe0f\u20e3 Add to Browse Window","text":"<p>Apply the control template to your browse procedure:</p> <ol> <li>Select Browse Procedure</li> <li>Window Designer \u2192 Controls</li> <li>Add Control \u2192 [TABOGA] Interactive Filter for browse</li> <li>Position the filter controls on your window</li> </ol>"},{"location":"products/taboga/tif/getting-started/#default-controls-added","title":"\ud83c\udfa8 Default Controls Added","text":"<pre><code>BUTTON,AT(,,14,14),USE(?TFilterFor),ICON('tint_FilterFor.ico'),FLAT\nCHECK,AT(14,0,14,14),USE(?TFilterToggle),ICON('tint_FilterToggle.ico'),FLAT\n</code></pre>"},{"location":"products/taboga/tif/getting-started/#3-configure-template","title":"3\ufe0f\u20e3 Configure Template","text":""},{"location":"products/taboga/tif/getting-started/#query-tab","title":"\ud83d\udcca Query Tab","text":"<ul> <li>\u2705 Filter by selection - Right-click equals filtering</li> <li>\u2705 Filter excluding selection - Right-click not-equals filtering  </li> <li>\u2705 Filter for - Advanced filter dialog</li> <li>\u2705 Remove Filter - Clear all filters</li> <li>\u2705 Contains/Does Not Contain Pair - Context-sensitive options</li> </ul>"},{"location":"products/taboga/tif/getting-started/#case-sensitivity","title":"\ud83d\udd27 Case Sensitivity","text":"<ul> <li>Force Case Sensitive - Exact case matching</li> <li>Force Case Insensitive - Ignore case (default)</li> <li>Manual - Driver-dependent default</li> </ul>"},{"location":"products/taboga/tif/getting-started/#filter-persistence","title":"\ud83d\udcbe Filter Persistence","text":"<pre><code>\u2611 Allow saving and loading filters\n  Save procedure: TInteractiveFilter_SaveFilter\n  Load procedure: TInteractiveFilter_LoadFilter\n</code></pre>"},{"location":"products/taboga/tif/getting-started/#4-field-configuration","title":"4\ufe0f\u20e3 Field Configuration","text":""},{"location":"products/taboga/tif/getting-started/#auto-population-recommended","title":"\ud83e\udd16 Auto-Population (Recommended)","text":"<p><pre><code>\u2611 Auto Populate from BrowseBox\n</code></pre> - Automatically includes all browse columns - Override field titles as needed - Skip fields selectively</p>"},{"location":"products/taboga/tif/getting-started/#manual-configuration","title":"\ud83d\udcdd Manual Configuration","text":"<pre><code>! Add fields manually\nQBEField: CUS:Company\nQBETitle: Company Name\nQBEPicture: @s20\nQBENoCase: Yes\n</code></pre>"},{"location":"products/taboga/tif/getting-started/#generated-code","title":"\ud83d\udd04 Generated Code","text":"<p>The template automatically generates the necessary integration code:</p>"},{"location":"products/taboga/tif/getting-started/#class-declaration","title":"\ud83d\udccb Class Declaration","text":"<pre><code>TIF2                 CLASS(TInteractiveFilterClass)\nBrowseResetSort        PROCEDURE(BYTE Force),DERIVED\nBrowseSetFilter        PROCEDURE(STRING Filter,STRING Id),DERIVED\nInitComponents         PROCEDURE(),BYTE,PROC,DERIVED\n                     END\n</code></pre>"},{"location":"products/taboga/tif/getting-started/#initialization","title":"\u26a1 Initialization","text":"<pre><code>! Automatic initialization in ThisWindow.Init\nTIF2.InitComponents\n?TFilterToggle{PROP:Use} = TIF2.isInteractiveFilterOn\nTIF2.InteractiveFilterToggleControl = ?TFilterToggle\nDISABLE(?TFilterToggle)\n\nTIF2.UpdateQuery(0)        ! Auto-populate fields\nTIF2.InitPopup            ! Setup context menus\nTIF2.CaseSensitivity = 0  ! Configure case handling\n</code></pre>"},{"location":"products/taboga/tif/getting-started/#event-handling","title":"\ud83c\udfaf Event Handling","text":"<pre><code>! Filter button events\nOF ?TFilterFor\n  x# = TIF2.FilterFor()\n  TIF2.FromButton = FALSE\n\nOF ?TFilterToggle  \n  IF TIF2.isInteractiveFilterOn AND TIF2.GetFilter()\n     TIF2.ApplyFilter()\n  ELSE\n     TIF2.DisableFilter()\n  END\n</code></pre>"},{"location":"products/taboga/tif/getting-started/#ui-integration","title":"\ud83c\udfa8 UI Integration","text":""},{"location":"products/taboga/tif/getting-started/#browse-popup-menu","title":"\ud83d\udcca Browse Popup Menu","text":"<p>The template automatically adds context menu items:</p> <ul> <li>Filter by \"Value\" - Quick equal filter</li> <li>Filter excluding \"Value\" - Quick not-equal filter  </li> <li>Contains \"Value\" - String contains filter</li> <li>On or before \"Value\" - Date/numeric comparison</li> <li>Filter for... - Advanced dialog</li> <li>Remove filter - Clear all filters</li> </ul>"},{"location":"products/taboga/tif/getting-started/#visual-feedback","title":"\ud83d\udd27 Visual Feedback","text":"<ul> <li>Toggle Button - Shows active filter state</li> <li>Filter Display - Optional current filter text</li> <li>Context-Sensitive Menus - Adapt to data type</li> </ul>"},{"location":"products/taboga/tif/getting-started/#verification","title":"\u2705 Verification","text":"<p>After setup, verify the installation:</p> <ol> <li>Compile your application successfully</li> <li>Run and open a browse window</li> <li>Right-click on any column - see filter options</li> <li>Click the filter button - opens filter dialog</li> <li>Apply a filter - see toggle button activate</li> </ol>"},{"location":"products/taboga/tif/getting-started/#next-steps","title":"\ud83d\ude80 Next Steps","text":"<ul> <li>Tutorial - Detailed implementation walkthrough</li> <li>Template Guide - Advanced configuration options</li> <li>Examples - Real-world implementation examples</li> </ul> <p>You're now ready to add powerful filtering capabilities to your browse windows!</p>"},{"location":"products/taboga/tif/template-guide/","title":"Template Guide","text":"<p>This guide covers the complete template system for the Taboga Interactive Filter, based on the actual template implementation.</p>"},{"location":"products/taboga/tif/template-guide/#template-architecture","title":"\ud83d\udd27 Template Architecture","text":""},{"location":"products/taboga/tif/template-guide/#extension-template","title":"\ud83d\udccb Extension Template","text":"<p>The <code>TEnableInteractiveFilter</code> extension must be applied at the application level:</p> <pre><code>#EXTENSION(TEnableInteractiveFilter,'[T] Enables \"InteractiveFilter\" functionality on the application/DLL...')\n</code></pre>"},{"location":"products/taboga/tif/template-guide/#control-templates","title":"\ud83c\udfaf Control Templates","text":"<p>Two control templates are available:</p> <ol> <li>TInteractiveFilter - For ABC applications</li> <li>TInteractiveFilterLegacy - For Legacy Clarion applications</li> </ol>"},{"location":"products/taboga/tif/template-guide/#extension-configuration","title":"\ud83d\ude80 Extension Configuration","text":""},{"location":"products/taboga/tif/template-guide/#application-setup","title":"\ud83d\udce6 Application Setup","text":""},{"location":"products/taboga/tif/template-guide/#multi-language-support","title":"\ud83c\udf10 Multi-Language Support","text":"<pre><code>! Interface language configuration\nInterface File: TInteractiveFilter_EN.GUI\nTranslation File: TInteractiveFilter_EN.TRN\nSystem Language: EN\n</code></pre>"},{"location":"products/taboga/tif/template-guide/#multi-dll-configuration","title":"\ud83d\udd27 Multi-DLL Configuration","text":"<p>For multi-DLL projects:</p> <pre><code>\u2611 Generate TInteractiveFilterClass as EXTERNAL\n  External Source: Dynamic Link Library (DLL)\n\n! Results in compilation symbols:\n_TIntFilterLinkMode_=&gt;0;_TIntFilterDllMode_=&gt;1\n</code></pre> <p>DLL Export Options (when creating DLL): <pre><code>\u2611 Export TInteractiveFilterClass\n\u2611 Export ABC PopupClass  ! If other apps don't use ABC\n</code></pre></p>"},{"location":"products/taboga/tif/template-guide/#control-template-configuration","title":"\ud83c\udf9b\ufe0f Control Template Configuration","text":""},{"location":"products/taboga/tif/template-guide/#query-tab-options","title":"\ud83d\udcca Query Tab Options","text":""},{"location":"products/taboga/tif/template-guide/#popup-menu-items","title":"\ud83c\udfaf Popup Menu Items","text":"<pre><code>\u2611 Filter by selection              ! Right-click equals filtering\n\u2611 Filter excluding selection       ! Right-click not-equals filtering\n\u2611 Filter for                      ! Advanced filter dialog\n\u2611 Remove Filter                   ! Clear all filters\n\u2611 Contains/Does Not Contain Pair  ! Context-sensitive options\n</code></pre>"},{"location":"products/taboga/tif/template-guide/#case-sensitivity","title":"\ud83d\udd24 Case Sensitivity","text":"<pre><code>\u25ef Force Case Sensitive           ! Exact case matching\n\u25cf Force Case Insensitive         ! Ignore case (default)\n\u25ef Manual (driver-dependent)      ! Auto-detect based on driver\n</code></pre> <p>Generated Code: <pre><code>! Case insensitive (0)\nTIF2.CaseSensitivity = 0\n\n! Case sensitive (1)  \nTIF2.CaseSensitivity = 1\n\n! Manual/Auto-detect (2)\nTIF2.CaseSensitivity = 2\n</code></pre></p>"},{"location":"products/taboga/tif/template-guide/#filter-persistence","title":"\ud83d\udcbe Filter Persistence","text":"<pre><code>\u2611 Allow saving and loading filters\n  Save procedure: TInteractiveFilter_SaveFilter\n  Load procedure: TInteractiveFilter_LoadFilter\n</code></pre>"},{"location":"products/taboga/tif/template-guide/#filter-display","title":"\ud83d\udda5\ufe0f Filter Display","text":"<pre><code>\u2611 Display filter being applied\n  Filter Result Control: ?FilterDisplay\n</code></pre>"},{"location":"products/taboga/tif/template-guide/#fields-tab-configuration","title":"\ud83d\udccb Fields Tab Configuration","text":""},{"location":"products/taboga/tif/template-guide/#auto-population-recommended","title":"\ud83e\udd16 Auto-Population (Recommended)","text":"<pre><code>\u2611 Auto Populate from BrowseBox\n</code></pre> <p>Field Override Options: <pre><code>! For each browse column:\nField: CUS:Company\n  \u2610 Always skip this field\n  \u2611 Override field header\n    Title: Company Name\n</code></pre></p> <p>Generated Override Code: <pre><code>! Skip field entirely\nSELF.AddItemOverride('CUS:CustNumber','',TRUE)\n\n! Override title only\nSELF.AddItemOverride('CUS:Company','Company Name',FALSE)\n</code></pre></p>"},{"location":"products/taboga/tif/template-guide/#manual-field-configuration","title":"\ud83d\udcdd Manual Field Configuration","text":"<pre><code>! Manual field addition:\nField: CUS:Company\nTitle: Company Name  \nPicture: @s20\n\u2611 Caseless  ! For string fields\n</code></pre>"},{"location":"products/taboga/tif/template-guide/#help-tab-settings","title":"\ud83c\udd98 Help Tab Settings","text":""},{"location":"products/taboga/tif/template-guide/#advanced-options","title":"\ud83d\udd27 Advanced Options","text":"<pre><code>Filter Collection Name: Customers      ! Unique identifier for saved filters\n\u2610 Apply filter when changing sort-orders\n\u2610 Allow Free-Form Queries\n</code></pre>"},{"location":"products/taboga/tif/template-guide/#event-numbers","title":"\ud83d\udce1 Event Numbers","text":"<pre><code>Selection action: 4064             ! Filter by selection\nExcluding Selection action: 4065   ! Filter excluding selection  \nFilter for action: 4066           ! Advanced filter dialog\nRemove query action: 4067         ! Remove all filters\nContains query action: 4068       ! Contains/Less than or equal\nNot Contain query action: 4069    ! Not contains/Greater than or equal\nLoad Query action: 4070           ! Load saved filter\nSave Query action: 4071           ! Save current filter\n</code></pre>"},{"location":"products/taboga/tif/template-guide/#interface-options","title":"\ud83c\udfa8 Interface Options","text":"<pre><code>\u2611 Use a \"Hot\" Popup               ! Context-sensitive menus\nOperator Interface: Buttons       ! Buttons vs List selection\n  \u25ef Buttons  ! Icon-based operator selection\n  \u25ef List     ! List-box operator selection\n</code></pre>"},{"location":"products/taboga/tif/template-guide/#generated-code-structure","title":"\ud83c\udfd7\ufe0f Generated Code Structure","text":""},{"location":"products/taboga/tif/template-guide/#class-declaration","title":"\ud83d\udccb Class Declaration","text":"<pre><code>! Generated for each template instance\nTIF2                 CLASS(TInteractiveFilterClass)\nBrowseResetSort        PROCEDURE(BYTE Force),DERIVED\nBrowseSetFilter        PROCEDURE(STRING Filter,STRING Id),DERIVED  \nInitComponents         PROCEDURE(),BYTE,PROC,DERIVED\n                     END\n</code></pre>"},{"location":"products/taboga/tif/template-guide/#initialization-code","title":"\u26a1 Initialization Code","text":"<pre><code>! In ThisWindow.Init (ABC) or BeforeAccept (Legacy)\nTIF2.InitComponents\n?TFilterToggle{PROP:Use} = TIF2.isInteractiveFilterOn\nTIF2.InteractiveFilterToggleControl = ?TFilterToggle\nDISABLE(?TFilterToggle)\n\n! Auto-population or manual field addition\nTIF2.UpdateQuery(0)                    ! Auto-populate\n! OR\nTIF2.AddItem('CUS:Company','Company Name','@s20',e_tint_CaseInsensitive)\n\nTIF2.InitPopup                         ! Setup context menus\nTIF2.CaseSensitivity = 0              ! Configure case sensitivity\n</code></pre>"},{"location":"products/taboga/tif/template-guide/#event-handling","title":"\ud83c\udfaf Event Handling","text":""},{"location":"products/taboga/tif/template-guide/#browse-events","title":"\ud83d\udcca Browse Events","text":"<pre><code>! In browse TakeFieldEvent\nCASE FIELD()\nOF ?Browse:1\n  CASE EVENT()\n  ELSE\n     IF EVENT() = 4064                 ! Filter by selection\n        TIF2.FilterOnOperator(e_tint_equals)\n     END\n     IF EVENT() = 4065                 ! Filter excluding selection\n        TIF2.FilterOnOperator(e_tint_NotEquals)\n     END\n     IF EVENT() = 4067                 ! Remove filter\n        TIF2.FilterRemove\n     END\n\n     ! Context-sensitive filtering\n     CASE EVENT()\n     OF 4068  ! Contains/Less than or equal\n        CASE(TIF2.CurrentType)\n        OF 1  ! String\n           TIF2.FilterOnOperator(e_tint_Contains)\n        OF 2  ! Numeric  \n           TIF2.FilterOnOperator(e_tint_LessOrEqualThan)\n        OF 3  ! Date\n           TIF2.FilterOnOperator(e_tint_LessOrEqualThan)\n        END\n     OF 4069  ! Not contains/Greater than or equal\n        CASE(TIF2.CurrentType)\n        OF 1  ! String\n           TIF2.FilterOnOperator(e_tint_NotContains)\n        OF 2  ! Numeric\n           TIF2.FilterOnOperator(e_tint_LargerOrEqualThan)\n        OF 3  ! Date\n           TIF2.FilterOnOperator(e_tint_LargerOrEqualThan)\n        END\n     END\n\n     ! Save/Load events\n     IF EVENT() = TIF2.LoadFilterEvent\n        TInteractiveFilter_LoadFilter(TIF2)\n        POST(EVENT:NewSelection,?Browse:1)\n     END\n     IF EVENT() = TIF2.SaveFilterEvent\n        TInteractiveFilter_SaveFilter(TIF2)\n        SELECT(?Browse:1)\n     END\n  END\n</code></pre>"},{"location":"products/taboga/tif/template-guide/#button-events","title":"\ud83d\udd18 Button Events","text":"<pre><code>! Filter button events\nCASE ACCEPTED()\nOF ?TFilterFor\n  ThisWindow.Update()\n  x# = TIF2.FilterFor()\n  TIF2.FromButton = FALSE\n\nOF ?TFilterToggle\n  IF TIF2.isInteractiveFilterOn AND TIF2.GetFilter()\n     TIF2.ApplyFilter()\n  ELSE\n     TIF2.DisableFilter()\n  END\n  SELECT(TIF2.BrowseControl)\n</code></pre>"},{"location":"products/taboga/tif/template-guide/#popup-menu-integration","title":"\ud83c\udfa8 Popup Menu Integration","text":""},{"location":"products/taboga/tif/template-guide/#setalerts-implementation","title":"\ud83d\udcca SetAlerts Implementation","text":"<pre><code>! In browse SetAlerts method\nSELF.Popup.AddItem(TIF2.FilterBySelectionText,'TFilterSelection')\nSELF.Popup.AddItemEvent('TFilterSelection',4064,?Browse:1)\nSELF.Popup.SetIcon('TFilterSelection','tint_FilterBySelection.ico')\n\nSELF.Popup.AddItem(TIF2.FilterExcludingSelectionText,'TFilterNotSelection')\nSELF.Popup.AddItemEvent('TFilterNotSelection',4065,?Browse:1)\nSELF.Popup.SetIcon('TFilterNotSelection','tint_FilterExcludingSelection.ico')\n\n! Dynamic context-sensitive items\nSELF.Popup.AddItem('','TFilterExtra1')\nSELF.Popup.AddItemEvent('TFilterExtra1',4068,?Browse:1)\nSELF.Popup.SetIcon('TFilterExtra1','tint_Empty.ico')\n\nSELF.Popup.AddItem('','TFilterExtra2')\nSELF.Popup.AddItemEvent('TFilterExtra2',4069,?Browse:1)\nSELF.Popup.SetIcon('TFilterExtra2','tint_Empty.ico')\n\nTIF2.ExtraPopupItemsAdded = TRUE\n\n! Filter management\nSELF.Popup.AddItemMimic('TFilterFor',?TFilterFor,TIF2.FilterForText)\nSELF.Popup.AddItem(TIF2.FilterRemoveText,'TFilterRemove')\nSELF.Popup.AddItemEvent('TFilterRemove',4067,?Browse:1)\nSELF.Popup.SetIcon('TFilterRemove','tint_FilterRemove.ico')\nSELF.Popup.AddItem('-','TFilterSeparator')\n</code></pre>"},{"location":"products/taboga/tif/template-guide/#dynamic-menu-updates","title":"\ud83d\udd04 Dynamic Menu Updates","text":"<pre><code>! In browse TakeNewSelection method\nIF ?Browse:1{PROPLIST:MouseDownRow} &lt;&gt; 0 AND ?Browse:1{PROPLIST:MouseDownZone}=LISTZONE:Field\n  SELF.UpdateBuffer\n  xQueueFieldNo = ?Browse:1{PROPLIST:FieldNo,?Browse:1{PROPLIST:MouseDownField}}\n  xField = UPPER(CLIP(WHO(Queue:Browse:1,xQueueFieldNo)))\n\n  IF TIF2.SetCurrentInfo(xField,xQueueFieldNo)\n     ! Update menu text with current data\n     SELF.Popup.SetText('TFilterSelection',TIF2.ReplaceMacro(TIF2.EqualsMacro,TIF2.EqualsBlank))\n     SELF.Popup.SetText('TFilterNotSelection',TIF2.ReplaceMacro(TIF2.NotEqualsMacro,TIF2.NotEqualsBlank))\n\n     ! Context-sensitive options based on data type\n     SELF.Popup.SetText('TFilterExtra1',CHOOSE(TIF2.CurrentType,|\n       TIF2.ReplaceMacro(TIF2.ContainsMacro),|          ! String\n       TIF2.ReplaceMacro(TIF2.LessOrEqualMacro),|       ! Numeric\n       TIF2.ReplaceMacro(TIF2.OnOrBeforeMacro)))        ! Date\n  END\nEND\n</code></pre>"},{"location":"products/taboga/tif/template-guide/#template-customization","title":"\ud83c\udfaf Template Customization","text":""},{"location":"products/taboga/tif/template-guide/#custom-event-numbers","title":"\ud83d\udccb Custom Event Numbers","text":"<p>To avoid conflicts with other templates:</p> <pre><code>! Change default event numbers\nSelection action: 5000             ! Instead of 4064\nExcluding Selection action: 5001   ! Instead of 4065\nFilter for action: 5002           ! Instead of 4066\nRemove query action: 5003         ! Instead of 4067\n</code></pre>"},{"location":"products/taboga/tif/template-guide/#custom-procedures","title":"\ud83d\udd27 Custom Procedures","text":"<p>Override default save/load procedures:</p> <pre><code>Save procedure: MyCustomSaveFilter\nLoad procedure: MyCustomLoadFilter\n</code></pre> <p>Custom Procedure Signature: <pre><code>MyCustomSaveFilter PROCEDURE(* TInteractiveFilterClass pIFObj, &lt;STRING pFilterName&gt;)\nMyCustomLoadFilter PROCEDURE(* TInteractiveFilterClass pIFObj)\n</code></pre></p>"},{"location":"products/taboga/tif/template-guide/#legacy-clarion-support","title":"\ud83c\udfa8 Legacy Clarion Support","text":"<p>For Legacy Clarion applications, the template generates slightly different code:</p> <pre><code>! Legacy popup handling\nBuildPopupMenu ROUTINE\n  TIF2.TakeNewSelection\n  ItemName = 'TFilterSelection'\n  IconName = 'tint_FilterBySelection.ico'\n  ItemText = TIF2.ReplaceMacro(TIF2.EqualsMacro,TIF2.EqualsBlank)\n  DO BuildPopupItem\n\n  ! Build popup text string\n  PopupText = TPopupText &amp; PopupText\n</code></pre>"},{"location":"products/taboga/tif/template-guide/#advanced-template-features","title":"\ud83d\udd27 Advanced Template Features","text":""},{"location":"products/taboga/tif/template-guide/#sort-order-integration","title":"\ud83d\udcca Sort Order Integration","text":"<pre><code>! Automatic filter management across sort orders\nIF NewOrder &lt;&gt; TIF2.CurrentSortOrder\n   ! Check if filter exists for new sort order\n   GET(SELF.Order,NewOrder)\n   IF NOT ERRORCODE() AND NOT SELF.Order.Filter &amp;= NULL\n      SELF.Order.Filter.ID = '99TABOGA'\n      GET(SELF.Order.Filter,-SELF.Order.Filter.ID)\n      IF NOT ERRORCODE()\n         IF SELF.Order.Filter.Filter = TIF2.GetFilter()\n            TIF2.isInteractiveFilterOn = TRUE\n         ELSE\n            TIF2.isInteractiveFilterOn = FALSE\n            SELF.SetFilter('','99TABOGA')\n         END\n      END\n   ELSE\n      TIF2.isInteractiveFilterOn = FALSE\n   END\n   TIF2.CurrentSortOrder = NewOrder\nEND\n</code></pre>"},{"location":"products/taboga/tif/template-guide/#initcomponents-customization","title":"\ud83c\udf9b\ufe0f InitComponents Customization","text":"<pre><code>! Generated InitComponents with all options\nTIF2.InitComponents PROCEDURE\nReturnValue          BYTE,AUTO\n  CODE\n  ReturnValue = PARENT.InitComponents()\n\n  SELF.myWindow           &amp;= QuickWindow\n  SELF.CollectionName = 'Customers'\n  SELF.AllowFreeFormQuery = FALSE               ! From template setting\n  SELF.BrowseControl    = ?Browse:1\n  SELF.BrowseView      &amp;= BRW1::View:Browse\n  SELF.BrowseQueueRef  &amp;= Queue:Browse:1\n  SELF.AllowQueryPersistance = TRUE             ! From template setting\n  SELF.LoadFilterEvent   = 4070                ! From template setting\n  SELF.SaveFilterEvent   = 4071                ! From template setting\n  SELF.OperatorInterface = 0                   ! From template setting\n\n  ! Field overrides (if auto-populate enabled)\n  SELF.AddItemOverride('CUS:CustNumber','',TRUE)           ! Skip field\n  SELF.AddItemOverride('CUS:Company','Company Name',FALSE) ! Override title\n\n  RETURN ReturnValue\n</code></pre>"},{"location":"products/taboga/tif/template-guide/#required-files","title":"\ud83d\udcc1 Required Files","text":""},{"location":"products/taboga/tif/template-guide/#icon-resources","title":"\ud83c\udfa8 Icon Resources","text":"<p>The template automatically includes these icons in your project:</p> <pre><code>#PROJECT('tint_FreeFormQuery.ico')\n#PROJECT('tint_SaveQuery.ico')\n#PROJECT('tint_LoadQuery.ico')\n#PROJECT('tint_FilterBySelection.ico')\n#PROJECT('tint_FilterExcludingSelection.ico')\n#PROJECT('tint_FilterRemove.ico')\n#PROJECT('tint_Empty.ico')\n</code></pre>"},{"location":"products/taboga/tif/template-guide/#data-files","title":"\ud83d\udcca Data Files","text":"<p>For filter persistence, these files are required:</p> <pre><code>! Filter definitions\n_TFilters            FILE,DRIVER('TOPSPEED')\nPrimaryKey             KEY(_TF:SavedFilterID),PRIMARY\nbyFilterCollectionName KEY(_TF:FilterCollectionName,_TF:SavedFilterName),DUP\nRecord                 RECORD,PRE(_TF)\nSavedFilterID            LONG\nFilterCollectionName     CSTRING(101)\nSavedFilterName          STRING(80)\n                       END\n                     END\n\n! Individual filter components\n_TFilterRows         FILE,DRIVER('TOPSPEED')\nPrimaryKey             KEY(_TFRow:SavedFilterID,_TFRow:ID),PRIMARY\nRecord                 RECORD,PRE(_TFRow)\nSavedFilterID            LONG\nID                       SHORT\nFilter                   CSTRING(501)\nIsManual                 BYTE\nFieldName                CSTRING(100)\nPicture                  CSTRING(41)\nCaseSensitivity          BYTE\nOperator                 LONG\nConditionLow             CSTRING(401)\nConditionHigh            CSTRING(401)\nJoinOp                   CSTRING(4)\nNewGroup                 BYTE\nNewGroupJoinOp           CSTRING(4)\n                       END\n                     END\n</code></pre>"},{"location":"products/taboga/tif/template-guide/#next-steps","title":"\ud83d\udcd6 Next Steps","text":"<ul> <li>API Reference - Complete method documentation</li> <li>Examples - Implementation examples</li> <li>Troubleshooting - Common issues and solutions</li> </ul> <p>Master the template system to customize the Interactive Filter for your specific needs!</p>"},{"location":"products/taboga/tif/troubleshooting/","title":"Troubleshooting","text":"<p>Common issues and solutions for the Taboga Interactive Filter Library.</p>"},{"location":"products/taboga/tif/troubleshooting/#installation-issues","title":"\ud83d\udea8 Installation Issues","text":""},{"location":"products/taboga/tif/troubleshooting/#template-not-found","title":"\u274c Template Not Found","text":"<p>Problem: \"Template 'TInteractiveFilter' not found\" error when registering.</p> <p>Solutions: 1. Verify File Location <pre><code>\u2705 Correct: C:\\Clarion11\\Template\\TInteractiveFilter.TPL\n\u274c Wrong:   C:\\Clarion11\\LibSrc\\TInteractiveFilter.TPL\n</code></pre></p> <ol> <li>Register Template Manually</li> <li>Open Clarion IDE</li> <li>Setup \u2192 Template Registry</li> <li>Register \u2192 Browse to TPL file</li> <li> <p>Confirm registration successful</p> </li> <li> <p>Check File Permissions</p> </li> <li>Ensure read access to template directory</li> <li>Run Clarion as Administrator if needed</li> </ol>"},{"location":"products/taboga/tif/troubleshooting/#extension-restriction-error","title":"\u274c Extension Restriction Error","text":"<p>Problem: \"Control template requires TEnableInteractiveFilter extension\" error.</p> <p>Solutions: 1. Add Extension First <pre><code>Application Properties \u2192 Extensions\nAdd: [T] Enables \"InteractiveFilter\" functionality\n</code></pre></p> <ol> <li>Extension Order</li> <li>Extension must be added before control template</li> <li> <p>If added after, remove and re-add control template</p> </li> <li> <p>Verify Extension Active <pre><code>! Should see in global includes:\nINCLUDE('TInteractiveFilter.INC'),ONCE\n</code></pre></p> </li> </ol>"},{"location":"products/taboga/tif/troubleshooting/#compilation-errors","title":"\ud83d\udd27 Compilation Errors","text":""},{"location":"products/taboga/tif/troubleshooting/#missing-include-files","title":"\u274c Missing Include Files","text":"<p>Problem: \"File not found: TInteractiveFilter.INC\" compilation error.</p> <p>Solutions: 1. Check LibSrc Directory <pre><code>\u2705 Required files:\nC:\\Clarion11\\LibSrc\\TInteractiveFilter.INC\nC:\\Clarion11\\LibSrc\\TInteractiveFilter.CLW\nC:\\Clarion11\\LibSrc\\TInteractiveFilter_EN.TRN\n</code></pre></p> <ol> <li> <p>Verify Include Path <pre><code>! In generated code, should see:\nINCLUDE('TInteractiveFilter.INC'),ONCE\n</code></pre></p> </li> <li> <p>Manual Include <pre><code>! Add to global map if needed:\nMAP\n  INCLUDE('TInteractiveFilter.INC'),ONCE\nEND\n</code></pre></p> </li> </ol>"},{"location":"products/taboga/tif/troubleshooting/#class-not-found-errors","title":"\u274c Class Not Found Errors","text":"<p>Problem: \"TInteractiveFilterClass not found\" compilation error.</p> <p>Solutions: 1. Multi-DLL Configuration Issue <pre><code>! Check compilation symbols:\n_TIntFilterLinkMode_=&gt;1;_TIntFilterDllMode_=&gt;0  ! Standard\n_TIntFilterLinkMode_=&gt;0;_TIntFilterDllMode_=&gt;1  ! External DLL\n</code></pre></p> <ol> <li> <p>ABC Classes Not Enabled <pre><code>! For Legacy Clarion, ensure ABC is available:\n_ABCLinkMode_=&gt;1;_ABCDllMode_=&gt;0\n</code></pre></p> </li> <li> <p>Export Configuration <pre><code>! In DLL project, ensure exports:\nTInteractiveFilterClass @?\nPopupClass @?  ! If other apps don't use ABC\n</code></pre></p> </li> </ol>"},{"location":"products/taboga/tif/troubleshooting/#icon-file-errors","title":"\u274c Icon File Errors","text":"<p>Problem: \"Icon file not found\" warnings or missing icons.</p> <p>Solutions: 1. Add Icons to Project <pre><code>#PROJECT('tint_FilterFor.ico')\n#PROJECT('tint_FilterToggle.ico')\n#PROJECT('tint_FilterBySelection.ico')\n#PROJECT('tint_FilterExcludingSelection.ico')\n#PROJECT('tint_FilterRemove.ico')\n#PROJECT('tint_Empty.ico')\n</code></pre></p> <ol> <li> <p>Icon File Location <pre><code>\u2705 Project directory or Clarion\\Images\n\u274c Don't put in LibSrc or Template directories\n</code></pre></p> </li> <li> <p>Alternative Icon Specification <pre><code>! Use full path if needed:\nICON('C:\\MyProject\\Icons\\tint_FilterFor.ico')\n</code></pre></p> </li> </ol>"},{"location":"products/taboga/tif/troubleshooting/#runtime-issues","title":"\ud83c\udfaf Runtime Issues","text":""},{"location":"products/taboga/tif/troubleshooting/#filter-not-working","title":"\u274c Filter Not Working","text":"<p>Problem: Right-click menu appears but filtering doesn't work.</p> <p>Solutions: 1. Check Event Handling <pre><code>! Verify events are handled in TakeFieldEvent:\nCASE FIELD()\nOF ?Browse:1\n  IF EVENT() = 4064  ! Filter by selection\n     TIF2.FilterOnOperator(e_tint_equals)\n  END\n</code></pre></p> <ol> <li> <p>Initialization Missing <pre><code>! Ensure proper initialization:\nTIF2.InitComponents\nTIF2.UpdateQuery(0)\nTIF2.InitPopup\n</code></pre></p> </li> <li> <p>Browse Integration <pre><code>! Check SetAlerts method has popup setup:\nSELF.Popup.AddItem(TIF2.FilterBySelectionText,'TFilterSelection')\n</code></pre></p> </li> </ol>"},{"location":"products/taboga/tif/troubleshooting/#toggle-button-not-working","title":"\u274c Toggle Button Not Working","text":"<p>Problem: Filter toggle button doesn't enable/disable filters.</p> <p>Solutions: 1. Control Reference <pre><code>! Verify toggle control is set:\nTIF2.InteractiveFilterToggleControl = ?TFilterToggle\n</code></pre></p> <ol> <li> <p>Property Binding <pre><code>! Ensure property is bound:\n?TFilterToggle{PROP:Use} = TIF2.isInteractiveFilterOn\n</code></pre></p> </li> <li> <p>Event Handling <pre><code>! Check TakeAccepted has toggle handling:\nOF ?TFilterToggle\n  IF TIF2.isInteractiveFilterOn AND TIF2.GetFilter()\n     TIF2.ApplyFilter()\n  ELSE\n     TIF2.DisableFilter()\n  END\n</code></pre></p> </li> </ol>"},{"location":"products/taboga/tif/troubleshooting/#popup-menu-disabled","title":"\u274c Popup Menu Disabled","text":"<p>Problem: All popup menu items are grayed out/disabled.</p> <p>Solutions: 1. Field Detection <pre><code>! Check SetCurrentInfo is called:\nIF TIF2.SetCurrentInfo(xField,xQueueFieldNo)\n   ! Enable menu items\nELSE\n   ! Disable menu items\nEND\n</code></pre></p> <ol> <li> <p>Mouse Position <pre><code>! Verify mouse position detection:\nIF ?Browse:1{PROPLIST:MouseDownRow} &lt;&gt; 0 AND \n   ?Browse:1{PROPLIST:MouseDownZone}=LISTZONE:Field\n   ! Process field selection\nEND\n</code></pre></p> </li> <li> <p>TakeNewSelection <pre><code>! Ensure TakeNewSelection is called:\nBRW1.TakeNewSelection PROCEDURE\n  ! Filter-specific code here\n  PARENT.TakeNewSelection\n</code></pre></p> </li> </ol>"},{"location":"products/taboga/tif/troubleshooting/#persistence-issues","title":"\ud83d\udcbe Persistence Issues","text":""},{"location":"products/taboga/tif/troubleshooting/#saveload-not-working","title":"\u274c Save/Load Not Working","text":"<p>Problem: Filter save/load functionality not available.</p> <p>Solutions: 1. Enable Persistence <pre><code>! In template configuration:\n\u2611 Allow saving and loading filters\nSave procedure: TInteractiveFilter_SaveFilter\nLoad procedure: TInteractiveFilter_LoadFilter\n</code></pre></p> <ol> <li> <p>Procedure Implementation <pre><code>! Verify procedures exist:\nTInteractiveFilter_SaveFilter PROCEDURE(* TInteractiveFilterClass pIFObj,&lt;STRING pFilterName&gt;)\nTInteractiveFilter_LoadFilter PROCEDURE(* TInteractiveFilterClass pIFObj)\n</code></pre></p> </li> <li> <p>File Access <pre><code>! Check file definitions exist:\n_TFilters            FILE,DRIVER('TOPSPEED')\n_TFilterRows         FILE,DRIVER('TOPSPEED')\n</code></pre></p> </li> </ol>"},{"location":"products/taboga/tif/troubleshooting/#saved-filters-not-loading","title":"\u274c Saved Filters Not Loading","text":"<p>Problem: Saved filters appear in list but don't load correctly.</p> <p>Solutions: 1. Data File Structure <pre><code>! Verify correct field structure:\n_TFRow:SavedFilterID    LONG\n_TFRow:FieldName        CSTRING(100)\n_TFRow:Operator         LONG\n_TFRow:ConditionLow     CSTRING(401)\n! ...etc\n</code></pre></p> <ol> <li> <p>Collection Name Match <pre><code>! Ensure collection names match:\nSELF.CollectionName = 'CustomerBrowse'  ! Must be consistent\n</code></pre></p> </li> <li> <p>Filter Loading Logic <pre><code>! Check filter reconstruction:\npIFObj.FilterRows.Filter = _TFRow:Filter\npIFObj.FilterRows.FieldName = _TFRow:FieldName\nADD(pIFObj.FilterRows)\npIFObj.ApplyFilter  ! Don't forget to apply\n</code></pre></p> </li> </ol>"},{"location":"products/taboga/tif/troubleshooting/#ui-problems","title":"\ud83c\udfa8 UI Problems","text":""},{"location":"products/taboga/tif/troubleshooting/#context-menu-text-wrong","title":"\u274c Context Menu Text Wrong","text":"<p>Problem: Menu items show wrong text or placeholders.</p> <p>Solutions: 1. Macro Replacement <pre><code>! Check macro replacement:\nSELF.Popup.SetText('TFilterSelection',\n  TIF2.ReplaceMacro(TIF2.EqualsMacro,TIF2.EqualsBlank))\n</code></pre></p> <ol> <li> <p>Current Data Detection <pre><code>! Verify current field/data is set:\nIF TIF2.SetCurrentInfo(xField,xQueueFieldNo)\n   ! Macros will work correctly\nEND\n</code></pre></p> </li> <li> <p>Translation Files <pre><code>! Check translation file is loaded:\nTInteractiveFilter_EN.TRN  ! For English\n</code></pre></p> </li> </ol>"},{"location":"products/taboga/tif/troubleshooting/#filter-display-control","title":"\u274c Filter Display Control","text":"<p>Problem: Filter display control doesn't show current filter.</p> <p>Solutions: 1. Control Assignment <pre><code>! Set the result control:\nTIF2.InteractiveFilterResultFEQ = ?FilterDisplay\n</code></pre></p> <ol> <li> <p>Control Type <pre><code>! Use appropriate control type:\nSTRING(@s1000),USE(?FilterDisplay)  ! For filter text\n</code></pre></p> </li> <li> <p>Display Update <pre><code>! Verify display is updated after filter:\nTIF2.ApplyFilter()  ! Should update display automatically\n</code></pre></p> </li> </ol>"},{"location":"products/taboga/tif/troubleshooting/#performance-issues","title":"\ud83d\udd0d Performance Issues","text":""},{"location":"products/taboga/tif/troubleshooting/#slow-filtering","title":"\u274c Slow Filtering","text":"<p>Problem: Filter application takes too long.</p> <p>Solutions: 1. Field Indexing <pre><code>! Ensure filtered fields are indexed:\nCUS:StateKey         KEY(CUS:State),DUP,NOCASE,OPT\n</code></pre></p> <ol> <li> <p>Case Sensitivity <pre><code>! For SQL drivers, use case sensitive:\nTIF2.CaseSensitivity = 1  ! Better SQL generation\n</code></pre></p> </li> <li> <p>Filter Complexity <pre><code>! Avoid too many nested groups:\n! Simple: (Field1='A' AND Field2='B')\n! Complex: ((Field1='A' OR Field1='B') AND (Field2='C' OR Field2='D'))\n</code></pre></p> </li> </ol>"},{"location":"products/taboga/tif/troubleshooting/#memory-issues","title":"\u274c Memory Issues","text":"<p>Problem: Application runs out of memory with many filters.</p> <p>Solutions: 1. Clear Old Filters <pre><code>! Clear filters when not needed:\nTIF2.ClearFilter()\n</code></pre></p> <ol> <li> <p>Queue Management <pre><code>! Monitor queue growth:\nFREE(TIF2.FilterRows)  ! If needed\n</code></pre></p> </li> <li> <p>Browse Queue Size <pre><code>! Limit browse queue if very large datasets:\nBRW1.SetLimit(1000)  ! If available\n</code></pre></p> </li> </ol>"},{"location":"products/taboga/tif/troubleshooting/#debug-tips","title":"\ud83d\udee0\ufe0f Debug Tips","text":""},{"location":"products/taboga/tif/troubleshooting/#enable-debug-information","title":"\ud83d\udd0d Enable Debug Information","text":"<ol> <li> <p>Add Debug Variables <pre><code>DebugMode            BYTE(1)\nDebugFilter          STRING(2000)\n\n! In filter methods:\nIF DebugMode\n   DebugFilter = TIF2.GetFilter()\n   MESSAGE('Current Filter: ' &amp; DebugFilter)\nEND\n</code></pre></p> </li> <li> <p>Check Filter Queue <pre><code>! Examine filter components:\nLOOP i = 1 TO RECORDS(TIF2.FilterRows)\n   GET(TIF2.FilterRows,i)\n   MESSAGE('Filter ' &amp; i &amp; ': ' &amp; TIF2.FilterRows.Filter)\nEND\n</code></pre></p> </li> <li> <p>Verify Events <pre><code>! Log events:\nCASE EVENT()\nOF 4064\n   MESSAGE('Filter by selection triggered')\nOF 4065\n   MESSAGE('Filter excluding selection triggered')\nEND\n</code></pre></p> </li> </ol>"},{"location":"products/taboga/tif/troubleshooting/#common-event-numbers","title":"\ud83d\udcca Common Event Numbers","text":"<pre><code>! Template default events:\n4064 (0FE0h) - Filter by selection\n4065 (0FE1h) - Filter excluding selection\n4066 (0FE2h) - Filter for dialog\n4067 (0FE3h) - Remove filter\n4068 (0FE4h) - Contains/Less than equal\n4069 (0FE5h) - Not contains/Greater than equal\n4070 (0FE6h) - Load saved filter\n4071 (0FE7h) - Save current filter\n</code></pre>"},{"location":"products/taboga/tif/troubleshooting/#getting-help","title":"\ud83d\udcde Getting Help","text":""},{"location":"products/taboga/tif/troubleshooting/#before-contacting-support","title":"\ud83d\udd27 Before Contacting Support","text":"<ol> <li>Check Version Compatibility</li> <li>Clarion version vs library version</li> <li> <p>ABC vs Legacy Clarion template family</p> </li> <li> <p>Verify Complete Setup</p> </li> <li>Extension enabled</li> <li>All files in correct locations</li> <li> <p>Template properly configured</p> </li> <li> <p>Test with Demo Application</p> </li> <li>Use included demo to verify installation</li> <li>Compare your implementation to working demo</li> </ol>"},{"location":"products/taboga/tif/troubleshooting/#support-information","title":"\ud83d\udce7 Support Information","text":"<ul> <li>Fomin Tools: http://fomintools.com</li> <li>Original Author: Edgard L. Riba (Taboga Software)</li> <li>Version: 2016.11.16</li> </ul>"},{"location":"products/taboga/tif/troubleshooting/#information-to-include","title":"\ud83d\udccb Information to Include","text":"<p>When reporting issues, include: - Clarion version - Template family (ABC/Legacy) - Complete error messages - Minimal reproduction case - Template configuration settings</p> <p>Most issues can be resolved by carefully following the setup instructions and verifying the configuration matches the working examples.</p>"},{"location":"products/taboga/tif/tutorial/","title":"Tutorial","text":"<p>This comprehensive tutorial walks through implementing the Taboga Interactive Filter in real Clarion applications, based on the actual demo application included with the library.</p>"},{"location":"products/taboga/tif/tutorial/#project-overview","title":"\ud83c\udfaf Project Overview","text":"<p>We'll build a complete customer management system with advanced filtering capabilities, demonstrating:</p> <ul> <li>Customer Browse with basic filtering</li> <li>Product Browse with list-box interface  </li> <li>Inventory History with date/numeric filtering</li> <li>Filter Persistence with save/load functionality</li> </ul>"},{"location":"products/taboga/tif/tutorial/#1-application-foundation","title":"1. \ud83c\udfd7\ufe0f Application Foundation","text":""},{"location":"products/taboga/tif/tutorial/#data-structure","title":"\ud83d\udcca Data Structure","text":"<pre><code>! Customer file structure\nCustomers            FILE,DRIVER('TOPSPEED')\nKeyCustNumber          KEY(CUS:CustNumber),PRIMARY\nKeyFullName            KEY(CUS:LastName,CUS:FirstName,CUS:MI),DUP\nKeyCompany             KEY(CUS:Company),DUP\nKeyZipCode             KEY(CUS:ZipCode),DUP\nStateKey               KEY(CUS:State),DUP\nRecord                 RECORD,PRE(CUS)\nCustNumber               LONG\nCompany                  STRING(20)\nFirstName                STRING(20)\nMI                       STRING(1) \nLastName                 STRING(25)\nAddress1                 STRING(35)\nCity                     STRING(25)\nState                    STRING(2)\nZipCode                  STRING(10)\n                       END\n                     END\n</code></pre>"},{"location":"products/taboga/tif/tutorial/#application-setup","title":"\ud83d\udd27 Application Setup","text":"<ol> <li> <p>Add Extension to application <pre><code>! In Application Properties \u2192 Extensions\n[TABOGA] Enables \"InteractiveFilter\" functionality on the application/DLL\n</code></pre></p> </li> <li> <p>Configure Multi-DLL (if applicable) <pre><code>! Project Conditional Compilation Symbols\n_TIntFilterLinkMode_=&gt;1;_TIntFilterDllMode_=&gt;0\n</code></pre></p> </li> </ol>"},{"location":"products/taboga/tif/tutorial/#2-customer-browse-implementation","title":"2. \ud83d\udccb Customer Browse Implementation","text":""},{"location":"products/taboga/tif/tutorial/#window-design","title":"\ud83c\udfa8 Window Design","text":"<pre><code>Customers PROCEDURE \n\n! Generated browse view\nBRW1::View:Browse    VIEW(Customers)\n                       PROJECT(CUS:Company)\n                       PROJECT(CUS:FirstName)\n                       PROJECT(CUS:MI)\n                       PROJECT(CUS:LastName)\n                       PROJECT(CUS:Address1)\n                       PROJECT(CUS:City)\n                       PROJECT(CUS:State)\n                       PROJECT(CUS:ZipCode)\n                     END\n\n! Browse queue\nQueue:Browse:1       QUEUE\nCUS:Company            LIKE(CUS:Company)\nCUS:FirstName          LIKE(CUS:FirstName)\nCUS:MI                 LIKE(CUS:MI)\nCUS:LastName           LIKE(CUS:LastName)\nCUS:Address1           LIKE(CUS:Address1)\nCUS:City               LIKE(CUS:City)\nCUS:State              LIKE(CUS:State)\nCUS:ZipCode            LIKE(CUS:ZipCode)\nCUS:CustNumber         LIKE(CUS:CustNumber)\nMark                   BYTE\nViewPosition           STRING(1024)\n                     END\n\n! Interactive Filter class\nTIF2                 CLASS(TInteractiveFilterClass)\nBrowseResetSort        PROCEDURE(BYTE Force),DERIVED\nBrowseSetFilter        PROCEDURE(STRING Filter,STRING Id),DERIVED\nInitComponents         PROCEDURE(),BYTE,PROC,DERIVED\n                     END\n</code></pre>"},{"location":"products/taboga/tif/tutorial/#window-definition","title":"\ud83c\udf9b\ufe0f Window Definition","text":"<pre><code>QuickWindow          WINDOW('Browse the Customers File'),AT(,,447,197),RESIZE,CENTER\n  ! Main browse control\n  LIST,AT(8,30,434,124),USE(?Browse:1),FORMAT('80L(2)|M~Company~@s20@80L(2)|M~First Name~@s20@...'),FROM(Queue:Browse:1)\n\n  ! Interactive Filter controls (added by template)\n  BUTTON,AT(5,158,14,14),USE(?TFilterFor),LEFT,ICON('tint_FilterFor.ico'),FLAT\n  CHECK,AT(19,158,14,14),USE(?TFilterToggle),LEFT,ICON('tint_FilterToggle.ico'),FLAT\n\n  ! Sort tabs for different views\n  SHEET,AT(4,4,443,172),USE(?CurrentTab)\n    TAB('Last Name/First Name'),USE(?Tab:2)\n    TAB('Company'),USE(?Tab:3)  \n    TAB('Zip Code'),USE(?Tab:4)\n    TAB('State'),USE(?Tab:5)\n  END\n\n  ! Standard browse buttons\n  BUTTON('&amp;Insert'),AT(283,158,49,14),USE(?Insert:3)\n  BUTTON('&amp;Change'),AT(336,158,49,14),USE(?Change:3) \n  BUTTON('&amp;Delete'),AT(389,158,49,14),USE(?Delete:3)\n  BUTTON('Close'),AT(399,180,49,14),USE(?Close)\nEND\n</code></pre>"},{"location":"products/taboga/tif/tutorial/#initialization-code","title":"\u26a1 Initialization Code","text":"<pre><code>ThisWindow.Init PROCEDURE\nReturnValue          BYTE,AUTO\n  CODE\n  // ...standard ABC initialization...\n\n  ! Initialize Interactive Filter\n  TIF2.InitComponents\n  ?TFilterToggle{PROP:Use} = TIF2.isInteractiveFilterOn\n  TIF2.InteractiveFilterToggleControl = ?TFilterToggle\n  DISABLE(?TFilterToggle)\n\n  ! Setup filtering\n  TIF2.UpdateQuery(0)                                      ! Auto-populate fields\n  TIF2.InitPopup                                           ! Build popup menus\n  TIF2.CaseSensitivity = 0                                 ! Case insensitive\n\n  // ...rest of initialization...\n  RETURN ReturnValue\n</code></pre>"},{"location":"products/taboga/tif/tutorial/#initcomponents-implementation","title":"\ud83d\udd27 InitComponents Implementation","text":"<pre><code>TIF2.InitComponents PROCEDURE\nReturnValue          BYTE,AUTO\n  CODE\n  ReturnValue = PARENT.InitComponents()\n\n  ! Core configuration\n  SELF.myWindow           &amp;= QuickWindow\n  SELF.CollectionName = 'Customers'                        ! Filter collection name\n  SELF.AllowFreeFormQuery = FALSE\n  SELF.BrowseControl    = ?Browse:1\n  SELF.BrowseView      &amp;= BRW1::View:Browse\n  SELF.BrowseQueueRef  &amp;= Queue:Browse:1\n\n  ! Filter persistence\n  SELF.AllowQueryPersistance = TRUE\n  SELF.LoadFilterEvent   = 4070                            ! Load filter event\n  SELF.SaveFilterEvent   = 4071                            ! Save filter event\n\n  ! UI configuration\n  SELF.OperatorInterface = 0                               ! 0=buttons, 1=list-box\n\n  RETURN ReturnValue\n</code></pre>"},{"location":"products/taboga/tif/tutorial/#3-event-handling","title":"3. \ud83c\udfaf Event Handling","text":""},{"location":"products/taboga/tif/tutorial/#filter-button-events","title":"\ud83d\udccb Filter Button Events","text":"<pre><code>ThisWindow.TakeAccepted PROCEDURE\nReturnValue          BYTE,AUTO\n  CODE\n  // ...existing code...\n\n  CASE ACCEPTED()\n  OF ?TFilterFor\n    ThisWindow.Update()\n    x# = TIF2.FilterFor()                                  ! Show filter dialog\n    TIF2.FromButton = FALSE                                ! Reset button flag\n\n  OF ?TFilterToggle\n    IF TIF2.isInteractiveFilterOn AND TIF2.GetFilter()\n       TIF2.ApplyFilter()                                  ! Re-apply filter\n    ELSE\n       TIF2.DisableFilter()                                ! Disable filter\n    END\n    SELECT(TIF2.BrowseControl)\n  END\n\n  RETURN PARENT.TakeAccepted()\n</code></pre>"},{"location":"products/taboga/tif/tutorial/#browse-field-events","title":"\ud83d\udd0d Browse Field Events","text":"<pre><code>ThisWindow.TakeFieldEvent PROCEDURE\nReturnValue          BYTE,AUTO\n  CODE\n  // ...existing code...\n\n  CASE FIELD()\n  OF ?Browse:1\n    CASE EVENT()\n    ELSE\n       ! Filter by selection (equals)\n       IF EVENT() = 4064\n          TIF2.FilterOnOperator(e_tint_equals)\n       END\n\n       ! Filter excluding selection (not equals)\n       IF EVENT() = 4065\n          TIF2.FilterOnOperator(e_tint_NotEquals)\n       END\n\n       ! Remove filter\n       IF EVENT() = 4067\n          TIF2.FilterRemove\n       END\n\n       ! Context-sensitive filtering\n       CASE EVENT()\n       OF 4068  ! Contains/Less than or equal\n          CASE(TIF2.CurrentType)\n          OF 1     ! String (Contains/Does not contain)....\n             TIF2.FilterOnOperator(e_tint_Contains)\n          OF 2     ! Numeric (Less than or equal/More than or equal)...'\n             TIF2.FilterOnOperator(e_tint_LessOrEqualThan)\n          OF 3     ! Date (On or before/On or after)....'\n             TIF2.FilterOnOperator(e_tint_LessOrEqualThan)\n          OF 4     ! Time (On or before/On or after)....'\n             TIF2.FilterOnOperator(e_tint_LessOrEqualThan)\n          END\n\n       OF 4069  ! Not contains/Greater than or equal\n          CASE(TIF2.CurrentType)\n          OF 1     ! String (Contains/Does not contain)....\n             TIF2.FilterOnOperator(e_tint_NotContains)\n          OF 2     ! Numeric (Less than or equal/More than or equal)...'\n             TIF2.FilterOnOperator(e_tint_LargerOrEqualThan)\n          OF 3     ! Date (On or before/On or after)....'\n             TIF2.FilterOnOperator(e_tint_LargerOrEqualThan)\n          OF 4     ! Time (On or before/On or after)....'\n             TIF2.FilterOnOperator(e_tint_LargerOrEqualThan)\n          END\n       END\n\n       ! Save/Load filter events\n       IF EVENT() = TIF2.LoadFilterEvent\n          TInteractiveFilter_LoadFilter(TIF2)\n          POST(EVENT:NewSelection,?Browse:1)\n       END\n       IF EVENT() = TIF2.SaveFilterEvent\n          TInteractiveFilter_SaveFilter(TIF2)\n          SELECT(?Browse:1)\n       END\n    END\n  END\n\n  RETURN PARENT.TakeFieldEvent()\n</code></pre>"},{"location":"products/taboga/tif/tutorial/#4-browse-integration","title":"4. \ud83c\udfa8 Browse Integration","text":""},{"location":"products/taboga/tif/tutorial/#context-menu-setup","title":"\ud83d\udcca Context Menu Setup","text":"<pre><code>BRW1.SetAlerts PROCEDURE\n  CODE\n  ! Add filter items to browse popup\n  SELF.Popup.AddItem(TIF2.FilterBySelectionText,'TFilterSelection')\n  SELF.Popup.AddItemEvent('TFilterSelection',4064,?Browse:1)\n  SELF.Popup.SetIcon('TFilterSelection','tint_FilterBySelection.ico')\n\n  SELF.Popup.AddItem(TIF2.FilterExcludingSelectionText,'TFilterNotSelection')\n  SELF.Popup.AddItemEvent('TFilterNotSelection',4065,?Browse:1)\n  SELF.Popup.SetIcon('TFilterNotSelection','tint_FilterExcludingSelection.ico')\n\n  ! Dynamic context-sensitive items\n  SELF.Popup.AddItem('','TFilterExtra1')\n  SELF.Popup.AddItemEvent('TFilterExtra1',4068,?Browse:1)\n  SELF.Popup.SetIcon('TFilterExtra1','tint_Empty.ico')\n\n  SELF.Popup.AddItem('','TFilterExtra2')\n  SELF.Popup.AddItemEvent('TFilterExtra2',4069,?Browse:1)\n  SELF.Popup.SetIcon('TFilterExtra2','tint_Empty.ico')\n\n  SELF.Popup.AddItem('-','TFilterExtraSeparator')\n  TIF2.ExtraPopupItemsAdded = TRUE\n\n  ! Filter management items\n  SELF.Popup.AddItemMimic('TFilterFor',?TFilterFor,TIF2.FilterForText)\n  SELF.Popup.AddItem(TIF2.FilterRemoveText,'TFilterRemove')\n  SELF.Popup.AddItemEvent('TFilterRemove',4067,?Browse:1)\n  SELF.Popup.SetIcon('TFilterRemove','tint_FilterRemove.ico')\n  SELF.Popup.AddItem('-','TFilterSeparator')\n\n  PARENT.SetAlerts\n</code></pre>"},{"location":"products/taboga/tif/tutorial/#dynamic-menu-updates","title":"\ud83d\udd04 Dynamic Menu Updates","text":"<pre><code>BRW1.TakeNewSelection PROCEDURE\nxQueueFieldNo   SHORT\nxField          CSTRING(101)\nxTDisable       BYTE(1)\n  CODE\n  IF ?Browse:1{PROPLIST:MouseDownRow} &lt;&gt; 0 AND ?Browse:1{PROPLIST:MouseDownZone}=LISTZONE:Field\n    SELF.UpdateBuffer\n    xQueueFieldNo = ?Browse:1{PROPLIST:FieldNo,?Browse:1{PROPLIST:MouseDownField}}\n    xField = UPPER(CLIP(WHO(Queue:Browse:1,xQueueFieldNo)))\n\n    IF TIF2.SetCurrentInfo(xField,xQueueFieldNo)\n       ! Update menu text with current field/data\n       SELF.Popup.SetText('TFilterSelection',TIF2.ReplaceMacro(TIF2.EqualsMacro,TIF2.EqualsBlank))\n       SELF.Popup.SetText('TFilterNotSelection',TIF2.ReplaceMacro(TIF2.NotEqualsMacro,TIF2.NotEqualsBlank))\n\n       ! Handle blank data\n       IF TIF2.isCurrentDataBlank\n          SELF.Popup.DeleteItem('TFilterExtra1')\n          SELF.Popup.DeleteItem('TFilterExtra2')\n          TIF2.ExtraPopupItemsAdded = FALSE\n       ELSE\n          ! Re-add context items if needed\n          IF TIF2.ExtraPopupItemsAdded = FALSE\n             SELF.Popup.AddItem('','TFilterExtra1','TFilterNotSelection',0)\n             SELF.Popup.AddItemEvent('TFilterExtra1',4068,?Browse:1)\n             SELF.Popup.SetIcon('TFilterExtra1','tint_Empty.ico')\n             SELF.Popup.AddItem('','TFilterExtra2','TFilterExtra1',0)\n             SELF.Popup.AddItemEvent('TFilterExtra2',4069,?Browse:1)\n             SELF.Popup.SetIcon('TFilterExtra2','tint_Empty.ico')\n             TIF2.ExtraPopupItemsAdded = TRUE\n          END\n\n          ! Set context-sensitive text based on data type\n          SELF.Popup.SetText('TFilterExtra1',CHOOSE(TIF2.CurrentType,|\n            TIF2.ReplaceMacro(TIF2.ContainsMacro),|          ! String\n            TIF2.ReplaceMacro(TIF2.LessOrEqualMacro),|       ! Numeric\n            TIF2.ReplaceMacro(TIF2.OnOrBeforeMacro)))        ! Date\n\n          SELF.Popup.SetText('TFilterExtra2',CHOOSE(TIF2.CurrentType,|\n            TIF2.ReplaceMacro(TIF2.NotContainsMacro),|       ! String\n            TIF2.ReplaceMacro(TIF2.MoreOrEqualMacro),|       ! Numeric\n            TIF2.ReplaceMacro(TIF2.OnOrAfterMacro)))         ! Date\n       END\n\n       ! Enable/disable menu items\n       SELF.Popup.SetItemEnable('TFilterSelection',TRUE)\n       SELF.Popup.SetItemEnable('TFilterNotSelection',TRUE)\n       SELF.Popup.SetItemEnable('TFilterFor',TRUE)\n\n       IF TIF2.isInteractiveFilterOn = TRUE\n          SELF.Popup.SetItemEnable('TFilterRemove',TRUE)\n       ELSE\n          SELF.Popup.SetItemEnable('TFilterRemove',FALSE)\n       END\n\n       SELF.Popup.SetItemEnable('TFilterExtra1',TRUE)\n       SELF.Popup.SetItemEnable('TFilterExtra2',TRUE)\n       xTDisable = FALSE\n    ELSE\n       xTDisable = TRUE\n    END\n  END\n\n  ! Disable all filter options if no valid field\n  IF xTDisable\n    SELF.Popup.SetText('TFilterSelection',TIF2.FilterBySelectionText)\n    SELF.Popup.SetText('TFilterNotSelection',TIF2.FilterExcludingSelectionText)\n    SELF.Popup.SetText('TFilterFor',TIF2.FilterForText)\n    SELF.Popup.SetText('TFilterRemove',TIF2.FilterRemoveText)\n    SELF.Popup.SetText('TFilterExtra1',TIF2.FilterByContainsText)\n    SELF.Popup.SetText('TFilterExtra2',TIF2.FilterByNotContainsText)\n\n    SELF.Popup.SetItemEnable('TFilterSelection',FALSE)\n    SELF.Popup.SetItemEnable('TFilterNotSelection',FALSE)\n    SELF.Popup.SetItemEnable('TFilterFor',FALSE)\n    SELF.Popup.SetItemEnable('TFilterRemove',FALSE)\n    SELF.Popup.SetItemEnable('TFilterExtra1',FALSE)\n    SELF.Popup.SetItemEnable('TFilterExtra2',FALSE)\n  END\n\n  PARENT.TakeNewSelection\n</code></pre>"},{"location":"products/taboga/tif/tutorial/#5-advanced-configuration","title":"5. \ud83d\udcca Advanced Configuration","text":""},{"location":"products/taboga/tif/tutorial/#products-browse-with-list-interface","title":"\ud83c\udfa8 Products Browse with List Interface","text":"<p>For the Products browse, we'll use the list-box operator interface:</p> <pre><code>TIF11.InitComponents PROCEDURE\nReturnValue          BYTE,AUTO\n  CODE\n  ReturnValue = PARENT.InitComponents()\n\n  SELF.myWindow           &amp;= QuickWindow\n  SELF.CollectionName = 'Products'\n  SELF.OperatorInterface = 1                               ! Use list-box interface\n  SELF.InteractiveFilterResultFEQ = ?TFilter              ! Display current filter\n  SELF.AllowFreeFormQuery = FALSE\n\n  RETURN ReturnValue\n</code></pre>"},{"location":"products/taboga/tif/tutorial/#datetime-filtering","title":"\ud83d\udcc5 Date/Time Filtering","text":"<p>For the Inventory History browse with date/numeric data:</p> <pre><code>TIF7.InitComponents PROCEDURE\n  CODE\n  // ...existing code...\n\n  SELF.CollectionName = 'InvHist'\n  SELF.AllowFreeFormQuery = FALSE                          ! Disable free-form\n  SELF.OperatorInterface = 0                               ! Use button interface\n\n  RETURN ReturnValue\n</code></pre>"},{"location":"products/taboga/tif/tutorial/#6-filter-persistence","title":"6. \ud83d\udcbe Filter Persistence","text":""},{"location":"products/taboga/tif/tutorial/#save-filter-implementation","title":"\ud83d\udd04 Save Filter Implementation","text":"<pre><code>TInteractiveFilter_SaveFilter PROCEDURE(* TInteractiveFilterClass pIFObj,&lt;STRING pFilterName&gt;)\nxSavedFilterName LIKE(_TF:SavedFilterName)\ni               LONG\nj               LONG\nFilesOpened     BYTE(0)\n\nWindow WINDOW('Save Filter'),AT(,,269,38),GRAY,MDI\n  PROMPT('Filter Name:'),AT(3,6),USE(?Prompt1)\n  ENTRY(@s100),AT(49,6,212,11),USE(xSavedFilterName)\n  BUTTON('&amp;OK'),AT(181,21,35,14),USE(?OkButton),DEFAULT\n  BUTTON('&amp;Cancel'),AT(226,21,36,14),USE(?CancelButton)\nEND\n\n  CODE\n  ! Get filter name from user if not provided\n  IF NOT OMITTED(2)\n     xSavedFilterName = CLIP(pFilterName)\n  ELSE\n     xSavedFilterName = ''\n  END\n\n  ! Show dialog to get filter name if needed\n  IF NOT xSavedFilterName\n     OPEN(Window)\n     ACCEPT\n        CASE FIELD()\n        OF ?OkButton\n           POST(EVENT:CloseWindow)\n        OF ?CancelButton\n           xSavedFilterName = ''\n           POST(EVENT:CloseWindow)\n        END\n     END\n     CLOSE(Window)\n     IF NOT xSavedFilterName\n        RETURN TRUE                                        ! User cancelled\n     END\n  END\n\n  ! Save to database\n  DO OpenFiles\n  CLEAR(_TFilters)\n  _TF:FilterCollectionName = pIFObj.CollectionName\n  _TF:SavedFilterName = xSavedFilterName\n  GET(_TFilters,_TF:byFilterCollectionName)\n  IF ERRORCODE()\n     Access:_TFilters.PrimeRecord(TRUE)\n     Access:_TFilters.Insert\n  ELSE\n     DO DeleteFilterRows                                   ! Clear existing rows\n  END\n\n  ! Save individual filter components\n  j = RECORDS(pIFObj.FilterRows)\n  LOOP i = 1 TO j\n     GET(pIFObj.FilterRows,i)\n     _TFRow:SavedFilterID = _TF:SavedFilterID\n     _TFRow:ID = i\n     _TFRow:Filter = pIFObj.FilterRows.Filter\n     _TFRow:IsManual = pIFObj.FilterRows.IsManual\n     _TFRow:FieldName = pIFObj.FilterRows.FieldName\n     _TFRow:Picture = pIFObj.FilterRows.Picture\n     _TFRow:CaseSensitivity = pIFObj.FilterRows.CaseSensitivity\n     _TFRow:Operator = pIFObj.FilterRows.Operator\n     _TFRow:ConditionLow = pIFObj.FilterRows.ConditionLow\n     _TFRow:ConditionHigh = pIFObj.FilterRows.ConditionHigh\n     _TFRow:JoinOp = pIFObj.FilterRows.JoinOp\n     _TFRow:NewGroup = pIFObj.FilterRows.NewGroup\n     _TFRow:NewGroupJoinOp = pIFObj.FilterRows.NewGroupJoinOp\n     ADD(_TFilterRows)\n  END\n\n  DO CloseFiles\n  RETURN FALSE\n\nOpenFiles  ROUTINE\n  Access:_TFilters.Open\n  Access:_TFilters.UseFile\n  Access:_TFilterRows.Open\n  Access:_TFilterRows.UseFile\n  FilesOpened = True\n\nCloseFiles ROUTINE\n  IF FilesOpened\n     Access:_TFilters.Close\n     Access:_TFilterRows.Close\n     FilesOpened = False\n  END\n\nDeleteFilterRows ROUTINE\n  ! Delete existing filter rows for this saved filter\n  // ...implementation...\n</code></pre>"},{"location":"products/taboga/tif/tutorial/#load-filter-implementation","title":"\ud83d\udcc2 Load Filter Implementation","text":"<pre><code>TInteractiveFilter_LoadFilter PROCEDURE(* TInteractiveFilterClass pIFObj)\n! Browse and load saved filters\nv_TFilterRows    VIEW(_TFilterRows),ORDER('_TFRow:SavedFilterID,_TFRow:ID'),FILTER('_TFRow:SavedFilterID=_TF:SavedFilterID')\ni               LONG\nxAppendFilterAction STRING(5)\n\n  CODE\n  ! Show browser for saved filters in this collection\n  _TF:FilterCollectionName = pIFObj.CollectionName\n\n  ! User selects filter and action (Replace/AND/OR)\n  ! xAppendFilterAction contains: '', 'AND', or 'OR'\n\n  ! Load and apply selected filter\n  i = 0\n  OPEN(v_TFilterRows)\n  SET(v_TFilterRows)\n  LOOP\n     NEXT(v_TFilterRows)\n     IF ERRORCODE() THEN BREAK.\n     i += 1\n\n     ! Copy filter row data\n     pIFObj.FilterRows.Filter = _TFRow:Filter\n     pIFObj.FilterRows.IsManual = _TFRow:IsManual\n     pIFObj.FilterRows.FieldName = _TFRow:FieldName\n     pIFObj.FilterRows.Picture = _TFRow:Picture\n     pIFObj.FilterRows.CaseSensitivity = _TFRow:CaseSensitivity\n     pIFObj.FilterRows.Operator = _TFRow:Operator\n     pIFObj.FilterRows.ConditionLow = _TFRow:ConditionLow\n     pIFObj.FilterRows.ConditionHigh = _TFRow:ConditionHigh\n     pIFObj.FilterRows.JoinOp = _TFRow:JoinOp\n     pIFObj.FilterRows.NewGroup = _TFRow:NewGroup\n     pIFObj.FilterRows.NewGroupJoinOp = _TFRow:NewGroupJoinOp\n\n     ! Handle filter combination for first row\n     IF i = 1\n        IF xAppendFilterAction = 'AND'\n           pIFObj.FilterRows.NewGroupJoinOp = 'AND'\n           pIFObj.FilterRows.NewGroup = TRUE\n        ELSIF xAppendFilterAction = 'OR'\n           pIFObj.FilterRows.NewGroupJoinOp = 'OR'\n           pIFObj.FilterRows.NewGroup = TRUE\n        END\n     END\n\n     ADD(pIFObj.FilterRows)\n  END\n  CLOSE(v_TFilterRows)\n\n  ! Apply the loaded filter\n  pIFObj.ApplyFilter\n</code></pre>"},{"location":"products/taboga/tif/tutorial/#7-best-practices","title":"7. \ud83c\udfaf Best Practices","text":""},{"location":"products/taboga/tif/tutorial/#performance-optimization","title":"\u2705 Performance Optimization","text":"<ol> <li> <p>Index Usage <pre><code>! Ensure filtered fields are properly indexed\nCUS:StateKey         KEY(CUS:State),DUP,NOCASE,OPT\n</code></pre></p> </li> <li> <p>Case Sensitivity <pre><code>! For SQL drivers, use case sensitive (generates better queries)\nSELF.CaseSensitivity = 1  ! SQL\nSELF.CaseSensitivity = 0  ! ISAM\n</code></pre></p> </li> <li> <p>Field Selection <pre><code>! Only include fields users will actually filter on\nSELF.AddItemOverride('CUS:CustNumber','',TRUE)  ! Skip internal IDs\n</code></pre></p> </li> </ol>"},{"location":"products/taboga/tif/tutorial/#user-experience","title":"\ud83c\udfa8 User Experience","text":"<ol> <li> <p>Visual Feedback <pre><code>! Always show filter status\nSELF.InteractiveFilterResultFEQ = ?FilterDisplay\nSELF.DisplayFilterOnToggleTip = TRUE\n</code></pre></p> </li> <li> <p>Consistent Naming <pre><code>! Use descriptive collection names\nSELF.CollectionName = 'CustomerBrowse'  ! Not just 'Customers'\n</code></pre></p> </li> <li> <p>Icon Consistency <pre><code>! Include all required icons in your project\n#PROJECT('tint_FilterFor.ico')\n#PROJECT('tint_FilterToggle.ico')\n// ...etc\n</code></pre></p> </li> </ol>"},{"location":"products/taboga/tif/tutorial/#complete-working-example","title":"\ud83d\ude80 Complete Working Example","text":"<p>Here's the complete customer browse implementation:</p> <pre><code>Customers PROCEDURE \n\n! All declarations from above...\n\n  CODE\n  GlobalResponse = ThisWindow.Run()\n\nThisWindow.Init PROCEDURE\nReturnValue          BYTE,AUTO\n  CODE\n  // ...standard initialization...\n\n  ! Interactive Filter setup\n  TIF2.InitComponents\n  ?TFilterToggle{PROP:Use} = TIF2.isInteractiveFilterOn\n  TIF2.InteractiveFilterToggleControl = ?TFilterToggle\n  DISABLE(?TFilterToggle)\n\n  TIF2.UpdateQuery(0)\n  TIF2.InitPopup\n  TIF2.CaseSensitivity = 0\n\n  // ...rest of initialization...\n  RETURN ReturnValue\n\n! All event handling methods from above...\n</code></pre>"},{"location":"products/taboga/tif/tutorial/#next-steps","title":"\ud83d\udcd6 Next Steps","text":"<ul> <li>Template Guide - Advanced template configuration</li> <li>API Reference - Complete method reference</li> <li>Examples - More implementation examples</li> </ul> <p>You now have a complete understanding of implementing the Taboga Interactive Filter!</p>"},{"location":"products/taboga/tne/","title":"Overview","text":"<p>Taboga Native Excel is a powerful component for working with Excel files in native format. It is a pure Clarion class library. All source code included.</p>"},{"location":"products/taboga/tne/#documentation","title":"\ud83d\udcda Documentation","text":"<ul> <li>Installation - Installation and setup guide</li> <li>Reference - API reference and documentation</li> <li>Templates - Template examples and usage</li> <li>Formatting - Cell and worksheet formatting</li> <li>Workbook - Workbook management</li> <li>Troubleshooting - Common issues and solutions</li> <li>Tutorial - Complete tutorial for TNativeExcel</li> </ul>"},{"location":"products/taboga/tne/#support","title":"\ud83d\udcde Support","text":"<p>For support and additional information:</p> <ul> <li>Email: support@fomintools.com</li> <li>Fomin Tools: https://fomintools.com</li> <li>Original Author: Edgard L. Riba (Taboga Software)</li> </ul>"},{"location":"products/taboga/tne/formatting/","title":"Cell Formatting","text":""},{"location":"products/taboga/tne/formatting/#font-formatting","title":"\ud83d\udd24 Font Formatting","text":""},{"location":"products/taboga/tne/formatting/#setting-fonts","title":"\u270d\ufe0f Setting Fonts","text":"<pre><code>wBook.Style.FontName = 'Arial'          !Font family\nwBook.Style.FontSize = 10               !Font size in points\nwBook.Style.FontColor = COLOR:BLUE      !Standard Clarion colors\nwBook.Style.FontStyle = FONT:bold       !Font styles\n</code></pre>"},{"location":"products/taboga/tne/formatting/#text-alignment","title":"\u2194\ufe0f Text Alignment","text":"<pre><code>wBook.SetAlignment(xls::ALIGN_RIGHT)           !Horizontal alignment\nwBook.SetVerticalAlignment(xls::VERT_CENTER)   !Vertical alignment\n</code></pre>"},{"location":"products/taboga/tne/formatting/#number-formats","title":"\ud83d\udd22 Number Formats","text":"<p>TNE supports both Clarion and Excel format strings:</p> <pre><code>!Clarion style\nwBook.SetFormatPicture('@N10.2')    !Numbers with 2 decimals\nwBook.SetFormatPicture('@D2')       !Short date format\n\n!Excel style\nwBook.SetFormatPicture('#,##0.00')  !Numbers with thousand separator\nwBook.SetFormatPicture('mm/dd/yy')  !Date format\n</code></pre>"},{"location":"products/taboga/tne/formatting/#style-management","title":"\ud83c\udfa8 Style Management","text":"<p>All formatting remains active until explicitly reset:</p> <pre><code>wBook.ResetStyle()                  !Reset all formatting to defaults\n</code></pre>"},{"location":"products/taboga/tne/installation/","title":"Installation","text":""},{"location":"products/taboga/tne/installation/#file-locations","title":"\ud83d\udcc2 File Locations","text":""},{"location":"products/taboga/tne/installation/#clarion-6","title":"\ud83d\udce6 Clarion 6","text":"Description Files Location Library Sources TWorkbook.incTWorkbook.clwTXLS8Engine.incTXLS8Engine.clwTXLS8CELL.incTXLS8CELL.clwTXLS8F.incTXLS8F.clw \\Clarion\\LIBSRC Template TNativeExcel.tpl \\Clarion6\\3rdParty\\TEMPLATE Documentation TNativeExcel.rtf \\Clarion6\\3rdParty\\Docs\\Taboga\\TNativeExcel Example Files TNativeExcelDemo.app \\Clarion6\\3rdParty\\Examples\\Taboga\\TNativeExcel"},{"location":"products/taboga/tne/installation/#clarion-7-and-above","title":"\ud83d\udce6 Clarion 7 and above","text":"Description Files Location Library Sources TWorkbook.incTWorkbook.clwTXLS8Engine.incTXLS8Engine.clwTXLS8CELL.incTXLS8CELL.clwTXLS8F.incTXLS8F.clw \\Clarion\\accessory\\libsrc\\win Template TNativeExcel.tpl \\Clarion\\accessory\\template\\win Documentation TNativeExcel.rtf \\Clarion\\accessory\\Documents\\Taboga\\TNativeExcel Example Files TNativeExcelDemo.app \\Clarion\\accessory\\Examples\\Taboga\\TNativeExcel"},{"location":"products/taboga/tne/installation/#configuration-steps","title":"\ud83d\udd27 Configuration Steps","text":""},{"location":"products/taboga/tne/installation/#1-library-files","title":"1\ufe0f\u20e3 Library Files","text":"<ol> <li>Copy library source files to LIBSRC directory</li> <li>Add library includes to your project</li> </ol>"},{"location":"products/taboga/tne/installation/#2-template-setup","title":"2\ufe0f\u20e3 Template Setup","text":"<ol> <li>Copy TNativeExcel.tpl to template directory</li> <li>Register template in Clarion IDE</li> </ol>"},{"location":"products/taboga/tne/installation/#verification","title":"\u2705 Verification","text":"<p>To verify installation: 1. Open example project TNativeExcelDemo.app 2. Compile and run to confirm setup</p>"},{"location":"products/taboga/tne/installation/#system-requirements","title":"\ud83d\udd0d System Requirements","text":"<ul> <li>Clarion 6.0 or higher</li> <li>No Excel installation required</li> <li>No additional dependencies</li> </ul>"},{"location":"products/taboga/tne/reference/","title":"Class Reference","text":""},{"location":"products/taboga/tne/reference/#tworkbook-class","title":"\ud83d\udce6 TWorkbook Class","text":""},{"location":"products/taboga/tne/reference/#properties","title":"\u2699\ufe0f Properties","text":"Property Type Description Style TStyle Current formatting settings ActiveSheet LONG Current worksheet index RowHeight REAL Default row height ColWidth REAL Default column width"},{"location":"products/taboga/tne/reference/#methods","title":"\ud83d\udd27 Methods","text":""},{"location":"products/taboga/tne/reference/#initialization","title":"\ud83d\ude80 Initialization","text":"<pre><code>Init()                  !Initialize workbook\nKill()                  !Clean up resources\nSave(STRING filename)   !Save to disk\n</code></pre>"},{"location":"products/taboga/tne/reference/#data-entry","title":"\ud83d\udcdd Data Entry","text":"<pre><code>TakeLabel(STRING ref, STRING text)\nTakeNumber(STRING ref, REAL value)\nTakeInteger(STRING ref, LONG value)\nTakeDate(STRING ref, LONG date)\nTakeTime(STRING ref, LONG time)\n</code></pre>"},{"location":"products/taboga/tne/reference/#formatting","title":"\ud83c\udfa8 Formatting","text":"<pre><code>SetFont(STRING name, &lt;opt&gt; LONG size, &lt;opt&gt; LONG color)\nSetAlignment(LONG align)\nSetVerticalAlignment(LONG align)\nSetFormatPicture(STRING format)\nResetStyle()\n</code></pre>"},{"location":"products/taboga/tne/reference/#constants","title":"\ud83d\udd0d Constants","text":""},{"location":"products/taboga/tne/reference/#alignment","title":"\u2194\ufe0f Alignment","text":"<ul> <li>xls::ALIGN_LEFT</li> <li>xls::ALIGN_CENTER</li> <li>xls::ALIGN_RIGHT</li> <li>xls::ALIGN_JUSTIFY</li> </ul>"},{"location":"products/taboga/tne/reference/#vertical-alignment","title":"\u2195\ufe0f Vertical Alignment","text":"<ul> <li>xls::VERT_ALIGN_TOP</li> <li>xls::VERT_ALIGN_CENTER</li> <li>xls::VERT_ALIGN_BOTTOM</li> </ul>"},{"location":"products/taboga/tne/templates/","title":"Template Implementation","text":""},{"location":"products/taboga/tne/templates/#overview","title":"\ud83d\udccb Overview","text":"<p>TNativeExcel includes templates for both ABC and Legacy chains, making Excel file generation simple in any Clarion application.</p>"},{"location":"products/taboga/tne/templates/#global-extension","title":"\ud83c\udf10 Global Extension","text":"<p>Add TNativeExcel support to your application using the global extension:</p> <pre><code>[APPLICATION]\nTEnableNativeExcel=1\n</code></pre>"},{"location":"products/taboga/tne/templates/#window-control-templates","title":"\ud83e\ude9f Window Control Templates","text":""},{"location":"products/taboga/tne/templates/#excel-export-control","title":"\ud83d\udce4 Excel Export Control","text":"<p>Adds Excel export capability to any browse or report:</p> <ul> <li>Properties<ul> <li>Target File: Output filename or prompt</li> <li>Auto Format: Apply default formatting</li> <li>Column Mapping: Configure data columns</li> <li>Export Options: Headers, formatting, sheets</li> </ul> </li> </ul>"},{"location":"products/taboga/tne/templates/#excel-preview-control","title":"\ud83d\udc41\ufe0f Excel Preview Control","text":"<p>Preview Excel output before saving:</p> <ul> <li>Properties<ul> <li>Preview Mode: Screen/Print/Both</li> <li>Auto Size: Adjust columns</li> <li>Zoom Level: Initial zoom</li> </ul> </li> </ul>"},{"location":"products/taboga/tne/templates/#implementation-examples","title":"\ud83d\udca1 Implementation Examples","text":"<pre><code>! Basic browse export\nExcelExport CLASS\n  CODE\n  SELF.Init()\n  SELF.SetFile('output.xls')\n  SELF.ExportBrowse()\n</code></pre>"},{"location":"products/taboga/tne/templates/#best-practices","title":"\u2b50 Best Practices","text":"<ul> <li>Use consistent column formats</li> <li>Set appropriate column widths</li> <li>Apply header formatting</li> <li>Include totals where relevant</li> </ul>"},{"location":"products/taboga/tne/troubleshooting/","title":"Troubleshooting","text":""},{"location":"products/taboga/tne/troubleshooting/#common-issues","title":"\u2757 Common Issues","text":""},{"location":"products/taboga/tne/troubleshooting/#memory-management","title":"\ud83d\udcbe Memory Management","text":"<p>Issue: Memory leaks after workbook creation Solution: Ensure proper initialization and cleanup <pre><code>wBook.Init()\n// ...operations...\nwBook.Save('output.xls')\nwBook.Kill()           !Important cleanup step\n</code></pre></p>"},{"location":"products/taboga/tne/troubleshooting/#formatting-issues","title":"\ud83c\udfa8 Formatting Issues","text":"<p>Issue: Unexpected cell formatting Solution: Reset styles between operations <pre><code>wBook.ResetStyle()     !Clear previous formatting\n</code></pre></p>"},{"location":"products/taboga/tne/troubleshooting/#file-access","title":"\ud83d\udcc1 File Access","text":"<p>Issue: Cannot save workbook Solution: Check file permissions and path <pre><code>IF NOT wBook.Save('C:\\output.xls')\n   MESSAGE('Error saving file - check permissions')\nEND\n</code></pre></p>"},{"location":"products/taboga/tne/troubleshooting/#best-practices","title":"\u2728 Best Practices","text":"<ol> <li>Always initialize before use</li> <li>Reset styles between operations</li> <li>Clean up resources with Kill()</li> <li>Use error handling for file operations</li> <li>Check file paths and permissions</li> </ol>"},{"location":"products/taboga/tne/troubleshooting/#getting-help","title":"\ud83e\udd1d Getting Help","text":"<p>For technical assistance: - Email: support@fomintools.com - Include example code demonstrating the issue - Provide Clarion version and OS details</p>"},{"location":"products/taboga/tne/tutorial/","title":"Tutorial","text":"<p>The TNativeExcel library is a native excel biff format interface for writing Excel 2003 files (BIFF8). Below we have a number of short example programs which show the basics of working with the library.</p> <p>Please note that all of these tutorial examples have been included in the TNativeExcelDemo.APP included with this library.</p> <p>For each example we have included the source code formatted in Courier New, and right afterwards the expected output.</p>"},{"location":"products/taboga/tne/tutorial/#1-basic-examples","title":"1. \ud83c\udfaf Basic Examples","text":""},{"location":"products/taboga/tne/tutorial/#minimum-example-of-writing-some-labels","title":"\u2728 Minimum example of writing some labels","text":"<pre><code>CODE\n!#############################################################################\n! EXAMPLE 1:  Simple excel workbook\n!\n! (c) Taboga Software (2009)\n!#############################################################################\n       program\n    map\n    end\n INCLUDE('TWorkbook.INC')\no       TWorkbook\n           code\n  o.Init()                              !Initialize the library\n  o.TakeLabel('A1','Test')              !Add some labels\n  o.TakeLabel('A2','Second line')\n  o.TakeLabel('A3','3line')\n  o.TakeLabel('A4','4 line')\n  o.TakeLabel('A10','40 line')\n  o.Save()                              !Save spreadsheet (library will ask for filename).\n  o.Kill                                !Finish up\n</code></pre>"},{"location":"products/taboga/tne/tutorial/#another-simple-example-but-we-now-work-with-different-fonts","title":"\ud83c\udfa8 Another simple example, but we now work with different fonts.","text":"<pre><code>CODE\n       program\n!#############################################################################\n! EXAMPLE 2:  FONT PROPERTIES\n!\n! (c) Taboga Software (2009)\n!#############################################################################\n       program\n INCLUDE('TWorkbook.INC'),ONCE\n    map\n    end\no       TWorkbook\n\nxFont1      SHORT\nxFont2      SHORT\nxFont3      SHORT\nxFont4      SHORT\n           code\n  o.Init()\n  o.SetColumnWidth(1,1,60)          !Set the width of the first column to 60 characters\u2026\n  !\n  !By default, the font is Arial 10.   This is excel's default font.\n  !\n  !You can specify what font to use in one of three ways:\n  !(1) You can change specific font properties one by one.\n  !    \n  !(2) You can call the SetFont method right before writing to the worksheet\n  !    cells.   This changes ALL the font properties at once.\n  !\n  !(3) You can call SetFont first and store the FontID returned into a local\n  !    variable, and calling SetCurrentFontID before writing data.\n  !\n\n  !1)  We can specify font properties one by one:\n  o.style.FontName = 'Times New Roman'\n  o.TakeLabel('A1','Times New Roman, and uses default size of 10')\n\n  o.style.FontStyle = FONT:BOLD\n  o.TakeLabel('A2','Add bold to font properties')\n\n  o.style.FontColor = COLOR:RED\n  o.TakeLabel('A3','Make color red now...')\n\n  o.style.Reset()      !Font properties are RESET here...\n\n  o.TakeLabel('A4','style.Reset() called, default is Arial 10')\n\n\n  !2)  We can call directly the SetFont method before writing data:\n  o.SetFont('Arial',10)                                 \n  o.TakeLabel('A11','Arial 10')\n  o.SetFont('Times New Roman', 10,, FONT:BOLD)          \n  o.TakeLabel('A12','Time New Roman 10, BOLD')\n  o.SetFont('Arial', 10, COLOR:BLUE , FONT:BOLD+FONT:UNDERLINE)     \n  o.TakeLabel('A13','Arial 10, Bold&amp;Underline + Blue')\n  o.SetFont('Arial', 16,, FONT:BOLD + FONT:ITALIC)       \n  o.TakeLabel('A14','Arial 15, Bold &amp; Italic')\n  o.SetFont('Arial', 12,,FONT:UNDERLINE,,,xlsUnderline::Double)\n  o.TakeLabel('A15','Courier New 12, underline style = Double')\n  o.SetFont('Arial', 12,,FONT:UNDERLINE,,,xlsUnderline::SingleAccounting)\n  o.TakeLabel('A16,'Courier New 12, underline style = Single Accounting')\n  o.SetFont('Arial', 12,,FONT:UNDERLINE,,,xlsUnderline::DoubleAccounting)\n  o.TakeLabel('A17','Courier New 12, underline style = Double Accounting')\n\n  !3)  You can also store a \"Font ID\" for the fonts you want and call\n  !    SetCurrentFontID to set the font before writing.  If you have\n  !    to change fonts a lot this method is faster.\n  xFont1 = o.SetFont('Arial',10)                                 !font1\n  xFont2 = o.SetFont('Times New Roman', 10,, FONT:BOLD)          !font2\n  xFont3 = o.SetFont('Arial', 10, COLOR:BLUE , FONT:BOLD+FONT:UNDERLINE)     !font3\n  xFont4 = o.SetFont('Arial', 16,, FONT:BOLD+FONT:ITALIC)        !font4\n\n  o.SetCurrentFontID(xFont1)\n  o.TakeLabel('A21','This uses font ID# = ' &amp; xFont1)\n  o.SetCurrentFontID(xFont2)\n  o.TakeLabel('A22','This uses font ID# = ' &amp; xFont2)\n  o.SetCurrentFontID(xFont3)\n  o.TakeLabel('A23','This uses font ID# = ' &amp; xFont3)\n  o.SetCurrentFontID(xFont4)\n  o.TakeLabel('A24','This uses font ID# = ' &amp; xFont4)\n\n  o.SetCurrentFontID(xFont1)\n  o.TakeLabel('A25','this cell also uses font ID# ' &amp; xFont1)\n  o.SetFont('Arial',10)     !This has the same effect as doing o.SetCurrentFontID(xFont1)\n  o.TakeLabel('A26','this cell uses font id# ' &amp; o.CurrentFontID &amp; ', which it got using  ' &amp; |\n                    'SetFont')\n  o.SetCurrentFontID(xFont4)\n  o.TakeLabel('A27','This last cell uses FontID# ' &amp; xFont4 &amp; ', i.e. Arial 16 + BOLD +ITALIC '&amp;|\n                    'again, using the previously used font....')\n  o.Save\n  o.Kill  \n</code></pre>"},{"location":"products/taboga/tne/tutorial/#this-example-shows-how-you-can-change-a-columns-width-and-a-rows-height","title":"\ud83d\udcd0 This example shows how you can change a column's width and a row's height.","text":"<pre><code>CODE\n!#############################################################################\n! EXAMPLE 3:  Row Height and column width\u2026\n!\n! (c) Taboga Software (2009)\n!#############################################################################\n    program\n    map\n    end\n INCLUDE('TWorkbook.INC')\n\no       TWorkbook\n           code\n  o.Init()\n  o.SetRowHeight(1,30)\n  o.TakeLabel('A1','Excel Writer Class Demo #2')\n  o.SetColumnWidth(1,1,40)                          !Set column width to 40 characters wide\u2026\n  o.Save\n  o.Kill\n</code></pre>"},{"location":"products/taboga/tne/tutorial/#this-example-shows-how-to-specify-field-format-pictures","title":"\ud83c\udfa8 This example shows how to specify field format pictures.","text":"<pre><code>CODE\n       program\n!#############################################################################\n! EXAMPLE 4:  Format Pictures\n!\n! (c) Taboga Software (2009)\n!#############################################################################\n\n INCLUDE('TWorkbook.INC')\n    map\n    end\no       TWorkbook\n           code\n  o.Init\n  o.TakeNumber('A1',5.12345)\n\n  o.style.FormatPicture = '@N8.2'\n  o.TakeNumber('A2',5.12345)\n\n  o.style.FormatPicture = '@N8.3'\n  o.TakeNumber('A3',5.12345)\n\n  o.style.FormatPicture = '@N8.4'\n  o.TakeNumber('A4',5.12345)\n\n  o.style.FormatPicture = '@N8.5'\n  o.TakeNumber('A5',5.12345)\n\n\n  o.Save\n  o.Kill\n</code></pre>"},{"location":"products/taboga/tne/tutorial/#2-formulas","title":"2. \ud83e\uddee Formulas","text":""},{"location":"products/taboga/tne/tutorial/#various-simple-formulas","title":"\u26a1 Various simple formulas","text":"<pre><code>CODE\n!#############################################################################\n! FORMULA EXAMPLE 1:  Some simple formulas\n!\n! (c) Taboga Software (2009)\n!#############################################################################\n       program\n\n INCLUDE('TWorkbook.INC')\n    map\n    end\no       TWorkbook\n           code\n  o.Init()                              !Initialize the library.....\n  !\n  !Add some numbers to the worksheet...\n  o.TakeNumber('A1',1)\n  o.TakeNumber('A2',2) \n  o.TakeNumber('A3',3)\n  o.TakeNumber('A4',4)\n  o.TakeNumber('A5',5)\n  o.TakeNumber('A6',6)\n  o.TakeNumber('A7',7)\n  o.TakeNumber('A8',8)\n  o.TakeNumber('A9',9)\n  o.TakeNumber('A10',10)\n  o.TakeNumber('A11',11)\n  o.TakeNumber('A12',12)\n  o.TakeNumber('A13',13)\n  o.TakeNumber('A14',14)\n  o.TakeNumber('A15',15)\n  o.TakeNumber('A16',16)\n  o.TakeNumber('A17',17)\n  o.TakeNumber('A18',18)\n  o.TakeNumber('A19',19)\n  o.TakeNumber('A20',20)\n  !\n  !Do some basic formulas...\n  o.Takeformula('B1','=3+5+3')\n  o.Takeformula('B2','=(3+5*3)-4+3')\n  o.Takeformula('B3','=B$5')\n  o.Takeformula('B4','=ABS(A1)')\n  o.Takeformula('B5','=ABS(44.33)')\n  o.Takeformula('B6','=2+4*5')\n  o.Takeformula('B7','=A3*-A1')\n  o.Takeformula('B8','=COUNT(A1:A6)')\n  o.Takeformula('B9','=3%')\n  o.Takeformula('B10','=4*3*2')\n  o.Takeformula('B11','=4^3^2')\n  o.Takeformula('B12','=SUM(A1,A2:A4,B6,C8:D10)')\n  o.Takeformula('B13','=SUM(A2,A1+3)')\n  o.Takeformula('B14','=SUM(A1,B1+4,C1:D34,ABS($F15))')\n  o.Takeformula('B15','=2*4+4*3-2+11-14/3*11*1-3')\n  o.Takeformula('B16','=SUM(A1)')\n  o.Takeformula('B17','=4^3*2')\n  o.Takeformula('B18','=4*3^2')\n  !\n  o.Save\n  o.Kill\n</code></pre>"},{"location":"products/taboga/tne/tutorial/#more-formulas","title":"\ud83d\udd22 More formulas","text":"<pre><code>       program\n\n INCLUDE('TWorkbook.INC')\n    map\n    end\no       TWorkbook\n           code\n  o.Init()\n  !\n  !Add some numbers...\n  o.TakeNumber('A1',1)\n  o.TakeNumber('A2',2)\n  o.TakeNumber('A3',3)\n  o.TakeNumber('A4',4)\n  o.TakeNumber('A5',5)\n  o.TakeNumber('A6',6)\n  o.TakeNumber('A7',7)\n  o.TakeNumber('A8',8)\n  o.TakeNumber('A9',9)\n  o.TakeNumber('A10',10)\n  o.TakeNumber('A11',11)\n  o.TakeNumber('A12',12)\n  o.TakeNumber('A13',13)\n  o.TakeNumber('A14',14)\n  o.TakeNumber('A15',15)\n  o.TakeNumber('A16',16)\n  o.TakeNumber('A17',17)\n  o.TakeNumber('A18',18)\n  o.TakeNumber('A19',19)\n  o.TakeNumber('A20',20)\n\n\n  o.TakeFormula('B1','=COUNT(A1:A20)')\n  o.TakeFormula('B2','=IF(A1=1,1,0)')       \n  o.TakeFormula('B3','=ISNA(A35:A57)')\n  o.TakeFormula('B4','=ISERROR(A35:A57)')\n  o.TakeFormula('B5','=SUM(A1:A20)')\n  o.TakeFormula('B6','=AVERAGE(A1:A20)')\n  o.TakeFormula('B7','=MIN(A1:A20)')\n  o.TakeFormula('B8','=MAX(A1:A20)')\n  o.TakeFormula('B9','=ROW(A1)')\n  o.TakeFormula('B10','=COLUMN(A1)')\n  o.TakeFormula('B11','=NA()')\n  o.TakeFormula('B12','=NPV(A1,A20)')\n  o.TakeFormula('B13','=STDEV(A1:A20)')\n  o.TakeFormula('B14','=DOLLAR(A1,A20)')\n  o.TakeFormula('B15','=FIXED(A1,A20)')\n  o.TakeFormula('B16','=SIN(A20)')\n  o.TakeFormula('B17','=COS(A20)')\n  o.TakeFormula('B18','=TAN(A20)')\n  o.TakeFormula('B19','=ARCTAN(A20)')\n  o.TakeFormula('B20','=PI()')\n  o.TakeFormula('B21','=SQRT(A20)')\n  o.TakeFormula('B22','=EXP(A5)')\n  o.TakeFormula('B23','=LN(A20)')\n  o.TakeFormula('B24','=LOG10(A20)')\n  o.TakeFormula('B25','=ABS(-A20*100)')\n  o.TakeFormula('B26','=INT(A8/A3)')\n  o.TakeFormula('B27','=SIGN(-A20)')\n  o.TakeFormula('B28','=ROUND(A20*4.22413,A2)')\n\n\n  !\n  o.Save()\n  o.Kill \n</code></pre>"},{"location":"products/taboga/tne/workbook/","title":"Workbook Creation","text":""},{"location":"products/taboga/tne/workbook/#basic-concepts","title":"\ud83d\udcd6 Basic Concepts","text":"<p>The TNativeExcel library builds Excel workbooks entirely in memory before saving to disk. All operations are performed on a TWorkbook object which represents your Excel file.</p>"},{"location":"products/taboga/tne/workbook/#quick-start","title":"\ud83d\ude80 Quick Start","text":"<pre><code>PROGRAM\n  MAP\n  END\n\nINCLUDE('TWorkbook.INC')\nwBook      TWorkbook\n\n  CODE\n  wBook.Init()                              !Initialize workbook\n  wBook.TakeLabel('A1','Hello World')       !Write text to cell A1\n  wBook.TakeNumber('B1',42.5)              !Write number to cell B1\n  wBook.Save('example.xls')                 !Save to disk\n  wBook.Kill()                              !Clean up\n</code></pre>"},{"location":"products/taboga/tne/workbook/#core-operations","title":"\ud83d\udd27 Core Operations","text":""},{"location":"products/taboga/tne/workbook/#data-entry","title":"\ud83d\udcdd Data Entry","text":"<ul> <li><code>TakeLabel()</code> - Write text to a cell</li> <li><code>TakeNumber()</code> - Write numbers with decimal places</li> <li><code>TakeInteger()</code> - Write whole numbers</li> <li><code>TakeDate()</code> - Write dates</li> <li><code>TakeTime()</code> - Write times</li> </ul>"},{"location":"products/taboga/tne/workbook/#cell-references","title":"\ud83c\udfaf Cell References","text":"<p>Cells can be referenced either by: - Excel-style references (e.g. 'A1', 'B2') - Row/Column pairs (e.g. 1,1 for cell A1)</p>"},{"location":"products/taboga/tne/workbook/#memory-management","title":"\ud83d\udcbe Memory Management","text":"<p>The workbook is built entirely in memory until saved. Always call: 1. <code>Init()</code> to initialize 2. <code>Save()</code> to write to disk 3. <code>Kill()</code> to clean up</p>"},{"location":"products/taboga/trde/","title":"Overview","text":"<p>Export Clarion report data to multiple formats with ease.</p> <p>Taboga Report's Data Exporter (TRDE) is a powerful export utility that allows you to save Clarion report data in various formats including Excel, HTML, PDF and XML.</p>"},{"location":"products/taboga/trde/#key-features","title":"\u2728 Key Features","text":"<ul> <li>Multiple Formats: Export to Excel, HTML, PDF, and XML</li> <li>Template Integration: Works with ABC and Legacy reports</li> <li>Customizable Output: Control formatting and layout</li> <li>Preview Support: View exports before saving</li> </ul>"},{"location":"products/taboga/trde/#documentation","title":"\ud83d\udcda Documentation","text":"<ul> <li>\ud83d\udce5 Installation: Setup and configuration</li> <li>\ud83d\udcca Export Formats: Available output formats</li> <li>\ud83e\udde9 Template Usage: Template integration guide</li> <li>\ud83d\udcd6 API Reference: Complete class documentation</li> <li>\u2753 Troubleshooting: Common issues and solutions</li> </ul>"},{"location":"products/taboga/trde/#why-trde","title":"\ud83d\udd0d Why TRDE?","text":"<p>TRDE provides a flexible solution for exporting Clarion report data:</p> <ul> <li>Simple template-based implementation</li> <li>Multiple export format support</li> <li>Consistent formatting across outputs</li> <li>No external dependencies</li> </ul>"},{"location":"products/taboga/trde/#license","title":"\ud83d\udcdc License","text":"<p>TRDE is available for a fixed price including source code, templates, and technical support. Contact support@fomintools.com for licensing details.</p>"},{"location":"products/taboga/trde/#getting-started","title":"\ud83d\udeeb Getting Started","text":"<p>Begin with Installation to set up TRDE, then explore Export Formats to learn about available output options and supported formats.</p>"},{"location":"products/taboga/trde/#support","title":"\ud83d\udcde Support","text":"<p>For support and additional information:</p> <ul> <li>Email: support@fomintools.com</li> <li>Fomin Tools: https://fomintools.com</li> <li>Original Author: Edgard L. Riba (Taboga Software)</li> </ul>"},{"location":"products/taboga/trde/formats/","title":"Export Formats","text":""},{"location":"products/taboga/trde/formats/#supported-formats","title":"\ud83d\udcca Supported Formats","text":""},{"location":"products/taboga/trde/formats/#excel-format","title":"\ud83d\udcd1 Excel Format","text":"<ul> <li>XLSX and XLS support</li> <li>Custom formatting</li> <li>Multiple sheets</li> <li>Formula support</li> </ul>"},{"location":"products/taboga/trde/formats/#html-format","title":"\ud83c\udf10 HTML Format","text":"<ul> <li>Responsive layouts</li> <li>CSS styling</li> <li>Interactive tables</li> <li>Mobile friendly</li> </ul>"},{"location":"products/taboga/trde/formats/#pdf-format","title":"\ud83d\udcc4 PDF Format","text":"<ul> <li>Vector graphics</li> <li>Font embedding</li> <li>Page numbering</li> <li>TOC generation</li> </ul>"},{"location":"products/taboga/trde/formats/#xml-format","title":"\ud83d\udccb XML Format","text":"<ul> <li>Custom schemas</li> <li>XSLT support</li> <li>Data validation</li> <li>UTF-8 encoding</li> </ul>"},{"location":"products/taboga/trde/formats/#formatting-options","title":"\ud83c\udfa8 Formatting Options","text":""},{"location":"products/taboga/trde/formats/#layout-control","title":"\ud83d\udcd0 Layout Control","text":"<ul> <li>Margins and padding</li> <li>Column widths</li> <li>Page breaks</li> <li>Headers/Footers</li> </ul>"},{"location":"products/taboga/trde/formats/#data-types","title":"\ud83c\udfaf Data Types","text":"<ul> <li>Text alignment</li> <li>Number formats</li> <li>Date/Time formats</li> <li>Currency options</li> </ul>"},{"location":"products/taboga/trde/installation/","title":"Installation","text":""},{"location":"products/taboga/trde/installation/#file-structure","title":"\ud83d\udcc2 File Structure","text":""},{"location":"products/taboga/trde/installation/#library-files","title":"\ud83d\udce6 Library Files","text":"Component Location Source Files \\libsrc\\win Templates \\template\\win Examples \\examples\\Taboga\\TRDE"},{"location":"products/taboga/trde/installation/#setup-steps","title":"\ud83d\udd27 Setup Steps","text":""},{"location":"products/taboga/trde/installation/#1-library-installation","title":"1\ufe0f\u20e3 Library Installation","text":"<ol> <li>Copy source files to libsrc folder</li> <li>Register templates in IDE</li> <li>Add required includes</li> </ol>"},{"location":"products/taboga/trde/installation/#2-configuration","title":"2\ufe0f\u20e3 Configuration","text":"<ol> <li>Set export preferences</li> <li>Configure default paths</li> <li>Test installation</li> </ol>"},{"location":"products/taboga/trde/installation/#verification","title":"\u2705 Verification","text":"<p>Run included example application to verify setup</p>"},{"location":"products/taboga/trde/reference/","title":"API Reference","text":""},{"location":"products/taboga/trde/reference/#tdataexport-class","title":"\ud83d\udce6 TDataExport Class","text":""},{"location":"products/taboga/trde/reference/#properties","title":"\u2699\ufe0f Properties","text":"Property Type Description Format LONG Export format Options GROUP Export options Template STRING Template name"},{"location":"products/taboga/trde/reference/#methods","title":"\ud83d\udd27 Methods","text":""},{"location":"products/taboga/trde/reference/#core-methods","title":"\ud83d\ude80 Core Methods","text":"<pre><code>Init()                          !Initialize exporter\nSetFormat(LONG format)          !Set output format\nExport(STRING filename)         !Export to file\n</code></pre>"},{"location":"products/taboga/trde/reference/#constants","title":"\ud83d\udd0d Constants","text":""},{"location":"products/taboga/trde/reference/#export-formats","title":"\ud83d\udcca Export Formats","text":"<ul> <li>FORMAT:Excel</li> <li>FORMAT:HTML </li> <li>FORMAT:PDF</li> <li>FORMAT:XML</li> </ul>"},{"location":"products/taboga/trde/templates/","title":"Template Integration","text":""},{"location":"products/taboga/trde/templates/#template-overview","title":"\ud83e\udde9 Template Overview","text":""},{"location":"products/taboga/trde/templates/#global-extension","title":"\ud83c\udf10 Global Extension","text":"<pre><code>[APPLICATION]\nTEnableDataExport=1\n</code></pre>"},{"location":"products/taboga/trde/templates/#report-templates","title":"\ud83d\udccb Report Templates","text":"<ul> <li>Export Control</li> <li>Format Selection</li> <li>Output Options</li> </ul>"},{"location":"products/taboga/trde/templates/#implementation","title":"\ud83d\udd27 Implementation","text":""},{"location":"products/taboga/trde/templates/#export-control","title":"\ud83d\udce4 Export Control","text":"<pre><code>DataExport CLASS\n  CODE\n  SELF.Init()\n  SELF.SetFormat(FORMAT:Excel)\n  SELF.ExportReport()\n</code></pre>"},{"location":"products/taboga/trde/templates/#quick-actions","title":"\u26a1 Quick Actions","text":""},{"location":"products/taboga/trde/templates/#common-tasks","title":"\ud83c\udfaf Common Tasks","text":"<ul> <li>Add export button</li> <li>Configure formats</li> <li>Set default options</li> </ul>"},{"location":"products/taboga/trde/troubleshooting/","title":"Troubleshooting","text":""},{"location":"products/taboga/trde/troubleshooting/#common-issues","title":"\u2757 Common Issues","text":""},{"location":"products/taboga/trde/troubleshooting/#export-problems","title":"\ud83d\udce4 Export Problems","text":"<p>Issue: Export fails silently Solution: Enable debug logging <pre><code>DataExport.Debug(TRUE)\n</code></pre></p>"},{"location":"products/taboga/trde/troubleshooting/#format-issues","title":"\ud83c\udfa8 Format Issues","text":"<p>Issue: Incorrect formatting Solution: Check template settings</p>"},{"location":"products/taboga/trde/troubleshooting/#best-practices","title":"\u2728 Best Practices","text":"<ol> <li>Initialize properly</li> <li>Handle errors</li> <li>Clean up resources</li> <li>Validate output</li> </ol>"},{"location":"products/taboga/trde/troubleshooting/#support","title":"\ud83e\udd1d Support","text":"<p>For technical assistance: - Email: support@fomintools.com - Include export settings - Provide error logs</p>"}]}